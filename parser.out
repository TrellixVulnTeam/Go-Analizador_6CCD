Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> expresion
Rule 3     instrucciones -> condiciones
Rule 4     instrucciones -> sentenciaIf
Rule 5     instrucciones -> sentenciaFor
Rule 6     instrucciones -> print
Rule 7     instrucciones -> mapa
Rule 8     instrucciones -> puntero
Rule 9     instrucciones -> lectura
Rule 10    instrucciones -> array
Rule 11    instrucciones -> switch
Rule 12    instrucciones -> arrayAsig
Rule 13    instrucciones -> funcion
Rule 14    asignacion -> VAR VARIABLE BOOL IGUAL booleano
Rule 15    asignacion -> VAR VARIABLE INT IGUAL expresion
Rule 16    asignacion -> VAR VARIABLE FLOAT IGUAL expresion
Rule 17    asignacion -> VAR VARIABLE STRING IGUAL CADENA
Rule 18    asignacion -> VAR VARIABLE puntero IGUAL refer
Rule 19    asignacion -> VAR VARIABLE puntero
Rule 20    asignacion -> slices
Rule 21    asignacion -> VARIABLE DECLARADOR valor
Rule 22    asignacion -> VARIABLE IGUAL valor
Rule 23    asignacion -> VARIABLE MASIGUAL acumular
Rule 24    asignacion -> VARIABLE MENOSIGUAL expresion
Rule 25    asignacion -> derefer IGUAL valor
Rule 26    booleano -> condicion
Rule 27    booleano -> TRUE
Rule 28    booleano -> FALSE
Rule 29    valor -> booleano
Rule 30    valor -> expresion
Rule 31    valor -> CADENA
Rule 32    valor -> VARIABLE
Rule 33    valor -> mapa
Rule 34    valor -> refer
Rule 35    acumular -> expresion
Rule 36    acumular -> CADENA
Rule 37    acumular -> VARIABLE
Rule 38    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 39    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
Rule 40    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
Rule 41    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
Rule 42    sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 43    sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
Rule 44    else -> ELSE LLAVELEFT instrucciones LLAVERIGHT
Rule 45    else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 46    else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 47    else -> ELSE sentenciaIf
Rule 48    mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
Rule 49    mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
Rule 50    par -> dato DOSPUNTOS dato mas
Rule 51    par -> dato DOSPUNTOS dato
Rule 52    mas -> mas COMA dato DOSPUNTOS dato
Rule 53    mas -> COMA dato DOSPUNTOS dato
Rule 54    dato -> VARIABLE
Rule 55    dato -> expresion
Rule 56    dato -> CADENA
Rule 57    dato -> TRUE
Rule 58    dato -> FALSE
Rule 59    puntero -> PRODUCTO typeData
Rule 60    refer -> AMPERSAND VARIABLE
Rule 61    derefer -> PRODUCTO VARIABLE
Rule 62    sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
Rule 63    inicio -> VARIABLE DECLARADOR ENTERO
Rule 64    incrementa -> VARIABLE INCREMENTO
Rule 65    typeData -> BOOL
Rule 66    typeData -> INT
Rule 67    typeData -> FLOAT
Rule 68    typeData -> STRING
Rule 69    array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
Rule 70    arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
Rule 71    print -> IMPRIMIR PARLEFT contPrint PARRIGHT
Rule 72    contPrint -> contenido masCont
Rule 73    contPrint -> contenido
Rule 74    masCont -> masCont COMA contenido
Rule 75    masCont -> COMA contenido
Rule 76    contenido -> expresion
Rule 77    contenido -> CADENA
Rule 78    contenido -> VARIABLE
Rule 79    contenido -> <empty>
Rule 80    lectura -> SCAN PARLEFT contScan PARRIGHT
Rule 81    contScan -> AMPERSAND VARIABLE
Rule 82    contArray -> contArray COMA numericos
Rule 83    expresion -> expresion SUMA term
Rule 84    expresion -> expresion RESTA term
Rule 85    expresion -> expresion PRODUCTO term
Rule 86    expresion -> expresion DIVISION term
Rule 87    expresion -> expresion MODULO term
Rule 88    expresion -> term
Rule 89    contArray -> term
Rule 90    term -> numericos
Rule 91    factor -> numericos
Rule 92    factor -> VARIABLE
Rule 93    numericos -> ENTERO
Rule 94    numericos -> FLOTANTE
Rule 95    numericos -> PARLEFT expresion PARRIGHT
Rule 96    contenido_arrays -> contArray
Rule 97    contenido_arrays -> stringArray
Rule 98    stringArray -> COMILLA VARIABLE COMILLA COMA stringArray
Rule 99    stringArray -> COMILLA VARIABLE COMILLA
Rule 100   slices -> declaracion_slices
Rule 101   slices -> declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT
Rule 102   declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
Rule 103   declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
Rule 104   declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
Rule 105   declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
Rule 106   comparacion -> condiciones
Rule 107   comparacion -> NEGACION PARLEFT condiciones PARRIGHT
Rule 108   comparacion -> PARLEFT condiciones PARRIGHT
Rule 109   funcion -> funcion_sin_parametro
Rule 110   funcion -> funcion_parametro
Rule 111   funcion -> funcion_sin_parametro_return
Rule 112   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
Rule 113   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
Rule 114   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
Rule 115   funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 116   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
Rule 117   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
Rule 118   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
Rule 119   parametros -> VARIABLE
Rule 120   parametros -> VARIABLE COMA parametros
Rule 121   parametros -> typeData VARIABLE
Rule 122   parametros -> typeData VARIABLE COMA parametros
Rule 123   switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
Rule 124   bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK
Rule 125   bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones CONTINUE
Rule 126   bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
Rule 127   bloque_switch -> switch_default
Rule 128   caso_switch -> VARIABLE
Rule 129   caso_switch -> CADENA
Rule 130   caso_switch -> ENTERO
Rule 131   switch_default -> DEFAULT DOSPUNTOS instrucciones
Rule 132   condiciones -> factor MAYORQUE factor
Rule 133   condiciones -> factor MENORQUE factor
Rule 134   condiciones -> factor DIFERENTE factor
Rule 135   condiciones -> factor ESIGUAL factor
Rule 136   condiciones -> factor MENORIGUAL factor
Rule 137   condiciones -> factor MAYORIGUAL factor
Rule 138   comparaciones -> comparacion
Rule 139   comparaciones -> comparacion anado comparaciones
Rule 140   anado -> condicion
Rule 141   condicion -> AND
Rule 142   condicion -> OR
Rule 143   factor -> BOOL

Terminals, with rules where they appear

AMPERSAND            : 60 81
AND                  : 141
BOOL                 : 14 65 143
BREAK                : 124 126
CADENA               : 17 31 36 56 77 129
CASE                 : 124 125 126
COMA                 : 52 53 74 75 82 98 120 122
COMILLA              : 98 98 99 99
CONTINUE             : 125
CORCHLEFT            : 48 49 69 70 102 103 104 105
CORCHRIGHT           : 48 49 69 70 102 103 104 105
DECLARADOR           : 21 63 69
DEFAULT              : 131
DIFERENTE            : 134
DIVISION             : 86
DOSPUNTOS            : 50 51 52 53 124 125 126 131
ELSE                 : 44 45 46 47
ENTERO               : 63 69 70 93 102 104 130
ESIGUAL              : 135
FALSE                : 28 58
FLOAT                : 16 67
FLOTANTE             : 94
FOR                  : 62
FUNC                 : 112 113 114 115 116 117 118
IF                   : 38 39 40 41 42 43
IGUAL                : 14 15 16 17 18 22 25 102 103 104 105
IMPRIMIR             : 71
INCREMENTO           : 64
INT                  : 15 66
LLAVELEFT            : 38 39 40 41 42 43 44 45 46 48 49 62 69 101 112 113 114 115 116 117 118 123
LLAVERIGHT           : 38 39 40 41 42 43 44 45 46 48 49 62 69 101 112 113 114 115 116 117 118 123
MAP                  : 48 49
MASIGUAL             : 23
MAYORIGUAL           : 137
MAYORQUE             : 132
MENORIGUAL           : 136
MENORQUE             : 133
MENOSIGUAL           : 24
MODULO               : 87
NEGACION             : 107
OR                   : 142
PARLEFT              : 71 80 95 107 108 112 113 114 115 116 117 118
PARRIGHT             : 71 80 95 107 108 112 113 114 115 116 117 118
PRODUCTO             : 59 61 85
PUNTOCOMA            : 62 62
RESTA                : 84
RETURN               : 38 39 42 43 45 46 113 114 115 117 118
SCAN                 : 80
STRING               : 17 68
SUMA                 : 83
SWITCH               : 123
TRUE                 : 27 57
VAR                  : 14 15 16 17 18 19 70 102 103
VARIABLE             : 14 15 16 17 18 19 21 22 23 24 32 37 38 39 42 43 45 46 54 60 61 63 64 69 70 78 81 92 98 99 102 103 104 105 112 113 114 115 115 116 117 118 119 120 121 122 123 128
error                : 

Nonterminals, with rules where they appear

acumular             : 23
anado                : 139
array                : 10
arrayAsig            : 12
asignacion           : 1
bloque_switch        : 123 126
booleano             : 14 29
caso_switch          : 124 125 126
comparacion          : 138 139
comparaciones        : 38 39 40 41 42 43 139
condicion            : 26 140
condiciones          : 3 62 106 107 108
contArray            : 69 82 96
contPrint            : 71
contScan             : 80
contenido            : 72 73 74 75
contenido_arrays     : 101
dato                 : 50 50 51 51 52 52 53 53
declaracion_slices   : 100 101
derefer              : 25
else                 : 39 41 43
expresion            : 2 15 16 24 30 35 55 76 83 84 85 86 87 95
factor               : 132 132 133 133 134 134 135 135 136 136 137 137
funcion              : 13
funcion_parametro    : 110
funcion_sin_parametro : 109
funcion_sin_parametro_return : 111
incrementa           : 62
inicio               : 62
instrucciones        : 38 39 40 41 44 45 62 112 114 115 116 117 124 125 126 131 0
lectura              : 9
mapa                 : 7 33
mas                  : 50 52
masCont              : 72 74
numericos            : 82 90 91
par                  : 48
parametros           : 116 117 118 120 122
print                : 6
puntero              : 8 18 19
refer                : 18 34
sentenciaFor         : 5
sentenciaIf          : 4 47
slices               : 20
stringArray          : 97 98
switch               : 11
switch_default       : 127
term                 : 83 84 85 86 87 88 89
typeData             : 48 48 49 49 59 69 70 102 103 104 105 121 122
valor                : 21 22 25

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . slices
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . VARIABLE MASIGUAL acumular
    (24) asignacion -> . VARIABLE MENOSIGUAL expresion
    (25) asignacion -> . derefer IGUAL valor
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (62) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (71) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) puntero -> . PRODUCTO typeData
    (80) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (69) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (123) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (70) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (109) funcion -> . funcion_sin_parametro
    (110) funcion -> . funcion_parametro
    (111) funcion -> . funcion_sin_parametro_return
    (100) slices -> . declaracion_slices
    (101) slices -> . declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT
    (61) derefer -> . PRODUCTO VARIABLE
    (90) term -> . numericos
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (112) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (102) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (104) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 30
    BOOL            shift and go to state 17
    FUNC            shift and go to state 36
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    slices                         shift and go to state 18
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    funcion_sin_parametro          shift and go to state 31
    funcion_parametro              shift and go to state 32
    funcion_sin_parametro_return   shift and go to state 33
    declaracion_slices             shift and go to state 34
    numericos                      shift and go to state 35

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    RETURN          reduce using rule 1 (instrucciones -> asignacion .)
    LLAVERIGHT      reduce using rule 1 (instrucciones -> asignacion .)
    BREAK           reduce using rule 1 (instrucciones -> asignacion .)
    CONTINUE        reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> expresion .
    (83) expresion -> expresion . SUMA term
    (84) expresion -> expresion . RESTA term
    (85) expresion -> expresion . PRODUCTO term
    (86) expresion -> expresion . DIVISION term
    (87) expresion -> expresion . MODULO term

    $end            reduce using rule 2 (instrucciones -> expresion .)
    RETURN          reduce using rule 2 (instrucciones -> expresion .)
    LLAVERIGHT      reduce using rule 2 (instrucciones -> expresion .)
    BREAK           reduce using rule 2 (instrucciones -> expresion .)
    CONTINUE        reduce using rule 2 (instrucciones -> expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42


state 4

    (3) instrucciones -> condiciones .

    $end            reduce using rule 3 (instrucciones -> condiciones .)
    RETURN          reduce using rule 3 (instrucciones -> condiciones .)
    LLAVERIGHT      reduce using rule 3 (instrucciones -> condiciones .)
    BREAK           reduce using rule 3 (instrucciones -> condiciones .)
    CONTINUE        reduce using rule 3 (instrucciones -> condiciones .)


state 5

    (4) instrucciones -> sentenciaIf .

    $end            reduce using rule 4 (instrucciones -> sentenciaIf .)
    RETURN          reduce using rule 4 (instrucciones -> sentenciaIf .)
    LLAVERIGHT      reduce using rule 4 (instrucciones -> sentenciaIf .)
    BREAK           reduce using rule 4 (instrucciones -> sentenciaIf .)
    CONTINUE        reduce using rule 4 (instrucciones -> sentenciaIf .)


state 6

    (5) instrucciones -> sentenciaFor .

    $end            reduce using rule 5 (instrucciones -> sentenciaFor .)
    RETURN          reduce using rule 5 (instrucciones -> sentenciaFor .)
    LLAVERIGHT      reduce using rule 5 (instrucciones -> sentenciaFor .)
    BREAK           reduce using rule 5 (instrucciones -> sentenciaFor .)
    CONTINUE        reduce using rule 5 (instrucciones -> sentenciaFor .)


state 7

    (6) instrucciones -> print .

    $end            reduce using rule 6 (instrucciones -> print .)
    RETURN          reduce using rule 6 (instrucciones -> print .)
    LLAVERIGHT      reduce using rule 6 (instrucciones -> print .)
    BREAK           reduce using rule 6 (instrucciones -> print .)
    CONTINUE        reduce using rule 6 (instrucciones -> print .)


state 8

    (7) instrucciones -> mapa .

    $end            reduce using rule 7 (instrucciones -> mapa .)
    RETURN          reduce using rule 7 (instrucciones -> mapa .)
    LLAVERIGHT      reduce using rule 7 (instrucciones -> mapa .)
    BREAK           reduce using rule 7 (instrucciones -> mapa .)
    CONTINUE        reduce using rule 7 (instrucciones -> mapa .)


state 9

    (8) instrucciones -> puntero .

    $end            reduce using rule 8 (instrucciones -> puntero .)
    RETURN          reduce using rule 8 (instrucciones -> puntero .)
    LLAVERIGHT      reduce using rule 8 (instrucciones -> puntero .)
    BREAK           reduce using rule 8 (instrucciones -> puntero .)
    CONTINUE        reduce using rule 8 (instrucciones -> puntero .)


state 10

    (9) instrucciones -> lectura .

    $end            reduce using rule 9 (instrucciones -> lectura .)
    RETURN          reduce using rule 9 (instrucciones -> lectura .)
    LLAVERIGHT      reduce using rule 9 (instrucciones -> lectura .)
    BREAK           reduce using rule 9 (instrucciones -> lectura .)
    CONTINUE        reduce using rule 9 (instrucciones -> lectura .)


state 11

    (10) instrucciones -> array .

    $end            reduce using rule 10 (instrucciones -> array .)
    RETURN          reduce using rule 10 (instrucciones -> array .)
    LLAVERIGHT      reduce using rule 10 (instrucciones -> array .)
    BREAK           reduce using rule 10 (instrucciones -> array .)
    CONTINUE        reduce using rule 10 (instrucciones -> array .)


state 12

    (11) instrucciones -> switch .

    $end            reduce using rule 11 (instrucciones -> switch .)
    RETURN          reduce using rule 11 (instrucciones -> switch .)
    LLAVERIGHT      reduce using rule 11 (instrucciones -> switch .)
    BREAK           reduce using rule 11 (instrucciones -> switch .)
    CONTINUE        reduce using rule 11 (instrucciones -> switch .)


state 13

    (12) instrucciones -> arrayAsig .

    $end            reduce using rule 12 (instrucciones -> arrayAsig .)
    RETURN          reduce using rule 12 (instrucciones -> arrayAsig .)
    LLAVERIGHT      reduce using rule 12 (instrucciones -> arrayAsig .)
    BREAK           reduce using rule 12 (instrucciones -> arrayAsig .)
    CONTINUE        reduce using rule 12 (instrucciones -> arrayAsig .)


state 14

    (13) instrucciones -> funcion .

    $end            reduce using rule 13 (instrucciones -> funcion .)
    RETURN          reduce using rule 13 (instrucciones -> funcion .)
    LLAVERIGHT      reduce using rule 13 (instrucciones -> funcion .)
    BREAK           reduce using rule 13 (instrucciones -> funcion .)
    CONTINUE        reduce using rule 13 (instrucciones -> funcion .)


state 15

    (14) asignacion -> VAR . VARIABLE BOOL IGUAL booleano
    (15) asignacion -> VAR . VARIABLE INT IGUAL expresion
    (16) asignacion -> VAR . VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> VAR . VARIABLE STRING IGUAL CADENA
    (18) asignacion -> VAR . VARIABLE puntero IGUAL refer
    (19) asignacion -> VAR . VARIABLE puntero
    (70) arrayAsig -> VAR . VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (102) declaracion_slices -> VAR . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> VAR . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData

    VARIABLE        shift and go to state 43


state 16

    (21) asignacion -> VARIABLE . DECLARADOR valor
    (22) asignacion -> VARIABLE . IGUAL valor
    (23) asignacion -> VARIABLE . MASIGUAL acumular
    (24) asignacion -> VARIABLE . MENOSIGUAL expresion
    (69) array -> VARIABLE . DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (92) factor -> VARIABLE .
    (104) declaracion_slices -> VARIABLE . IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> VARIABLE . IGUAL CORCHLEFT CORCHRIGHT typeData

    DECLARADOR      shift and go to state 44
    IGUAL           shift and go to state 45
    MASIGUAL        shift and go to state 46
    MENOSIGUAL      shift and go to state 47
    MAYORQUE        reduce using rule 92 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 92 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 92 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 92 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 92 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 92 (factor -> VARIABLE .)


state 17

    (143) factor -> BOOL .

    MAYORQUE        reduce using rule 143 (factor -> BOOL .)
    MENORQUE        reduce using rule 143 (factor -> BOOL .)
    DIFERENTE       reduce using rule 143 (factor -> BOOL .)
    ESIGUAL         reduce using rule 143 (factor -> BOOL .)
    MENORIGUAL      reduce using rule 143 (factor -> BOOL .)
    MAYORIGUAL      reduce using rule 143 (factor -> BOOL .)
    $end            reduce using rule 143 (factor -> BOOL .)
    AND             reduce using rule 143 (factor -> BOOL .)
    OR              reduce using rule 143 (factor -> BOOL .)
    LLAVELEFT       reduce using rule 143 (factor -> BOOL .)
    PARRIGHT        reduce using rule 143 (factor -> BOOL .)
    RETURN          reduce using rule 143 (factor -> BOOL .)
    LLAVERIGHT      reduce using rule 143 (factor -> BOOL .)
    PUNTOCOMA       reduce using rule 143 (factor -> BOOL .)
    BREAK           reduce using rule 143 (factor -> BOOL .)
    CONTINUE        reduce using rule 143 (factor -> BOOL .)


state 18

    (20) asignacion -> slices .

    $end            reduce using rule 20 (asignacion -> slices .)
    RETURN          reduce using rule 20 (asignacion -> slices .)
    LLAVERIGHT      reduce using rule 20 (asignacion -> slices .)
    BREAK           reduce using rule 20 (asignacion -> slices .)
    CONTINUE        reduce using rule 20 (asignacion -> slices .)


state 19

    (25) asignacion -> derefer . IGUAL valor

    IGUAL           shift and go to state 48


state 20

    (88) expresion -> term .

    SUMA            reduce using rule 88 (expresion -> term .)
    RESTA           reduce using rule 88 (expresion -> term .)
    PRODUCTO        reduce using rule 88 (expresion -> term .)
    DIVISION        reduce using rule 88 (expresion -> term .)
    MODULO          reduce using rule 88 (expresion -> term .)
    $end            reduce using rule 88 (expresion -> term .)
    PARRIGHT        reduce using rule 88 (expresion -> term .)
    RETURN          reduce using rule 88 (expresion -> term .)
    LLAVERIGHT      reduce using rule 88 (expresion -> term .)
    BREAK           reduce using rule 88 (expresion -> term .)
    CONTINUE        reduce using rule 88 (expresion -> term .)
    COMA            reduce using rule 88 (expresion -> term .)
    DOSPUNTOS       reduce using rule 88 (expresion -> term .)


state 21

    (59) puntero -> PRODUCTO . typeData
    (61) derefer -> PRODUCTO . VARIABLE
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    VARIABLE        shift and go to state 50
    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 49

state 22

    (132) condiciones -> factor . MAYORQUE factor
    (133) condiciones -> factor . MENORQUE factor
    (134) condiciones -> factor . DIFERENTE factor
    (135) condiciones -> factor . ESIGUAL factor
    (136) condiciones -> factor . MENORIGUAL factor
    (137) condiciones -> factor . MAYORIGUAL factor

    MAYORQUE        shift and go to state 55
    MENORQUE        shift and go to state 56
    DIFERENTE       shift and go to state 57
    ESIGUAL         shift and go to state 58
    MENORIGUAL      shift and go to state 59
    MAYORIGUAL      shift and go to state 60


state 23

    (38) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> IF . comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> IF . comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (138) comparaciones -> . comparacion
    (139) comparaciones -> . comparacion anado comparaciones
    (106) comparacion -> . condiciones
    (107) comparacion -> . NEGACION PARLEFT condiciones PARRIGHT
    (108) comparacion -> . PARLEFT condiciones PARRIGHT
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    NEGACION        shift and go to state 65
    PARLEFT         shift and go to state 66
    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37

    comparaciones                  shift and go to state 61
    comparacion                    shift and go to state 63
    condiciones                    shift and go to state 64
    factor                         shift and go to state 22
    numericos                      shift and go to state 67

state 24

    (62) sentenciaFor -> FOR . inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (63) inicio -> . VARIABLE DECLARADOR ENTERO

    VARIABLE        shift and go to state 69

    inicio                         shift and go to state 68

state 25

    (71) print -> IMPRIMIR . PARLEFT contPrint PARRIGHT

    PARLEFT         shift and go to state 70


state 26

    (95) numericos -> PARLEFT . expresion PARRIGHT
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    expresion                      shift and go to state 71
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 27

    (48) mapa -> MAP . CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> MAP . CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT

    CORCHLEFT       shift and go to state 73


state 28

    (80) lectura -> SCAN . PARLEFT contScan PARRIGHT

    PARLEFT         shift and go to state 74


state 29

    (93) numericos -> ENTERO .

    SUMA            reduce using rule 93 (numericos -> ENTERO .)
    RESTA           reduce using rule 93 (numericos -> ENTERO .)
    PRODUCTO        reduce using rule 93 (numericos -> ENTERO .)
    DIVISION        reduce using rule 93 (numericos -> ENTERO .)
    MODULO          reduce using rule 93 (numericos -> ENTERO .)
    $end            reduce using rule 93 (numericos -> ENTERO .)
    MAYORQUE        reduce using rule 93 (numericos -> ENTERO .)
    MENORQUE        reduce using rule 93 (numericos -> ENTERO .)
    DIFERENTE       reduce using rule 93 (numericos -> ENTERO .)
    ESIGUAL         reduce using rule 93 (numericos -> ENTERO .)
    MENORIGUAL      reduce using rule 93 (numericos -> ENTERO .)
    MAYORIGUAL      reduce using rule 93 (numericos -> ENTERO .)
    PARRIGHT        reduce using rule 93 (numericos -> ENTERO .)
    RETURN          reduce using rule 93 (numericos -> ENTERO .)
    LLAVERIGHT      reduce using rule 93 (numericos -> ENTERO .)
    BREAK           reduce using rule 93 (numericos -> ENTERO .)
    CONTINUE        reduce using rule 93 (numericos -> ENTERO .)
    COMA            reduce using rule 93 (numericos -> ENTERO .)
    DOSPUNTOS       reduce using rule 93 (numericos -> ENTERO .)
    AND             reduce using rule 93 (numericos -> ENTERO .)
    OR              reduce using rule 93 (numericos -> ENTERO .)
    LLAVELEFT       reduce using rule 93 (numericos -> ENTERO .)
    PUNTOCOMA       reduce using rule 93 (numericos -> ENTERO .)


state 30

    (123) switch -> SWITCH . VARIABLE LLAVELEFT bloque_switch LLAVERIGHT

    VARIABLE        shift and go to state 75


state 31

    (109) funcion -> funcion_sin_parametro .

    $end            reduce using rule 109 (funcion -> funcion_sin_parametro .)
    RETURN          reduce using rule 109 (funcion -> funcion_sin_parametro .)
    LLAVERIGHT      reduce using rule 109 (funcion -> funcion_sin_parametro .)
    BREAK           reduce using rule 109 (funcion -> funcion_sin_parametro .)
    CONTINUE        reduce using rule 109 (funcion -> funcion_sin_parametro .)


state 32

    (110) funcion -> funcion_parametro .

    $end            reduce using rule 110 (funcion -> funcion_parametro .)
    RETURN          reduce using rule 110 (funcion -> funcion_parametro .)
    LLAVERIGHT      reduce using rule 110 (funcion -> funcion_parametro .)
    BREAK           reduce using rule 110 (funcion -> funcion_parametro .)
    CONTINUE        reduce using rule 110 (funcion -> funcion_parametro .)


state 33

    (111) funcion -> funcion_sin_parametro_return .

    $end            reduce using rule 111 (funcion -> funcion_sin_parametro_return .)
    RETURN          reduce using rule 111 (funcion -> funcion_sin_parametro_return .)
    LLAVERIGHT      reduce using rule 111 (funcion -> funcion_sin_parametro_return .)
    BREAK           reduce using rule 111 (funcion -> funcion_sin_parametro_return .)
    CONTINUE        reduce using rule 111 (funcion -> funcion_sin_parametro_return .)


state 34

    (100) slices -> declaracion_slices .
    (101) slices -> declaracion_slices . LLAVELEFT contenido_arrays LLAVERIGHT

    $end            reduce using rule 100 (slices -> declaracion_slices .)
    RETURN          reduce using rule 100 (slices -> declaracion_slices .)
    LLAVERIGHT      reduce using rule 100 (slices -> declaracion_slices .)
    BREAK           reduce using rule 100 (slices -> declaracion_slices .)
    CONTINUE        reduce using rule 100 (slices -> declaracion_slices .)
    LLAVELEFT       shift and go to state 76


state 35

    (90) term -> numericos .
    (91) factor -> numericos .

    SUMA            reduce using rule 90 (term -> numericos .)
    RESTA           reduce using rule 90 (term -> numericos .)
    PRODUCTO        reduce using rule 90 (term -> numericos .)
    DIVISION        reduce using rule 90 (term -> numericos .)
    MODULO          reduce using rule 90 (term -> numericos .)
    $end            reduce using rule 90 (term -> numericos .)
    RETURN          reduce using rule 90 (term -> numericos .)
    LLAVERIGHT      reduce using rule 90 (term -> numericos .)
    BREAK           reduce using rule 90 (term -> numericos .)
    CONTINUE        reduce using rule 90 (term -> numericos .)
    MAYORQUE        reduce using rule 91 (factor -> numericos .)
    MENORQUE        reduce using rule 91 (factor -> numericos .)
    DIFERENTE       reduce using rule 91 (factor -> numericos .)
    ESIGUAL         reduce using rule 91 (factor -> numericos .)
    MENORIGUAL      reduce using rule 91 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 91 (factor -> numericos .)


state 36

    (112) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 77


state 37

    (94) numericos -> FLOTANTE .

    SUMA            reduce using rule 94 (numericos -> FLOTANTE .)
    RESTA           reduce using rule 94 (numericos -> FLOTANTE .)
    PRODUCTO        reduce using rule 94 (numericos -> FLOTANTE .)
    DIVISION        reduce using rule 94 (numericos -> FLOTANTE .)
    MODULO          reduce using rule 94 (numericos -> FLOTANTE .)
    $end            reduce using rule 94 (numericos -> FLOTANTE .)
    MAYORQUE        reduce using rule 94 (numericos -> FLOTANTE .)
    MENORQUE        reduce using rule 94 (numericos -> FLOTANTE .)
    DIFERENTE       reduce using rule 94 (numericos -> FLOTANTE .)
    ESIGUAL         reduce using rule 94 (numericos -> FLOTANTE .)
    MENORIGUAL      reduce using rule 94 (numericos -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 94 (numericos -> FLOTANTE .)
    PARRIGHT        reduce using rule 94 (numericos -> FLOTANTE .)
    RETURN          reduce using rule 94 (numericos -> FLOTANTE .)
    LLAVERIGHT      reduce using rule 94 (numericos -> FLOTANTE .)
    BREAK           reduce using rule 94 (numericos -> FLOTANTE .)
    CONTINUE        reduce using rule 94 (numericos -> FLOTANTE .)
    COMA            reduce using rule 94 (numericos -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 94 (numericos -> FLOTANTE .)
    AND             reduce using rule 94 (numericos -> FLOTANTE .)
    OR              reduce using rule 94 (numericos -> FLOTANTE .)
    LLAVELEFT       reduce using rule 94 (numericos -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 94 (numericos -> FLOTANTE .)


state 38

    (83) expresion -> expresion SUMA . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    term                           shift and go to state 78
    numericos                      shift and go to state 72

state 39

    (84) expresion -> expresion RESTA . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    term                           shift and go to state 79
    numericos                      shift and go to state 72

state 40

    (85) expresion -> expresion PRODUCTO . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    term                           shift and go to state 80
    numericos                      shift and go to state 72

state 41

    (86) expresion -> expresion DIVISION . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    term                           shift and go to state 81
    numericos                      shift and go to state 72

state 42

    (87) expresion -> expresion MODULO . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    term                           shift and go to state 82
    numericos                      shift and go to state 72

state 43

    (14) asignacion -> VAR VARIABLE . BOOL IGUAL booleano
    (15) asignacion -> VAR VARIABLE . INT IGUAL expresion
    (16) asignacion -> VAR VARIABLE . FLOAT IGUAL expresion
    (17) asignacion -> VAR VARIABLE . STRING IGUAL CADENA
    (18) asignacion -> VAR VARIABLE . puntero IGUAL refer
    (19) asignacion -> VAR VARIABLE . puntero
    (70) arrayAsig -> VAR VARIABLE . CORCHLEFT ENTERO CORCHRIGHT typeData
    (102) declaracion_slices -> VAR VARIABLE . IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> VAR VARIABLE . IGUAL CORCHLEFT CORCHRIGHT typeData
    (59) puntero -> . PRODUCTO typeData

    BOOL            shift and go to state 83
    INT             shift and go to state 85
    FLOAT           shift and go to state 86
    STRING          shift and go to state 87
    CORCHLEFT       shift and go to state 89
    IGUAL           shift and go to state 84
    PRODUCTO        shift and go to state 90

    puntero                        shift and go to state 88

state 44

    (21) asignacion -> VARIABLE DECLARADOR . valor
    (69) array -> VARIABLE DECLARADOR . CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (29) valor -> . booleano
    (30) valor -> . expresion
    (31) valor -> . CADENA
    (32) valor -> . VARIABLE
    (33) valor -> . mapa
    (34) valor -> . refer
    (26) booleano -> . condicion
    (27) booleano -> . TRUE
    (28) booleano -> . FALSE
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (60) refer -> . AMPERSAND VARIABLE
    (141) condicion -> . AND
    (142) condicion -> . OR
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    CORCHLEFT       shift and go to state 93
    CADENA          shift and go to state 96
    VARIABLE        shift and go to state 91
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    MAP             shift and go to state 27
    AMPERSAND       shift and go to state 102
    AND             shift and go to state 103
    OR              shift and go to state 104
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    valor                          shift and go to state 92
    booleano                       shift and go to state 94
    expresion                      shift and go to state 95
    mapa                           shift and go to state 97
    refer                          shift and go to state 98
    condicion                      shift and go to state 99
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 45

    (22) asignacion -> VARIABLE IGUAL . valor
    (104) declaracion_slices -> VARIABLE IGUAL . CORCHLEFT ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> VARIABLE IGUAL . CORCHLEFT CORCHRIGHT typeData
    (29) valor -> . booleano
    (30) valor -> . expresion
    (31) valor -> . CADENA
    (32) valor -> . VARIABLE
    (33) valor -> . mapa
    (34) valor -> . refer
    (26) booleano -> . condicion
    (27) booleano -> . TRUE
    (28) booleano -> . FALSE
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (60) refer -> . AMPERSAND VARIABLE
    (141) condicion -> . AND
    (142) condicion -> . OR
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    CORCHLEFT       shift and go to state 106
    CADENA          shift and go to state 96
    VARIABLE        shift and go to state 91
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    MAP             shift and go to state 27
    AMPERSAND       shift and go to state 102
    AND             shift and go to state 103
    OR              shift and go to state 104
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    valor                          shift and go to state 105
    booleano                       shift and go to state 94
    expresion                      shift and go to state 95
    mapa                           shift and go to state 97
    refer                          shift and go to state 98
    condicion                      shift and go to state 99
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 46

    (23) asignacion -> VARIABLE MASIGUAL . acumular
    (35) acumular -> . expresion
    (36) acumular -> . CADENA
    (37) acumular -> . VARIABLE
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 110
    VARIABLE        shift and go to state 107
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    acumular                       shift and go to state 108
    expresion                      shift and go to state 109
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 47

    (24) asignacion -> VARIABLE MENOSIGUAL . expresion
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    expresion                      shift and go to state 111
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 48

    (25) asignacion -> derefer IGUAL . valor
    (29) valor -> . booleano
    (30) valor -> . expresion
    (31) valor -> . CADENA
    (32) valor -> . VARIABLE
    (33) valor -> . mapa
    (34) valor -> . refer
    (26) booleano -> . condicion
    (27) booleano -> . TRUE
    (28) booleano -> . FALSE
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (60) refer -> . AMPERSAND VARIABLE
    (141) condicion -> . AND
    (142) condicion -> . OR
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 96
    VARIABLE        shift and go to state 91
    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    MAP             shift and go to state 27
    AMPERSAND       shift and go to state 102
    AND             shift and go to state 103
    OR              shift and go to state 104
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    valor                          shift and go to state 112
    booleano                       shift and go to state 94
    expresion                      shift and go to state 95
    mapa                           shift and go to state 97
    refer                          shift and go to state 98
    condicion                      shift and go to state 99
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 49

    (59) puntero -> PRODUCTO typeData .

    $end            reduce using rule 59 (puntero -> PRODUCTO typeData .)
    IGUAL           reduce using rule 59 (puntero -> PRODUCTO typeData .)
    RETURN          reduce using rule 59 (puntero -> PRODUCTO typeData .)
    LLAVERIGHT      reduce using rule 59 (puntero -> PRODUCTO typeData .)
    BREAK           reduce using rule 59 (puntero -> PRODUCTO typeData .)
    CONTINUE        reduce using rule 59 (puntero -> PRODUCTO typeData .)


state 50

    (61) derefer -> PRODUCTO VARIABLE .

    IGUAL           reduce using rule 61 (derefer -> PRODUCTO VARIABLE .)


state 51

    (65) typeData -> BOOL .

    $end            reduce using rule 65 (typeData -> BOOL .)
    RETURN          reduce using rule 65 (typeData -> BOOL .)
    LLAVERIGHT      reduce using rule 65 (typeData -> BOOL .)
    BREAK           reduce using rule 65 (typeData -> BOOL .)
    CONTINUE        reduce using rule 65 (typeData -> BOOL .)
    CORCHRIGHT      reduce using rule 65 (typeData -> BOOL .)
    IGUAL           reduce using rule 65 (typeData -> BOOL .)
    VARIABLE        reduce using rule 65 (typeData -> BOOL .)
    LLAVELEFT       reduce using rule 65 (typeData -> BOOL .)


state 52

    (66) typeData -> INT .

    $end            reduce using rule 66 (typeData -> INT .)
    RETURN          reduce using rule 66 (typeData -> INT .)
    LLAVERIGHT      reduce using rule 66 (typeData -> INT .)
    BREAK           reduce using rule 66 (typeData -> INT .)
    CONTINUE        reduce using rule 66 (typeData -> INT .)
    CORCHRIGHT      reduce using rule 66 (typeData -> INT .)
    IGUAL           reduce using rule 66 (typeData -> INT .)
    VARIABLE        reduce using rule 66 (typeData -> INT .)
    LLAVELEFT       reduce using rule 66 (typeData -> INT .)


state 53

    (67) typeData -> FLOAT .

    $end            reduce using rule 67 (typeData -> FLOAT .)
    RETURN          reduce using rule 67 (typeData -> FLOAT .)
    LLAVERIGHT      reduce using rule 67 (typeData -> FLOAT .)
    BREAK           reduce using rule 67 (typeData -> FLOAT .)
    CONTINUE        reduce using rule 67 (typeData -> FLOAT .)
    CORCHRIGHT      reduce using rule 67 (typeData -> FLOAT .)
    IGUAL           reduce using rule 67 (typeData -> FLOAT .)
    VARIABLE        reduce using rule 67 (typeData -> FLOAT .)
    LLAVELEFT       reduce using rule 67 (typeData -> FLOAT .)


state 54

    (68) typeData -> STRING .

    $end            reduce using rule 68 (typeData -> STRING .)
    RETURN          reduce using rule 68 (typeData -> STRING .)
    LLAVERIGHT      reduce using rule 68 (typeData -> STRING .)
    BREAK           reduce using rule 68 (typeData -> STRING .)
    CONTINUE        reduce using rule 68 (typeData -> STRING .)
    CORCHRIGHT      reduce using rule 68 (typeData -> STRING .)
    IGUAL           reduce using rule 68 (typeData -> STRING .)
    VARIABLE        reduce using rule 68 (typeData -> STRING .)
    LLAVELEFT       reduce using rule 68 (typeData -> STRING .)


state 55

    (132) condiciones -> factor MAYORQUE . factor
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 113
    numericos                      shift and go to state 67

state 56

    (133) condiciones -> factor MENORQUE . factor
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 114
    numericos                      shift and go to state 67

state 57

    (134) condiciones -> factor DIFERENTE . factor
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 115
    numericos                      shift and go to state 67

state 58

    (135) condiciones -> factor ESIGUAL . factor
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 116
    numericos                      shift and go to state 67

state 59

    (136) condiciones -> factor MENORIGUAL . factor
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 117
    numericos                      shift and go to state 67

state 60

    (137) condiciones -> factor MAYORIGUAL . factor
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 118
    numericos                      shift and go to state 67

state 61

    (38) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> IF comparaciones . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> IF comparaciones . LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 119


state 62

    (92) factor -> VARIABLE .

    MAYORQUE        reduce using rule 92 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 92 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 92 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 92 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 92 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 92 (factor -> VARIABLE .)
    $end            reduce using rule 92 (factor -> VARIABLE .)
    AND             reduce using rule 92 (factor -> VARIABLE .)
    OR              reduce using rule 92 (factor -> VARIABLE .)
    LLAVELEFT       reduce using rule 92 (factor -> VARIABLE .)
    PARRIGHT        reduce using rule 92 (factor -> VARIABLE .)
    RETURN          reduce using rule 92 (factor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 92 (factor -> VARIABLE .)
    PUNTOCOMA       reduce using rule 92 (factor -> VARIABLE .)
    BREAK           reduce using rule 92 (factor -> VARIABLE .)
    CONTINUE        reduce using rule 92 (factor -> VARIABLE .)


state 63

    (138) comparaciones -> comparacion .
    (139) comparaciones -> comparacion . anado comparaciones
    (140) anado -> . condicion
    (141) condicion -> . AND
    (142) condicion -> . OR

    LLAVELEFT       reduce using rule 138 (comparaciones -> comparacion .)
    AND             shift and go to state 103
    OR              shift and go to state 104

    anado                          shift and go to state 120
    condicion                      shift and go to state 121

state 64

    (106) comparacion -> condiciones .

    AND             reduce using rule 106 (comparacion -> condiciones .)
    OR              reduce using rule 106 (comparacion -> condiciones .)
    LLAVELEFT       reduce using rule 106 (comparacion -> condiciones .)


state 65

    (107) comparacion -> NEGACION . PARLEFT condiciones PARRIGHT

    PARLEFT         shift and go to state 122


state 66

    (108) comparacion -> PARLEFT . condiciones PARRIGHT
    (95) numericos -> PARLEFT . expresion PARRIGHT
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    condiciones                    shift and go to state 123
    expresion                      shift and go to state 71
    factor                         shift and go to state 22
    term                           shift and go to state 20
    numericos                      shift and go to state 124

state 67

    (91) factor -> numericos .

    MAYORQUE        reduce using rule 91 (factor -> numericos .)
    MENORQUE        reduce using rule 91 (factor -> numericos .)
    DIFERENTE       reduce using rule 91 (factor -> numericos .)
    ESIGUAL         reduce using rule 91 (factor -> numericos .)
    MENORIGUAL      reduce using rule 91 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 91 (factor -> numericos .)
    $end            reduce using rule 91 (factor -> numericos .)
    AND             reduce using rule 91 (factor -> numericos .)
    OR              reduce using rule 91 (factor -> numericos .)
    LLAVELEFT       reduce using rule 91 (factor -> numericos .)
    PARRIGHT        reduce using rule 91 (factor -> numericos .)
    RETURN          reduce using rule 91 (factor -> numericos .)
    LLAVERIGHT      reduce using rule 91 (factor -> numericos .)
    PUNTOCOMA       reduce using rule 91 (factor -> numericos .)
    BREAK           reduce using rule 91 (factor -> numericos .)
    CONTINUE        reduce using rule 91 (factor -> numericos .)


state 68

    (62) sentenciaFor -> FOR inicio . PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 125


state 69

    (63) inicio -> VARIABLE . DECLARADOR ENTERO

    DECLARADOR      shift and go to state 126


state 70

    (71) print -> IMPRIMIR PARLEFT . contPrint PARRIGHT
    (72) contPrint -> . contenido masCont
    (73) contPrint -> . contenido
    (76) contenido -> . expresion
    (77) contenido -> . CADENA
    (78) contenido -> . VARIABLE
    (79) contenido -> .
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 130
    VARIABLE        shift and go to state 131
    COMA            reduce using rule 79 (contenido -> .)
    PARRIGHT        reduce using rule 79 (contenido -> .)
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    contPrint                      shift and go to state 127
    contenido                      shift and go to state 128
    expresion                      shift and go to state 129
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 71

    (95) numericos -> PARLEFT expresion . PARRIGHT
    (83) expresion -> expresion . SUMA term
    (84) expresion -> expresion . RESTA term
    (85) expresion -> expresion . PRODUCTO term
    (86) expresion -> expresion . DIVISION term
    (87) expresion -> expresion . MODULO term

    PARRIGHT        shift and go to state 132
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42


state 72

    (90) term -> numericos .

    PARRIGHT        reduce using rule 90 (term -> numericos .)
    SUMA            reduce using rule 90 (term -> numericos .)
    RESTA           reduce using rule 90 (term -> numericos .)
    PRODUCTO        reduce using rule 90 (term -> numericos .)
    DIVISION        reduce using rule 90 (term -> numericos .)
    MODULO          reduce using rule 90 (term -> numericos .)
    $end            reduce using rule 90 (term -> numericos .)
    RETURN          reduce using rule 90 (term -> numericos .)
    LLAVERIGHT      reduce using rule 90 (term -> numericos .)
    BREAK           reduce using rule 90 (term -> numericos .)
    CONTINUE        reduce using rule 90 (term -> numericos .)
    COMA            reduce using rule 90 (term -> numericos .)
    DOSPUNTOS       reduce using rule 90 (term -> numericos .)


state 73

    (48) mapa -> MAP CORCHLEFT . typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> MAP CORCHLEFT . typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 133

state 74

    (80) lectura -> SCAN PARLEFT . contScan PARRIGHT
    (81) contScan -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 135

    contScan                       shift and go to state 134

state 75

    (123) switch -> SWITCH VARIABLE . LLAVELEFT bloque_switch LLAVERIGHT

    LLAVELEFT       shift and go to state 136


state 76

    (101) slices -> declaracion_slices LLAVELEFT . contenido_arrays LLAVERIGHT
    (96) contenido_arrays -> . contArray
    (97) contenido_arrays -> . stringArray
    (82) contArray -> . contArray COMA numericos
    (89) contArray -> . term
    (98) stringArray -> . COMILLA VARIABLE COMILLA COMA stringArray
    (99) stringArray -> . COMILLA VARIABLE COMILLA
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    COMILLA         shift and go to state 141
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    contenido_arrays               shift and go to state 137
    contArray                      shift and go to state 138
    stringArray                    shift and go to state 139
    numericos                      shift and go to state 72
    term                           shift and go to state 140

state 77

    (112) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    PARLEFT         shift and go to state 142


state 78

    (83) expresion -> expresion SUMA term .

    SUMA            reduce using rule 83 (expresion -> expresion SUMA term .)
    RESTA           reduce using rule 83 (expresion -> expresion SUMA term .)
    PRODUCTO        reduce using rule 83 (expresion -> expresion SUMA term .)
    DIVISION        reduce using rule 83 (expresion -> expresion SUMA term .)
    MODULO          reduce using rule 83 (expresion -> expresion SUMA term .)
    $end            reduce using rule 83 (expresion -> expresion SUMA term .)
    PARRIGHT        reduce using rule 83 (expresion -> expresion SUMA term .)
    RETURN          reduce using rule 83 (expresion -> expresion SUMA term .)
    LLAVERIGHT      reduce using rule 83 (expresion -> expresion SUMA term .)
    BREAK           reduce using rule 83 (expresion -> expresion SUMA term .)
    CONTINUE        reduce using rule 83 (expresion -> expresion SUMA term .)
    COMA            reduce using rule 83 (expresion -> expresion SUMA term .)
    DOSPUNTOS       reduce using rule 83 (expresion -> expresion SUMA term .)


state 79

    (84) expresion -> expresion RESTA term .

    SUMA            reduce using rule 84 (expresion -> expresion RESTA term .)
    RESTA           reduce using rule 84 (expresion -> expresion RESTA term .)
    PRODUCTO        reduce using rule 84 (expresion -> expresion RESTA term .)
    DIVISION        reduce using rule 84 (expresion -> expresion RESTA term .)
    MODULO          reduce using rule 84 (expresion -> expresion RESTA term .)
    $end            reduce using rule 84 (expresion -> expresion RESTA term .)
    PARRIGHT        reduce using rule 84 (expresion -> expresion RESTA term .)
    RETURN          reduce using rule 84 (expresion -> expresion RESTA term .)
    LLAVERIGHT      reduce using rule 84 (expresion -> expresion RESTA term .)
    BREAK           reduce using rule 84 (expresion -> expresion RESTA term .)
    CONTINUE        reduce using rule 84 (expresion -> expresion RESTA term .)
    COMA            reduce using rule 84 (expresion -> expresion RESTA term .)
    DOSPUNTOS       reduce using rule 84 (expresion -> expresion RESTA term .)


state 80

    (85) expresion -> expresion PRODUCTO term .

    SUMA            reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    RESTA           reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    PRODUCTO        reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    DIVISION        reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    MODULO          reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    $end            reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    PARRIGHT        reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    RETURN          reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    LLAVERIGHT      reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    BREAK           reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    CONTINUE        reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    COMA            reduce using rule 85 (expresion -> expresion PRODUCTO term .)
    DOSPUNTOS       reduce using rule 85 (expresion -> expresion PRODUCTO term .)


state 81

    (86) expresion -> expresion DIVISION term .

    SUMA            reduce using rule 86 (expresion -> expresion DIVISION term .)
    RESTA           reduce using rule 86 (expresion -> expresion DIVISION term .)
    PRODUCTO        reduce using rule 86 (expresion -> expresion DIVISION term .)
    DIVISION        reduce using rule 86 (expresion -> expresion DIVISION term .)
    MODULO          reduce using rule 86 (expresion -> expresion DIVISION term .)
    $end            reduce using rule 86 (expresion -> expresion DIVISION term .)
    PARRIGHT        reduce using rule 86 (expresion -> expresion DIVISION term .)
    RETURN          reduce using rule 86 (expresion -> expresion DIVISION term .)
    LLAVERIGHT      reduce using rule 86 (expresion -> expresion DIVISION term .)
    BREAK           reduce using rule 86 (expresion -> expresion DIVISION term .)
    CONTINUE        reduce using rule 86 (expresion -> expresion DIVISION term .)
    COMA            reduce using rule 86 (expresion -> expresion DIVISION term .)
    DOSPUNTOS       reduce using rule 86 (expresion -> expresion DIVISION term .)


state 82

    (87) expresion -> expresion MODULO term .

    SUMA            reduce using rule 87 (expresion -> expresion MODULO term .)
    RESTA           reduce using rule 87 (expresion -> expresion MODULO term .)
    PRODUCTO        reduce using rule 87 (expresion -> expresion MODULO term .)
    DIVISION        reduce using rule 87 (expresion -> expresion MODULO term .)
    MODULO          reduce using rule 87 (expresion -> expresion MODULO term .)
    $end            reduce using rule 87 (expresion -> expresion MODULO term .)
    PARRIGHT        reduce using rule 87 (expresion -> expresion MODULO term .)
    RETURN          reduce using rule 87 (expresion -> expresion MODULO term .)
    LLAVERIGHT      reduce using rule 87 (expresion -> expresion MODULO term .)
    BREAK           reduce using rule 87 (expresion -> expresion MODULO term .)
    CONTINUE        reduce using rule 87 (expresion -> expresion MODULO term .)
    COMA            reduce using rule 87 (expresion -> expresion MODULO term .)
    DOSPUNTOS       reduce using rule 87 (expresion -> expresion MODULO term .)


state 83

    (14) asignacion -> VAR VARIABLE BOOL . IGUAL booleano

    IGUAL           shift and go to state 143


state 84

    (102) declaracion_slices -> VAR VARIABLE IGUAL . CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> VAR VARIABLE IGUAL . CORCHLEFT CORCHRIGHT typeData

    CORCHLEFT       shift and go to state 144


state 85

    (15) asignacion -> VAR VARIABLE INT . IGUAL expresion

    IGUAL           shift and go to state 145


state 86

    (16) asignacion -> VAR VARIABLE FLOAT . IGUAL expresion

    IGUAL           shift and go to state 146


state 87

    (17) asignacion -> VAR VARIABLE STRING . IGUAL CADENA

    IGUAL           shift and go to state 147


state 88

    (18) asignacion -> VAR VARIABLE puntero . IGUAL refer
    (19) asignacion -> VAR VARIABLE puntero .

    IGUAL           shift and go to state 148
    $end            reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    RETURN          reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    LLAVERIGHT      reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    BREAK           reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    CONTINUE        reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)


state 89

    (70) arrayAsig -> VAR VARIABLE CORCHLEFT . ENTERO CORCHRIGHT typeData

    ENTERO          shift and go to state 149


state 90

    (59) puntero -> PRODUCTO . typeData
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 49

state 91

    (32) valor -> VARIABLE .

    $end            reduce using rule 32 (valor -> VARIABLE .)
    RETURN          reduce using rule 32 (valor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 32 (valor -> VARIABLE .)
    BREAK           reduce using rule 32 (valor -> VARIABLE .)
    CONTINUE        reduce using rule 32 (valor -> VARIABLE .)


state 92

    (21) asignacion -> VARIABLE DECLARADOR valor .

    $end            reduce using rule 21 (asignacion -> VARIABLE DECLARADOR valor .)
    RETURN          reduce using rule 21 (asignacion -> VARIABLE DECLARADOR valor .)
    LLAVERIGHT      reduce using rule 21 (asignacion -> VARIABLE DECLARADOR valor .)
    BREAK           reduce using rule 21 (asignacion -> VARIABLE DECLARADOR valor .)
    CONTINUE        reduce using rule 21 (asignacion -> VARIABLE DECLARADOR valor .)


state 93

    (69) array -> VARIABLE DECLARADOR CORCHLEFT . ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    ENTERO          shift and go to state 150


state 94

    (29) valor -> booleano .

    $end            reduce using rule 29 (valor -> booleano .)
    RETURN          reduce using rule 29 (valor -> booleano .)
    LLAVERIGHT      reduce using rule 29 (valor -> booleano .)
    BREAK           reduce using rule 29 (valor -> booleano .)
    CONTINUE        reduce using rule 29 (valor -> booleano .)


state 95

    (30) valor -> expresion .
    (83) expresion -> expresion . SUMA term
    (84) expresion -> expresion . RESTA term
    (85) expresion -> expresion . PRODUCTO term
    (86) expresion -> expresion . DIVISION term
    (87) expresion -> expresion . MODULO term

    $end            reduce using rule 30 (valor -> expresion .)
    RETURN          reduce using rule 30 (valor -> expresion .)
    LLAVERIGHT      reduce using rule 30 (valor -> expresion .)
    BREAK           reduce using rule 30 (valor -> expresion .)
    CONTINUE        reduce using rule 30 (valor -> expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42


state 96

    (31) valor -> CADENA .

    $end            reduce using rule 31 (valor -> CADENA .)
    RETURN          reduce using rule 31 (valor -> CADENA .)
    LLAVERIGHT      reduce using rule 31 (valor -> CADENA .)
    BREAK           reduce using rule 31 (valor -> CADENA .)
    CONTINUE        reduce using rule 31 (valor -> CADENA .)


state 97

    (33) valor -> mapa .

    $end            reduce using rule 33 (valor -> mapa .)
    RETURN          reduce using rule 33 (valor -> mapa .)
    LLAVERIGHT      reduce using rule 33 (valor -> mapa .)
    BREAK           reduce using rule 33 (valor -> mapa .)
    CONTINUE        reduce using rule 33 (valor -> mapa .)


state 98

    (34) valor -> refer .

    $end            reduce using rule 34 (valor -> refer .)
    RETURN          reduce using rule 34 (valor -> refer .)
    LLAVERIGHT      reduce using rule 34 (valor -> refer .)
    BREAK           reduce using rule 34 (valor -> refer .)
    CONTINUE        reduce using rule 34 (valor -> refer .)


state 99

    (26) booleano -> condicion .

    $end            reduce using rule 26 (booleano -> condicion .)
    RETURN          reduce using rule 26 (booleano -> condicion .)
    LLAVERIGHT      reduce using rule 26 (booleano -> condicion .)
    BREAK           reduce using rule 26 (booleano -> condicion .)
    CONTINUE        reduce using rule 26 (booleano -> condicion .)


state 100

    (27) booleano -> TRUE .

    $end            reduce using rule 27 (booleano -> TRUE .)
    RETURN          reduce using rule 27 (booleano -> TRUE .)
    LLAVERIGHT      reduce using rule 27 (booleano -> TRUE .)
    BREAK           reduce using rule 27 (booleano -> TRUE .)
    CONTINUE        reduce using rule 27 (booleano -> TRUE .)


state 101

    (28) booleano -> FALSE .

    $end            reduce using rule 28 (booleano -> FALSE .)
    RETURN          reduce using rule 28 (booleano -> FALSE .)
    LLAVERIGHT      reduce using rule 28 (booleano -> FALSE .)
    BREAK           reduce using rule 28 (booleano -> FALSE .)
    CONTINUE        reduce using rule 28 (booleano -> FALSE .)


state 102

    (60) refer -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 151


state 103

    (141) condicion -> AND .

    $end            reduce using rule 141 (condicion -> AND .)
    RETURN          reduce using rule 141 (condicion -> AND .)
    LLAVERIGHT      reduce using rule 141 (condicion -> AND .)
    BREAK           reduce using rule 141 (condicion -> AND .)
    CONTINUE        reduce using rule 141 (condicion -> AND .)
    NEGACION        reduce using rule 141 (condicion -> AND .)
    PARLEFT         reduce using rule 141 (condicion -> AND .)
    VARIABLE        reduce using rule 141 (condicion -> AND .)
    BOOL            reduce using rule 141 (condicion -> AND .)
    ENTERO          reduce using rule 141 (condicion -> AND .)
    FLOTANTE        reduce using rule 141 (condicion -> AND .)


state 104

    (142) condicion -> OR .

    $end            reduce using rule 142 (condicion -> OR .)
    RETURN          reduce using rule 142 (condicion -> OR .)
    LLAVERIGHT      reduce using rule 142 (condicion -> OR .)
    BREAK           reduce using rule 142 (condicion -> OR .)
    CONTINUE        reduce using rule 142 (condicion -> OR .)
    NEGACION        reduce using rule 142 (condicion -> OR .)
    PARLEFT         reduce using rule 142 (condicion -> OR .)
    VARIABLE        reduce using rule 142 (condicion -> OR .)
    BOOL            reduce using rule 142 (condicion -> OR .)
    ENTERO          reduce using rule 142 (condicion -> OR .)
    FLOTANTE        reduce using rule 142 (condicion -> OR .)


state 105

    (22) asignacion -> VARIABLE IGUAL valor .

    $end            reduce using rule 22 (asignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 22 (asignacion -> VARIABLE IGUAL valor .)
    LLAVERIGHT      reduce using rule 22 (asignacion -> VARIABLE IGUAL valor .)
    BREAK           reduce using rule 22 (asignacion -> VARIABLE IGUAL valor .)
    CONTINUE        reduce using rule 22 (asignacion -> VARIABLE IGUAL valor .)


state 106

    (104) declaracion_slices -> VARIABLE IGUAL CORCHLEFT . ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> VARIABLE IGUAL CORCHLEFT . CORCHRIGHT typeData

    ENTERO          shift and go to state 152
    CORCHRIGHT      shift and go to state 153


state 107

    (37) acumular -> VARIABLE .

    $end            reduce using rule 37 (acumular -> VARIABLE .)
    RETURN          reduce using rule 37 (acumular -> VARIABLE .)
    LLAVERIGHT      reduce using rule 37 (acumular -> VARIABLE .)
    BREAK           reduce using rule 37 (acumular -> VARIABLE .)
    CONTINUE        reduce using rule 37 (acumular -> VARIABLE .)


state 108

    (23) asignacion -> VARIABLE MASIGUAL acumular .

    $end            reduce using rule 23 (asignacion -> VARIABLE MASIGUAL acumular .)
    RETURN          reduce using rule 23 (asignacion -> VARIABLE MASIGUAL acumular .)
    LLAVERIGHT      reduce using rule 23 (asignacion -> VARIABLE MASIGUAL acumular .)
    BREAK           reduce using rule 23 (asignacion -> VARIABLE MASIGUAL acumular .)
    CONTINUE        reduce using rule 23 (asignacion -> VARIABLE MASIGUAL acumular .)


state 109

    (35) acumular -> expresion .
    (83) expresion -> expresion . SUMA term
    (84) expresion -> expresion . RESTA term
    (85) expresion -> expresion . PRODUCTO term
    (86) expresion -> expresion . DIVISION term
    (87) expresion -> expresion . MODULO term

    $end            reduce using rule 35 (acumular -> expresion .)
    RETURN          reduce using rule 35 (acumular -> expresion .)
    LLAVERIGHT      reduce using rule 35 (acumular -> expresion .)
    BREAK           reduce using rule 35 (acumular -> expresion .)
    CONTINUE        reduce using rule 35 (acumular -> expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42


state 110

    (36) acumular -> CADENA .

    $end            reduce using rule 36 (acumular -> CADENA .)
    RETURN          reduce using rule 36 (acumular -> CADENA .)
    LLAVERIGHT      reduce using rule 36 (acumular -> CADENA .)
    BREAK           reduce using rule 36 (acumular -> CADENA .)
    CONTINUE        reduce using rule 36 (acumular -> CADENA .)


state 111

    (24) asignacion -> VARIABLE MENOSIGUAL expresion .
    (83) expresion -> expresion . SUMA term
    (84) expresion -> expresion . RESTA term
    (85) expresion -> expresion . PRODUCTO term
    (86) expresion -> expresion . DIVISION term
    (87) expresion -> expresion . MODULO term

    $end            reduce using rule 24 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    RETURN          reduce using rule 24 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    LLAVERIGHT      reduce using rule 24 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    BREAK           reduce using rule 24 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    CONTINUE        reduce using rule 24 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42


state 112

    (25) asignacion -> derefer IGUAL valor .

    $end            reduce using rule 25 (asignacion -> derefer IGUAL valor .)
    RETURN          reduce using rule 25 (asignacion -> derefer IGUAL valor .)
    LLAVERIGHT      reduce using rule 25 (asignacion -> derefer IGUAL valor .)
    BREAK           reduce using rule 25 (asignacion -> derefer IGUAL valor .)
    CONTINUE        reduce using rule 25 (asignacion -> derefer IGUAL valor .)


state 113

    (132) condiciones -> factor MAYORQUE factor .

    $end            reduce using rule 132 (condiciones -> factor MAYORQUE factor .)
    AND             reduce using rule 132 (condiciones -> factor MAYORQUE factor .)
    OR              reduce using rule 132 (condiciones -> factor MAYORQUE factor .)
    LLAVELEFT       reduce using rule 132 (condiciones -> factor MAYORQUE factor .)
    PARRIGHT        reduce using rule 132 (condiciones -> factor MAYORQUE factor .)
    RETURN          reduce using rule 132 (condiciones -> factor MAYORQUE factor .)
    LLAVERIGHT      reduce using rule 132 (condiciones -> factor MAYORQUE factor .)
    PUNTOCOMA       reduce using rule 132 (condiciones -> factor MAYORQUE factor .)
    BREAK           reduce using rule 132 (condiciones -> factor MAYORQUE factor .)
    CONTINUE        reduce using rule 132 (condiciones -> factor MAYORQUE factor .)


state 114

    (133) condiciones -> factor MENORQUE factor .

    $end            reduce using rule 133 (condiciones -> factor MENORQUE factor .)
    AND             reduce using rule 133 (condiciones -> factor MENORQUE factor .)
    OR              reduce using rule 133 (condiciones -> factor MENORQUE factor .)
    LLAVELEFT       reduce using rule 133 (condiciones -> factor MENORQUE factor .)
    PARRIGHT        reduce using rule 133 (condiciones -> factor MENORQUE factor .)
    RETURN          reduce using rule 133 (condiciones -> factor MENORQUE factor .)
    LLAVERIGHT      reduce using rule 133 (condiciones -> factor MENORQUE factor .)
    PUNTOCOMA       reduce using rule 133 (condiciones -> factor MENORQUE factor .)
    BREAK           reduce using rule 133 (condiciones -> factor MENORQUE factor .)
    CONTINUE        reduce using rule 133 (condiciones -> factor MENORQUE factor .)


state 115

    (134) condiciones -> factor DIFERENTE factor .

    $end            reduce using rule 134 (condiciones -> factor DIFERENTE factor .)
    AND             reduce using rule 134 (condiciones -> factor DIFERENTE factor .)
    OR              reduce using rule 134 (condiciones -> factor DIFERENTE factor .)
    LLAVELEFT       reduce using rule 134 (condiciones -> factor DIFERENTE factor .)
    PARRIGHT        reduce using rule 134 (condiciones -> factor DIFERENTE factor .)
    RETURN          reduce using rule 134 (condiciones -> factor DIFERENTE factor .)
    LLAVERIGHT      reduce using rule 134 (condiciones -> factor DIFERENTE factor .)
    PUNTOCOMA       reduce using rule 134 (condiciones -> factor DIFERENTE factor .)
    BREAK           reduce using rule 134 (condiciones -> factor DIFERENTE factor .)
    CONTINUE        reduce using rule 134 (condiciones -> factor DIFERENTE factor .)


state 116

    (135) condiciones -> factor ESIGUAL factor .

    $end            reduce using rule 135 (condiciones -> factor ESIGUAL factor .)
    AND             reduce using rule 135 (condiciones -> factor ESIGUAL factor .)
    OR              reduce using rule 135 (condiciones -> factor ESIGUAL factor .)
    LLAVELEFT       reduce using rule 135 (condiciones -> factor ESIGUAL factor .)
    PARRIGHT        reduce using rule 135 (condiciones -> factor ESIGUAL factor .)
    RETURN          reduce using rule 135 (condiciones -> factor ESIGUAL factor .)
    LLAVERIGHT      reduce using rule 135 (condiciones -> factor ESIGUAL factor .)
    PUNTOCOMA       reduce using rule 135 (condiciones -> factor ESIGUAL factor .)
    BREAK           reduce using rule 135 (condiciones -> factor ESIGUAL factor .)
    CONTINUE        reduce using rule 135 (condiciones -> factor ESIGUAL factor .)


state 117

    (136) condiciones -> factor MENORIGUAL factor .

    $end            reduce using rule 136 (condiciones -> factor MENORIGUAL factor .)
    AND             reduce using rule 136 (condiciones -> factor MENORIGUAL factor .)
    OR              reduce using rule 136 (condiciones -> factor MENORIGUAL factor .)
    LLAVELEFT       reduce using rule 136 (condiciones -> factor MENORIGUAL factor .)
    PARRIGHT        reduce using rule 136 (condiciones -> factor MENORIGUAL factor .)
    RETURN          reduce using rule 136 (condiciones -> factor MENORIGUAL factor .)
    LLAVERIGHT      reduce using rule 136 (condiciones -> factor MENORIGUAL factor .)
    PUNTOCOMA       reduce using rule 136 (condiciones -> factor MENORIGUAL factor .)
    BREAK           reduce using rule 136 (condiciones -> factor MENORIGUAL factor .)
    CONTINUE        reduce using rule 136 (condiciones -> factor MENORIGUAL factor .)


state 118

    (137) condiciones -> factor MAYORIGUAL factor .

    $end            reduce using rule 137 (condiciones -> factor MAYORIGUAL factor .)
    AND             reduce using rule 137 (condiciones -> factor MAYORIGUAL factor .)
    OR              reduce using rule 137 (condiciones -> factor MAYORIGUAL factor .)
    LLAVELEFT       reduce using rule 137 (condiciones -> factor MAYORIGUAL factor .)
    PARRIGHT        reduce using rule 137 (condiciones -> factor MAYORIGUAL factor .)
    RETURN          reduce using rule 137 (condiciones -> factor MAYORIGUAL factor .)
    LLAVERIGHT      reduce using rule 137 (condiciones -> factor MAYORIGUAL factor .)
    PUNTOCOMA       reduce using rule 137 (condiciones -> factor MAYORIGUAL factor .)
    BREAK           reduce using rule 137 (condiciones -> factor MAYORIGUAL factor .)
    CONTINUE        reduce using rule 137 (condiciones -> factor MAYORIGUAL factor .)


state 119

    (38) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones LLAVERIGHT else
    (42) sentenciaIf -> IF comparaciones LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> IF comparaciones LLAVELEFT . RETURN VARIABLE LLAVERIGHT else
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . slices
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . VARIABLE MASIGUAL acumular
    (24) asignacion -> . VARIABLE MENOSIGUAL expresion
    (25) asignacion -> . derefer IGUAL valor
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (62) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (71) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) puntero -> . PRODUCTO typeData
    (80) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (69) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (123) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (70) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (109) funcion -> . funcion_sin_parametro
    (110) funcion -> . funcion_parametro
    (111) funcion -> . funcion_sin_parametro_return
    (100) slices -> . declaracion_slices
    (101) slices -> . declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT
    (61) derefer -> . PRODUCTO VARIABLE
    (90) term -> . numericos
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (112) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (102) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (104) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 155
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 30
    BOOL            shift and go to state 17
    FUNC            shift and go to state 36
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 154
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    slices                         shift and go to state 18
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    funcion_sin_parametro          shift and go to state 31
    funcion_parametro              shift and go to state 32
    funcion_sin_parametro_return   shift and go to state 33
    declaracion_slices             shift and go to state 34
    numericos                      shift and go to state 35

state 120

    (139) comparaciones -> comparacion anado . comparaciones
    (138) comparaciones -> . comparacion
    (139) comparaciones -> . comparacion anado comparaciones
    (106) comparacion -> . condiciones
    (107) comparacion -> . NEGACION PARLEFT condiciones PARRIGHT
    (108) comparacion -> . PARLEFT condiciones PARRIGHT
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    NEGACION        shift and go to state 65
    PARLEFT         shift and go to state 66
    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37

    comparacion                    shift and go to state 63
    comparaciones                  shift and go to state 156
    condiciones                    shift and go to state 64
    factor                         shift and go to state 22
    numericos                      shift and go to state 67

state 121

    (140) anado -> condicion .

    NEGACION        reduce using rule 140 (anado -> condicion .)
    PARLEFT         reduce using rule 140 (anado -> condicion .)
    VARIABLE        reduce using rule 140 (anado -> condicion .)
    BOOL            reduce using rule 140 (anado -> condicion .)
    ENTERO          reduce using rule 140 (anado -> condicion .)
    FLOTANTE        reduce using rule 140 (anado -> condicion .)


state 122

    (107) comparacion -> NEGACION PARLEFT . condiciones PARRIGHT
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    condiciones                    shift and go to state 157
    factor                         shift and go to state 22
    numericos                      shift and go to state 67

state 123

    (108) comparacion -> PARLEFT condiciones . PARRIGHT

    PARRIGHT        shift and go to state 158


state 124

    (91) factor -> numericos .
    (90) term -> numericos .

    MAYORQUE        reduce using rule 91 (factor -> numericos .)
    MENORQUE        reduce using rule 91 (factor -> numericos .)
    DIFERENTE       reduce using rule 91 (factor -> numericos .)
    ESIGUAL         reduce using rule 91 (factor -> numericos .)
    MENORIGUAL      reduce using rule 91 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 91 (factor -> numericos .)
    PARRIGHT        reduce using rule 90 (term -> numericos .)
    SUMA            reduce using rule 90 (term -> numericos .)
    RESTA           reduce using rule 90 (term -> numericos .)
    PRODUCTO        reduce using rule 90 (term -> numericos .)
    DIVISION        reduce using rule 90 (term -> numericos .)
    MODULO          reduce using rule 90 (term -> numericos .)


state 125

    (62) sentenciaFor -> FOR inicio PUNTOCOMA . condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 62
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    condiciones                    shift and go to state 159
    factor                         shift and go to state 22
    numericos                      shift and go to state 67

state 126

    (63) inicio -> VARIABLE DECLARADOR . ENTERO

    ENTERO          shift and go to state 160


state 127

    (71) print -> IMPRIMIR PARLEFT contPrint . PARRIGHT

    PARRIGHT        shift and go to state 161


state 128

    (72) contPrint -> contenido . masCont
    (73) contPrint -> contenido .
    (74) masCont -> . masCont COMA contenido
    (75) masCont -> . COMA contenido

    PARRIGHT        reduce using rule 73 (contPrint -> contenido .)
    COMA            shift and go to state 163

    masCont                        shift and go to state 162

state 129

    (76) contenido -> expresion .
    (83) expresion -> expresion . SUMA term
    (84) expresion -> expresion . RESTA term
    (85) expresion -> expresion . PRODUCTO term
    (86) expresion -> expresion . DIVISION term
    (87) expresion -> expresion . MODULO term

    COMA            reduce using rule 76 (contenido -> expresion .)
    PARRIGHT        reduce using rule 76 (contenido -> expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42


state 130

    (77) contenido -> CADENA .

    COMA            reduce using rule 77 (contenido -> CADENA .)
    PARRIGHT        reduce using rule 77 (contenido -> CADENA .)


state 131

    (78) contenido -> VARIABLE .

    COMA            reduce using rule 78 (contenido -> VARIABLE .)
    PARRIGHT        reduce using rule 78 (contenido -> VARIABLE .)


state 132

    (95) numericos -> PARLEFT expresion PARRIGHT .

    SUMA            reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    RESTA           reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    PRODUCTO        reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    DIVISION        reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    MODULO          reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    $end            reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORQUE        reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORQUE        reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    DIFERENTE       reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    ESIGUAL         reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORIGUAL      reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORIGUAL      reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    PARRIGHT        reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    RETURN          reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVERIGHT      reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    BREAK           reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    CONTINUE        reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    COMA            reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    DOSPUNTOS       reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    AND             reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    OR              reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVELEFT       reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)
    PUNTOCOMA       reduce using rule 95 (numericos -> PARLEFT expresion PARRIGHT .)


state 133

    (48) mapa -> MAP CORCHLEFT typeData . CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> MAP CORCHLEFT typeData . CORCHRIGHT typeData LLAVELEFT LLAVERIGHT

    CORCHRIGHT      shift and go to state 164


state 134

    (80) lectura -> SCAN PARLEFT contScan . PARRIGHT

    PARRIGHT        shift and go to state 165


state 135

    (81) contScan -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 166


state 136

    (123) switch -> SWITCH VARIABLE LLAVELEFT . bloque_switch LLAVERIGHT
    (124) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK
    (125) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones CONTINUE
    (126) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
    (127) bloque_switch -> . switch_default
    (131) switch_default -> . DEFAULT DOSPUNTOS instrucciones

    CASE            shift and go to state 168
    DEFAULT         shift and go to state 170

    bloque_switch                  shift and go to state 167
    switch_default                 shift and go to state 169

state 137

    (101) slices -> declaracion_slices LLAVELEFT contenido_arrays . LLAVERIGHT

    LLAVERIGHT      shift and go to state 171


state 138

    (96) contenido_arrays -> contArray .
    (82) contArray -> contArray . COMA numericos

    LLAVERIGHT      reduce using rule 96 (contenido_arrays -> contArray .)
    COMA            shift and go to state 172


state 139

    (97) contenido_arrays -> stringArray .

    LLAVERIGHT      reduce using rule 97 (contenido_arrays -> stringArray .)


state 140

    (89) contArray -> term .

    COMA            reduce using rule 89 (contArray -> term .)
    LLAVERIGHT      reduce using rule 89 (contArray -> term .)


state 141

    (98) stringArray -> COMILLA . VARIABLE COMILLA COMA stringArray
    (99) stringArray -> COMILLA . VARIABLE COMILLA

    VARIABLE        shift and go to state 173


state 142

    (112) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (119) parametros -> . VARIABLE
    (120) parametros -> . VARIABLE COMA parametros
    (121) parametros -> . typeData VARIABLE
    (122) parametros -> . typeData VARIABLE COMA parametros
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    PARRIGHT        shift and go to state 175
    VARIABLE        shift and go to state 174
    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    parametros                     shift and go to state 176
    typeData                       shift and go to state 177

state 143

    (14) asignacion -> VAR VARIABLE BOOL IGUAL . booleano
    (26) booleano -> . condicion
    (27) booleano -> . TRUE
    (28) booleano -> . FALSE
    (141) condicion -> . AND
    (142) condicion -> . OR

    TRUE            shift and go to state 100
    FALSE           shift and go to state 101
    AND             shift and go to state 103
    OR              shift and go to state 104

    booleano                       shift and go to state 178
    condicion                      shift and go to state 99

state 144

    (102) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT . ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT . CORCHRIGHT typeData

    ENTERO          shift and go to state 179
    CORCHRIGHT      shift and go to state 180


state 145

    (15) asignacion -> VAR VARIABLE INT IGUAL . expresion
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    expresion                      shift and go to state 181
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 146

    (16) asignacion -> VAR VARIABLE FLOAT IGUAL . expresion
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    expresion                      shift and go to state 182
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 147

    (17) asignacion -> VAR VARIABLE STRING IGUAL . CADENA

    CADENA          shift and go to state 183


state 148

    (18) asignacion -> VAR VARIABLE puntero IGUAL . refer
    (60) refer -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 102

    refer                          shift and go to state 184

state 149

    (70) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO . CORCHRIGHT typeData

    CORCHRIGHT      shift and go to state 185


state 150

    (69) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO . CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    CORCHRIGHT      shift and go to state 186


state 151

    (60) refer -> AMPERSAND VARIABLE .

    $end            reduce using rule 60 (refer -> AMPERSAND VARIABLE .)
    RETURN          reduce using rule 60 (refer -> AMPERSAND VARIABLE .)
    LLAVERIGHT      reduce using rule 60 (refer -> AMPERSAND VARIABLE .)
    BREAK           reduce using rule 60 (refer -> AMPERSAND VARIABLE .)
    CONTINUE        reduce using rule 60 (refer -> AMPERSAND VARIABLE .)


state 152

    (104) declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO . CORCHRIGHT typeData

    CORCHRIGHT      shift and go to state 187


state 153

    (105) declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT . typeData
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 188

state 154

    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . LLAVERIGHT else

    RETURN          shift and go to state 189
    LLAVERIGHT      shift and go to state 190


state 155

    (42) sentenciaIf -> IF comparaciones LLAVELEFT RETURN . VARIABLE LLAVERIGHT
    (43) sentenciaIf -> IF comparaciones LLAVELEFT RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 191


state 156

    (139) comparaciones -> comparacion anado comparaciones .

    LLAVELEFT       reduce using rule 139 (comparaciones -> comparacion anado comparaciones .)


state 157

    (107) comparacion -> NEGACION PARLEFT condiciones . PARRIGHT

    PARRIGHT        shift and go to state 192


state 158

    (108) comparacion -> PARLEFT condiciones PARRIGHT .

    AND             reduce using rule 108 (comparacion -> PARLEFT condiciones PARRIGHT .)
    OR              reduce using rule 108 (comparacion -> PARLEFT condiciones PARRIGHT .)
    LLAVELEFT       reduce using rule 108 (comparacion -> PARLEFT condiciones PARRIGHT .)


state 159

    (62) sentenciaFor -> FOR inicio PUNTOCOMA condiciones . PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 193


state 160

    (63) inicio -> VARIABLE DECLARADOR ENTERO .

    PUNTOCOMA       reduce using rule 63 (inicio -> VARIABLE DECLARADOR ENTERO .)


state 161

    (71) print -> IMPRIMIR PARLEFT contPrint PARRIGHT .

    $end            reduce using rule 71 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    RETURN          reduce using rule 71 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    LLAVERIGHT      reduce using rule 71 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    BREAK           reduce using rule 71 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    CONTINUE        reduce using rule 71 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)


state 162

    (72) contPrint -> contenido masCont .
    (74) masCont -> masCont . COMA contenido

    PARRIGHT        reduce using rule 72 (contPrint -> contenido masCont .)
    COMA            shift and go to state 194


state 163

    (75) masCont -> COMA . contenido
    (76) contenido -> . expresion
    (77) contenido -> . CADENA
    (78) contenido -> . VARIABLE
    (79) contenido -> .
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 130
    VARIABLE        shift and go to state 131
    COMA            reduce using rule 79 (contenido -> .)
    PARRIGHT        reduce using rule 79 (contenido -> .)
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    contenido                      shift and go to state 195
    expresion                      shift and go to state 129
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 164

    (48) mapa -> MAP CORCHLEFT typeData CORCHRIGHT . typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> MAP CORCHLEFT typeData CORCHRIGHT . typeData LLAVELEFT LLAVERIGHT
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 196

state 165

    (80) lectura -> SCAN PARLEFT contScan PARRIGHT .

    $end            reduce using rule 80 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    RETURN          reduce using rule 80 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    LLAVERIGHT      reduce using rule 80 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    BREAK           reduce using rule 80 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    CONTINUE        reduce using rule 80 (lectura -> SCAN PARLEFT contScan PARRIGHT .)


state 166

    (81) contScan -> AMPERSAND VARIABLE .

    PARRIGHT        reduce using rule 81 (contScan -> AMPERSAND VARIABLE .)


state 167

    (123) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch . LLAVERIGHT

    LLAVERIGHT      shift and go to state 197


state 168

    (124) bloque_switch -> CASE . caso_switch DOSPUNTOS instrucciones BREAK
    (125) bloque_switch -> CASE . caso_switch DOSPUNTOS instrucciones CONTINUE
    (126) bloque_switch -> CASE . caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
    (128) caso_switch -> . VARIABLE
    (129) caso_switch -> . CADENA
    (130) caso_switch -> . ENTERO

    VARIABLE        shift and go to state 199
    CADENA          shift and go to state 200
    ENTERO          shift and go to state 201

    caso_switch                    shift and go to state 198

state 169

    (127) bloque_switch -> switch_default .

    LLAVERIGHT      reduce using rule 127 (bloque_switch -> switch_default .)


state 170

    (131) switch_default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 202


state 171

    (101) slices -> declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT .

    $end            reduce using rule 101 (slices -> declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT .)
    RETURN          reduce using rule 101 (slices -> declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 101 (slices -> declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT .)
    BREAK           reduce using rule 101 (slices -> declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT .)
    CONTINUE        reduce using rule 101 (slices -> declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT .)


state 172

    (82) contArray -> contArray COMA . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    numericos                      shift and go to state 203

state 173

    (98) stringArray -> COMILLA VARIABLE . COMILLA COMA stringArray
    (99) stringArray -> COMILLA VARIABLE . COMILLA

    COMILLA         shift and go to state 204


state 174

    (119) parametros -> VARIABLE .
    (120) parametros -> VARIABLE . COMA parametros

    PARRIGHT        reduce using rule 119 (parametros -> VARIABLE .)
    COMA            shift and go to state 205


state 175

    (112) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    LLAVELEFT       shift and go to state 206


state 176

    (116) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT RETURN LLAVERIGHT

    PARRIGHT        shift and go to state 207


state 177

    (121) parametros -> typeData . VARIABLE
    (122) parametros -> typeData . VARIABLE COMA parametros

    VARIABLE        shift and go to state 208


state 178

    (14) asignacion -> VAR VARIABLE BOOL IGUAL booleano .

    $end            reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    RETURN          reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    LLAVERIGHT      reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    BREAK           reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    CONTINUE        reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)


state 179

    (102) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO . CORCHRIGHT typeData

    CORCHRIGHT      shift and go to state 209


state 180

    (103) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT . typeData
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 210

state 181

    (15) asignacion -> VAR VARIABLE INT IGUAL expresion .
    (83) expresion -> expresion . SUMA term
    (84) expresion -> expresion . RESTA term
    (85) expresion -> expresion . PRODUCTO term
    (86) expresion -> expresion . DIVISION term
    (87) expresion -> expresion . MODULO term

    $end            reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    RETURN          reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    BREAK           reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    CONTINUE        reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42


state 182

    (16) asignacion -> VAR VARIABLE FLOAT IGUAL expresion .
    (83) expresion -> expresion . SUMA term
    (84) expresion -> expresion . RESTA term
    (85) expresion -> expresion . PRODUCTO term
    (86) expresion -> expresion . DIVISION term
    (87) expresion -> expresion . MODULO term

    $end            reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    RETURN          reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    BREAK           reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    CONTINUE        reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42


state 183

    (17) asignacion -> VAR VARIABLE STRING IGUAL CADENA .

    $end            reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    RETURN          reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    LLAVERIGHT      reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    BREAK           reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    CONTINUE        reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)


state 184

    (18) asignacion -> VAR VARIABLE puntero IGUAL refer .

    $end            reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    RETURN          reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    LLAVERIGHT      reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    BREAK           reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    CONTINUE        reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)


state 185

    (70) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT . typeData
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 211

state 186

    (69) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT . typeData LLAVELEFT contArray LLAVERIGHT
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 212

state 187

    (104) declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT . typeData
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 213

state 188

    (105) declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .

    LLAVELEFT       reduce using rule 105 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    $end            reduce using rule 105 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    RETURN          reduce using rule 105 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 105 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    BREAK           reduce using rule 105 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 105 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)


state 189

    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 214


state 190

    (40) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .
    (41) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT . else
    (44) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (45) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (46) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (47) else -> . ELSE sentenciaIf

    $end            reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    ELSE            shift and go to state 216

    else                           shift and go to state 215

state 191

    (42) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE . LLAVERIGHT
    (43) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 217


state 192

    (107) comparacion -> NEGACION PARLEFT condiciones PARRIGHT .

    AND             reduce using rule 107 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)
    OR              reduce using rule 107 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)
    LLAVELEFT       reduce using rule 107 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)


state 193

    (62) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA . incrementa LLAVELEFT instrucciones LLAVERIGHT
    (64) incrementa -> . VARIABLE INCREMENTO

    VARIABLE        shift and go to state 219

    incrementa                     shift and go to state 218

state 194

    (74) masCont -> masCont COMA . contenido
    (76) contenido -> . expresion
    (77) contenido -> . CADENA
    (78) contenido -> . VARIABLE
    (79) contenido -> .
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 130
    VARIABLE        shift and go to state 131
    COMA            reduce using rule 79 (contenido -> .)
    PARRIGHT        reduce using rule 79 (contenido -> .)
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    contenido                      shift and go to state 220
    expresion                      shift and go to state 129
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 195

    (75) masCont -> COMA contenido .

    COMA            reduce using rule 75 (masCont -> COMA contenido .)
    PARRIGHT        reduce using rule 75 (masCont -> COMA contenido .)


state 196

    (48) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData . LLAVELEFT par LLAVERIGHT
    (49) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData . LLAVELEFT LLAVERIGHT

    LLAVELEFT       shift and go to state 221


state 197

    (123) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .

    $end            reduce using rule 123 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    RETURN          reduce using rule 123 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 123 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    BREAK           reduce using rule 123 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    CONTINUE        reduce using rule 123 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)


state 198

    (124) bloque_switch -> CASE caso_switch . DOSPUNTOS instrucciones BREAK
    (125) bloque_switch -> CASE caso_switch . DOSPUNTOS instrucciones CONTINUE
    (126) bloque_switch -> CASE caso_switch . DOSPUNTOS instrucciones BREAK bloque_switch

    DOSPUNTOS       shift and go to state 222


state 199

    (128) caso_switch -> VARIABLE .

    DOSPUNTOS       reduce using rule 128 (caso_switch -> VARIABLE .)


state 200

    (129) caso_switch -> CADENA .

    DOSPUNTOS       reduce using rule 129 (caso_switch -> CADENA .)


state 201

    (130) caso_switch -> ENTERO .

    DOSPUNTOS       reduce using rule 130 (caso_switch -> ENTERO .)


state 202

    (131) switch_default -> DEFAULT DOSPUNTOS . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . slices
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . VARIABLE MASIGUAL acumular
    (24) asignacion -> . VARIABLE MENOSIGUAL expresion
    (25) asignacion -> . derefer IGUAL valor
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (62) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (71) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) puntero -> . PRODUCTO typeData
    (80) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (69) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (123) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (70) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (109) funcion -> . funcion_sin_parametro
    (110) funcion -> . funcion_parametro
    (111) funcion -> . funcion_sin_parametro_return
    (100) slices -> . declaracion_slices
    (101) slices -> . declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT
    (61) derefer -> . PRODUCTO VARIABLE
    (90) term -> . numericos
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (112) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (102) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (104) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 30
    BOOL            shift and go to state 17
    FUNC            shift and go to state 36
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 223
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    slices                         shift and go to state 18
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    funcion_sin_parametro          shift and go to state 31
    funcion_parametro              shift and go to state 32
    funcion_sin_parametro_return   shift and go to state 33
    declaracion_slices             shift and go to state 34
    numericos                      shift and go to state 35

state 203

    (82) contArray -> contArray COMA numericos .

    COMA            reduce using rule 82 (contArray -> contArray COMA numericos .)
    LLAVERIGHT      reduce using rule 82 (contArray -> contArray COMA numericos .)


state 204

    (98) stringArray -> COMILLA VARIABLE COMILLA . COMA stringArray
    (99) stringArray -> COMILLA VARIABLE COMILLA .

    COMA            shift and go to state 224
    LLAVERIGHT      reduce using rule 99 (stringArray -> COMILLA VARIABLE COMILLA .)


state 205

    (120) parametros -> VARIABLE COMA . parametros
    (119) parametros -> . VARIABLE
    (120) parametros -> . VARIABLE COMA parametros
    (121) parametros -> . typeData VARIABLE
    (122) parametros -> . typeData VARIABLE COMA parametros
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    VARIABLE        shift and go to state 174
    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    parametros                     shift and go to state 225
    typeData                       shift and go to state 177

state 206

    (112) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . slices
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . VARIABLE MASIGUAL acumular
    (24) asignacion -> . VARIABLE MENOSIGUAL expresion
    (25) asignacion -> . derefer IGUAL valor
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (62) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (71) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) puntero -> . PRODUCTO typeData
    (80) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (69) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (123) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (70) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (109) funcion -> . funcion_sin_parametro
    (110) funcion -> . funcion_parametro
    (111) funcion -> . funcion_sin_parametro_return
    (100) slices -> . declaracion_slices
    (101) slices -> . declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT
    (61) derefer -> . PRODUCTO VARIABLE
    (90) term -> . numericos
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (112) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (102) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (104) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 227
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 30
    BOOL            shift and go to state 17
    FUNC            shift and go to state 36
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 226
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    slices                         shift and go to state 18
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    funcion_sin_parametro          shift and go to state 31
    funcion_parametro              shift and go to state 32
    funcion_sin_parametro_return   shift and go to state 33
    declaracion_slices             shift and go to state 34
    numericos                      shift and go to state 35

state 207

    (116) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT RETURN LLAVERIGHT

    LLAVELEFT       shift and go to state 228


state 208

    (121) parametros -> typeData VARIABLE .
    (122) parametros -> typeData VARIABLE . COMA parametros

    PARRIGHT        reduce using rule 121 (parametros -> typeData VARIABLE .)
    COMA            shift and go to state 229


state 209

    (102) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT . typeData
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 230

state 210

    (103) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .

    LLAVELEFT       reduce using rule 103 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    $end            reduce using rule 103 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    RETURN          reduce using rule 103 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 103 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    BREAK           reduce using rule 103 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 103 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)


state 211

    (70) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .

    $end            reduce using rule 70 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    RETURN          reduce using rule 70 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 70 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    BREAK           reduce using rule 70 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 70 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)


state 212

    (69) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData . LLAVELEFT contArray LLAVERIGHT

    LLAVELEFT       shift and go to state 231


state 213

    (104) declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .

    LLAVELEFT       reduce using rule 104 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    $end            reduce using rule 104 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    RETURN          reduce using rule 104 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 104 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    BREAK           reduce using rule 104 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 104 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)


state 214

    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 232


state 215

    (41) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .

    $end            reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    RETURN          reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    BREAK           reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    CONTINUE        reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)


state 216

    (44) else -> ELSE . LLAVELEFT instrucciones LLAVERIGHT
    (45) else -> ELSE . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (46) else -> ELSE . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (47) else -> ELSE . sentenciaIf
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 233
    IF              shift and go to state 23

    sentenciaIf                    shift and go to state 234

state 217

    (42) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .
    (43) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT . else
    (44) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (45) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (46) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (47) else -> . ELSE sentenciaIf

    $end            reduce using rule 42 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 42 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 42 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 42 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 42 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 216

    else                           shift and go to state 235

state 218

    (62) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa . LLAVELEFT instrucciones LLAVERIGHT

    LLAVELEFT       shift and go to state 236


state 219

    (64) incrementa -> VARIABLE . INCREMENTO

    INCREMENTO      shift and go to state 237


state 220

    (74) masCont -> masCont COMA contenido .

    COMA            reduce using rule 74 (masCont -> masCont COMA contenido .)
    PARRIGHT        reduce using rule 74 (masCont -> masCont COMA contenido .)


state 221

    (48) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT . par LLAVERIGHT
    (49) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT . LLAVERIGHT
    (50) par -> . dato DOSPUNTOS dato mas
    (51) par -> . dato DOSPUNTOS dato
    (54) dato -> . VARIABLE
    (55) dato -> . expresion
    (56) dato -> . CADENA
    (57) dato -> . TRUE
    (58) dato -> . FALSE
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    LLAVERIGHT      shift and go to state 239
    VARIABLE        shift and go to state 241
    CADENA          shift and go to state 243
    TRUE            shift and go to state 244
    FALSE           shift and go to state 245
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    par                            shift and go to state 238
    dato                           shift and go to state 240
    expresion                      shift and go to state 242
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 222

    (124) bloque_switch -> CASE caso_switch DOSPUNTOS . instrucciones BREAK
    (125) bloque_switch -> CASE caso_switch DOSPUNTOS . instrucciones CONTINUE
    (126) bloque_switch -> CASE caso_switch DOSPUNTOS . instrucciones BREAK bloque_switch
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . slices
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . VARIABLE MASIGUAL acumular
    (24) asignacion -> . VARIABLE MENOSIGUAL expresion
    (25) asignacion -> . derefer IGUAL valor
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (62) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (71) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) puntero -> . PRODUCTO typeData
    (80) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (69) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (123) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (70) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (109) funcion -> . funcion_sin_parametro
    (110) funcion -> . funcion_parametro
    (111) funcion -> . funcion_sin_parametro_return
    (100) slices -> . declaracion_slices
    (101) slices -> . declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT
    (61) derefer -> . PRODUCTO VARIABLE
    (90) term -> . numericos
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (112) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (102) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (104) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 30
    BOOL            shift and go to state 17
    FUNC            shift and go to state 36
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 246
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    slices                         shift and go to state 18
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    funcion_sin_parametro          shift and go to state 31
    funcion_parametro              shift and go to state 32
    funcion_sin_parametro_return   shift and go to state 33
    declaracion_slices             shift and go to state 34
    numericos                      shift and go to state 35

state 223

    (131) switch_default -> DEFAULT DOSPUNTOS instrucciones .

    LLAVERIGHT      reduce using rule 131 (switch_default -> DEFAULT DOSPUNTOS instrucciones .)


state 224

    (98) stringArray -> COMILLA VARIABLE COMILLA COMA . stringArray
    (98) stringArray -> . COMILLA VARIABLE COMILLA COMA stringArray
    (99) stringArray -> . COMILLA VARIABLE COMILLA

    COMILLA         shift and go to state 141

    stringArray                    shift and go to state 247

state 225

    (120) parametros -> VARIABLE COMA parametros .

    PARRIGHT        reduce using rule 120 (parametros -> VARIABLE COMA parametros .)


state 226

    (112) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . LLAVERIGHT
    (114) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 248
    RETURN          shift and go to state 249


state 227

    (113) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 250


state 228

    (116) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . instrucciones LLAVERIGHT
    (117) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . RETURN LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . slices
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . VARIABLE MASIGUAL acumular
    (24) asignacion -> . VARIABLE MENOSIGUAL expresion
    (25) asignacion -> . derefer IGUAL valor
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (62) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (71) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) puntero -> . PRODUCTO typeData
    (80) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (69) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (123) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (70) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (109) funcion -> . funcion_sin_parametro
    (110) funcion -> . funcion_parametro
    (111) funcion -> . funcion_sin_parametro_return
    (100) slices -> . declaracion_slices
    (101) slices -> . declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT
    (61) derefer -> . PRODUCTO VARIABLE
    (90) term -> . numericos
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (112) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (102) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (104) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 252
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 30
    BOOL            shift and go to state 17
    FUNC            shift and go to state 36
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 251
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    slices                         shift and go to state 18
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    funcion_sin_parametro          shift and go to state 31
    funcion_parametro              shift and go to state 32
    funcion_sin_parametro_return   shift and go to state 33
    declaracion_slices             shift and go to state 34
    numericos                      shift and go to state 35

state 229

    (122) parametros -> typeData VARIABLE COMA . parametros
    (119) parametros -> . VARIABLE
    (120) parametros -> . VARIABLE COMA parametros
    (121) parametros -> . typeData VARIABLE
    (122) parametros -> . typeData VARIABLE COMA parametros
    (65) typeData -> . BOOL
    (66) typeData -> . INT
    (67) typeData -> . FLOAT
    (68) typeData -> . STRING

    VARIABLE        shift and go to state 174
    BOOL            shift and go to state 51
    INT             shift and go to state 52
    FLOAT           shift and go to state 53
    STRING          shift and go to state 54

    typeData                       shift and go to state 177
    parametros                     shift and go to state 253

state 230

    (102) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .

    LLAVELEFT       reduce using rule 102 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    $end            reduce using rule 102 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    RETURN          reduce using rule 102 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 102 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    BREAK           reduce using rule 102 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 102 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)


state 231

    (69) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT . contArray LLAVERIGHT
    (82) contArray -> . contArray COMA numericos
    (89) contArray -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    contArray                      shift and go to state 254
    numericos                      shift and go to state 72
    term                           shift and go to state 140

state 232

    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .
    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT . else
    (44) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (45) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (46) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (47) else -> . ELSE sentenciaIf

    $end            reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 216

    else                           shift and go to state 255

state 233

    (44) else -> ELSE LLAVELEFT . instrucciones LLAVERIGHT
    (45) else -> ELSE LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (46) else -> ELSE LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . slices
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . VARIABLE MASIGUAL acumular
    (24) asignacion -> . VARIABLE MENOSIGUAL expresion
    (25) asignacion -> . derefer IGUAL valor
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (62) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (71) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) puntero -> . PRODUCTO typeData
    (80) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (69) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (123) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (70) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (109) funcion -> . funcion_sin_parametro
    (110) funcion -> . funcion_parametro
    (111) funcion -> . funcion_sin_parametro_return
    (100) slices -> . declaracion_slices
    (101) slices -> . declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT
    (61) derefer -> . PRODUCTO VARIABLE
    (90) term -> . numericos
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (112) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (102) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (104) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 257
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 30
    BOOL            shift and go to state 17
    FUNC            shift and go to state 36
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 256
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    slices                         shift and go to state 18
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    funcion_sin_parametro          shift and go to state 31
    funcion_parametro              shift and go to state 32
    funcion_sin_parametro_return   shift and go to state 33
    declaracion_slices             shift and go to state 34
    numericos                      shift and go to state 35

state 234

    (47) else -> ELSE sentenciaIf .

    $end            reduce using rule 47 (else -> ELSE sentenciaIf .)
    RETURN          reduce using rule 47 (else -> ELSE sentenciaIf .)
    LLAVERIGHT      reduce using rule 47 (else -> ELSE sentenciaIf .)
    BREAK           reduce using rule 47 (else -> ELSE sentenciaIf .)
    CONTINUE        reduce using rule 47 (else -> ELSE sentenciaIf .)


state 235

    (43) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 43 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 43 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 43 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    BREAK           reduce using rule 43 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    CONTINUE        reduce using rule 43 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)


state 236

    (62) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT . instrucciones LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . slices
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . VARIABLE MASIGUAL acumular
    (24) asignacion -> . VARIABLE MENOSIGUAL expresion
    (25) asignacion -> . derefer IGUAL valor
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (132) condiciones -> . factor MAYORQUE factor
    (133) condiciones -> . factor MENORQUE factor
    (134) condiciones -> . factor DIFERENTE factor
    (135) condiciones -> . factor ESIGUAL factor
    (136) condiciones -> . factor MENORIGUAL factor
    (137) condiciones -> . factor MAYORIGUAL factor
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (43) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (62) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (71) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (49) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) puntero -> . PRODUCTO typeData
    (80) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (69) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (123) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (70) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (109) funcion -> . funcion_sin_parametro
    (110) funcion -> . funcion_parametro
    (111) funcion -> . funcion_sin_parametro_return
    (100) slices -> . declaracion_slices
    (101) slices -> . declaracion_slices LLAVELEFT contenido_arrays LLAVERIGHT
    (61) derefer -> . PRODUCTO VARIABLE
    (90) term -> . numericos
    (91) factor -> . numericos
    (92) factor -> . VARIABLE
    (143) factor -> . BOOL
    (112) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (113) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (114) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (116) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (117) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (118) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (115) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (102) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (103) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (104) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (105) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 30
    BOOL            shift and go to state 17
    FUNC            shift and go to state 36
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    condiciones                    shift and go to state 4
    instrucciones                  shift and go to state 258
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    slices                         shift and go to state 18
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    funcion_sin_parametro          shift and go to state 31
    funcion_parametro              shift and go to state 32
    funcion_sin_parametro_return   shift and go to state 33
    declaracion_slices             shift and go to state 34
    numericos                      shift and go to state 35

state 237

    (64) incrementa -> VARIABLE INCREMENTO .

    LLAVELEFT       reduce using rule 64 (incrementa -> VARIABLE INCREMENTO .)


state 238

    (48) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par . LLAVERIGHT

    LLAVERIGHT      shift and go to state 259


state 239

    (49) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .

    $end            reduce using rule 49 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    RETURN          reduce using rule 49 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 49 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    BREAK           reduce using rule 49 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    CONTINUE        reduce using rule 49 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)


state 240

    (50) par -> dato . DOSPUNTOS dato mas
    (51) par -> dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 260


state 241

    (54) dato -> VARIABLE .

    DOSPUNTOS       reduce using rule 54 (dato -> VARIABLE .)
    COMA            reduce using rule 54 (dato -> VARIABLE .)
    LLAVERIGHT      reduce using rule 54 (dato -> VARIABLE .)


state 242

    (55) dato -> expresion .
    (83) expresion -> expresion . SUMA term
    (84) expresion -> expresion . RESTA term
    (85) expresion -> expresion . PRODUCTO term
    (86) expresion -> expresion . DIVISION term
    (87) expresion -> expresion . MODULO term

    DOSPUNTOS       reduce using rule 55 (dato -> expresion .)
    COMA            reduce using rule 55 (dato -> expresion .)
    LLAVERIGHT      reduce using rule 55 (dato -> expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42


state 243

    (56) dato -> CADENA .

    DOSPUNTOS       reduce using rule 56 (dato -> CADENA .)
    COMA            reduce using rule 56 (dato -> CADENA .)
    LLAVERIGHT      reduce using rule 56 (dato -> CADENA .)


state 244

    (57) dato -> TRUE .

    DOSPUNTOS       reduce using rule 57 (dato -> TRUE .)
    COMA            reduce using rule 57 (dato -> TRUE .)
    LLAVERIGHT      reduce using rule 57 (dato -> TRUE .)


state 245

    (58) dato -> FALSE .

    DOSPUNTOS       reduce using rule 58 (dato -> FALSE .)
    COMA            reduce using rule 58 (dato -> FALSE .)
    LLAVERIGHT      reduce using rule 58 (dato -> FALSE .)


state 246

    (124) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones . BREAK
    (125) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones . CONTINUE
    (126) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones . BREAK bloque_switch

    BREAK           shift and go to state 261
    CONTINUE        shift and go to state 262


state 247

    (98) stringArray -> COMILLA VARIABLE COMILLA COMA stringArray .

    LLAVERIGHT      reduce using rule 98 (stringArray -> COMILLA VARIABLE COMILLA COMA stringArray .)


state 248

    (112) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 112 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 112 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 112 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 112 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 112 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)


state 249

    (114) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN . LLAVERIGHT
    (115) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 264
    VARIABLE        shift and go to state 263


state 250

    (113) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .

    $end            reduce using rule 113 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    RETURN          reduce using rule 113 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 113 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    BREAK           reduce using rule 113 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 113 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)


state 251

    (116) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones . LLAVERIGHT
    (117) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones . RETURN LLAVERIGHT

    LLAVERIGHT      shift and go to state 265
    RETURN          shift and go to state 266


state 252

    (118) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 267


state 253

    (122) parametros -> typeData VARIABLE COMA parametros .

    PARRIGHT        reduce using rule 122 (parametros -> typeData VARIABLE COMA parametros .)


state 254

    (69) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray . LLAVERIGHT
    (82) contArray -> contArray . COMA numericos

    LLAVERIGHT      shift and go to state 268
    COMA            shift and go to state 172


state 255

    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    BREAK           reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    CONTINUE        reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)


state 256

    (44) else -> ELSE LLAVELEFT instrucciones . LLAVERIGHT
    (45) else -> ELSE LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 269
    RETURN          shift and go to state 270


state 257

    (46) else -> ELSE LLAVELEFT RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 271


state 258

    (62) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones . LLAVERIGHT

    LLAVERIGHT      shift and go to state 272


state 259

    (48) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .

    $end            reduce using rule 48 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    RETURN          reduce using rule 48 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 48 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    BREAK           reduce using rule 48 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    CONTINUE        reduce using rule 48 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)


state 260

    (50) par -> dato DOSPUNTOS . dato mas
    (51) par -> dato DOSPUNTOS . dato
    (54) dato -> . VARIABLE
    (55) dato -> . expresion
    (56) dato -> . CADENA
    (57) dato -> . TRUE
    (58) dato -> . FALSE
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 241
    CADENA          shift and go to state 243
    TRUE            shift and go to state 244
    FALSE           shift and go to state 245
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    dato                           shift and go to state 273
    expresion                      shift and go to state 242
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 261

    (124) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK .
    (126) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK . bloque_switch
    (124) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK
    (125) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones CONTINUE
    (126) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
    (127) bloque_switch -> . switch_default
    (131) switch_default -> . DEFAULT DOSPUNTOS instrucciones

    LLAVERIGHT      reduce using rule 124 (bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK .)
    CASE            shift and go to state 168
    DEFAULT         shift and go to state 170

    bloque_switch                  shift and go to state 274
    switch_default                 shift and go to state 169

state 262

    (125) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones CONTINUE .

    LLAVERIGHT      reduce using rule 125 (bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones CONTINUE .)


state 263

    (115) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 275


state 264

    (114) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .

    $end            reduce using rule 114 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    RETURN          reduce using rule 114 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 114 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    BREAK           reduce using rule 114 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 114 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)


state 265

    (116) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 116 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 116 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 116 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 116 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 116 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)


state 266

    (117) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 276


state 267

    (118) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .

    $end            reduce using rule 118 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    RETURN          reduce using rule 118 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 118 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    BREAK           reduce using rule 118 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 118 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)


state 268

    (69) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .

    $end            reduce using rule 69 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    RETURN          reduce using rule 69 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 69 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    BREAK           reduce using rule 69 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    CONTINUE        reduce using rule 69 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)


state 269

    (44) else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 44 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 44 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 44 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 44 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 44 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)


state 270

    (45) else -> ELSE LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 277


state 271

    (46) else -> ELSE LLAVELEFT RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 278


state 272

    (62) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 62 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 62 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 62 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 62 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 62 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)


state 273

    (50) par -> dato DOSPUNTOS dato . mas
    (51) par -> dato DOSPUNTOS dato .
    (52) mas -> . mas COMA dato DOSPUNTOS dato
    (53) mas -> . COMA dato DOSPUNTOS dato

    LLAVERIGHT      reduce using rule 51 (par -> dato DOSPUNTOS dato .)
    COMA            shift and go to state 280

    mas                            shift and go to state 279

state 274

    (126) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch .

    LLAVERIGHT      reduce using rule 126 (bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch .)


state 275

    (115) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 115 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 115 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 115 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 115 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 115 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 276

    (117) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .

    $end            reduce using rule 117 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    RETURN          reduce using rule 117 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 117 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    BREAK           reduce using rule 117 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 117 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)


state 277

    (45) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 281


state 278

    (46) else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 46 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 46 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 46 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 46 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 46 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)


state 279

    (50) par -> dato DOSPUNTOS dato mas .
    (52) mas -> mas . COMA dato DOSPUNTOS dato

    LLAVERIGHT      reduce using rule 50 (par -> dato DOSPUNTOS dato mas .)
    COMA            shift and go to state 282


state 280

    (53) mas -> COMA . dato DOSPUNTOS dato
    (54) dato -> . VARIABLE
    (55) dato -> . expresion
    (56) dato -> . CADENA
    (57) dato -> . TRUE
    (58) dato -> . FALSE
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 241
    CADENA          shift and go to state 243
    TRUE            shift and go to state 244
    FALSE           shift and go to state 245
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    dato                           shift and go to state 283
    expresion                      shift and go to state 242
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 281

    (45) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 45 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 45 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 45 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 45 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 45 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 282

    (52) mas -> mas COMA . dato DOSPUNTOS dato
    (54) dato -> . VARIABLE
    (55) dato -> . expresion
    (56) dato -> . CADENA
    (57) dato -> . TRUE
    (58) dato -> . FALSE
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 241
    CADENA          shift and go to state 243
    TRUE            shift and go to state 244
    FALSE           shift and go to state 245
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    dato                           shift and go to state 284
    expresion                      shift and go to state 242
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 283

    (53) mas -> COMA dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 285


state 284

    (52) mas -> mas COMA dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 286


state 285

    (53) mas -> COMA dato DOSPUNTOS . dato
    (54) dato -> . VARIABLE
    (55) dato -> . expresion
    (56) dato -> . CADENA
    (57) dato -> . TRUE
    (58) dato -> . FALSE
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 241
    CADENA          shift and go to state 243
    TRUE            shift and go to state 244
    FALSE           shift and go to state 245
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    dato                           shift and go to state 287
    expresion                      shift and go to state 242
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 286

    (52) mas -> mas COMA dato DOSPUNTOS . dato
    (54) dato -> . VARIABLE
    (55) dato -> . expresion
    (56) dato -> . CADENA
    (57) dato -> . TRUE
    (58) dato -> . FALSE
    (83) expresion -> . expresion SUMA term
    (84) expresion -> . expresion RESTA term
    (85) expresion -> . expresion PRODUCTO term
    (86) expresion -> . expresion DIVISION term
    (87) expresion -> . expresion MODULO term
    (88) expresion -> . term
    (90) term -> . numericos
    (93) numericos -> . ENTERO
    (94) numericos -> . FLOTANTE
    (95) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 241
    CADENA          shift and go to state 243
    TRUE            shift and go to state 244
    FALSE           shift and go to state 245
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 37
    PARLEFT         shift and go to state 26

    dato                           shift and go to state 288
    expresion                      shift and go to state 242
    term                           shift and go to state 20
    numericos                      shift and go to state 72

state 287

    (53) mas -> COMA dato DOSPUNTOS dato .

    COMA            reduce using rule 53 (mas -> COMA dato DOSPUNTOS dato .)
    LLAVERIGHT      reduce using rule 53 (mas -> COMA dato DOSPUNTOS dato .)


state 288

    (52) mas -> mas COMA dato DOSPUNTOS dato .

    COMA            reduce using rule 52 (mas -> mas COMA dato DOSPUNTOS dato .)
    LLAVERIGHT      reduce using rule 52 (mas -> mas COMA dato DOSPUNTOS dato .)

