Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> expresion
Rule 3     instrucciones -> condiciones
Rule 4     instrucciones -> sentenciaIf
Rule 5     instrucciones -> sentenciaFor
Rule 6     instrucciones -> print
Rule 7     instrucciones -> mapa
Rule 8     instrucciones -> puntero
Rule 9     instrucciones -> lectura
Rule 10    instrucciones -> array
Rule 11    instrucciones -> switch
Rule 12    instrucciones -> arrayAsig
Rule 13    instrucciones -> funcion
Rule 14    asignacion -> VAR VARIABLE BOOL IGUAL booleano
Rule 15    asignacion -> VAR VARIABLE INT IGUAL expresion
Rule 16    asignacion -> VAR VARIABLE FLOAT IGUAL expresion
Rule 17    asignacion -> VAR VARIABLE STRING IGUAL CADENA
Rule 18    asignacion -> VAR VARIABLE puntero IGUAL refer
Rule 19    asignacion -> VAR VARIABLE puntero
Rule 20    asignacion -> VARIABLE DECLARADOR valor
Rule 21    asignacion -> VARIABLE IGUAL valor
Rule 22    asignacion -> VARIABLE MASIGUAL expresion
Rule 23    asignacion -> VARIABLE MASIGUAL CADENA
Rule 24    asignacion -> VARIABLE MASIGUAL VARIABLE
Rule 25    asignacion -> VARIABLE MENOSIGUAL expresion
Rule 26    asignacion -> derefer IGUAL valor
Rule 27    booleano -> condicion
Rule 28    booleano -> TRUE
Rule 29    booleano -> FALSE
Rule 30    valor -> booleano
Rule 31    valor -> expresion
Rule 32    valor -> CADENA
Rule 33    valor -> VARIABLE
Rule 34    valor -> mapa
Rule 35    valor -> refer
Rule 36    sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 37    sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
Rule 38    sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT
Rule 39    sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT else
Rule 40    sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 41    sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
Rule 42    else -> ELSE LLAVELEFT instrucciones LLAVERIGHT
Rule 43    else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 44    else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 45    else -> ELSE sentenciaIf
Rule 46    mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
Rule 47    mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
Rule 48    par -> dato DOSPUNTOS dato mas
Rule 49    par -> dato DOSPUNTOS dato
Rule 50    mas -> mas COMA dato DOSPUNTOS dato
Rule 51    mas -> COMA dato DOSPUNTOS dato
Rule 52    tipo -> BOOL
Rule 53    tipo -> INT
Rule 54    tipo -> FLOAT
Rule 55    tipo -> STRING
Rule 56    dato -> VARIABLE
Rule 57    dato -> expresion
Rule 58    dato -> CADENA
Rule 59    dato -> TRUE
Rule 60    dato -> FALSE
Rule 61    puntero -> PRODUCTO BOOL
Rule 62    puntero -> PRODUCTO INT
Rule 63    puntero -> PRODUCTO FLOAT
Rule 64    puntero -> PRODUCTO STRING
Rule 65    refer -> AMPERSAND VARIABLE
Rule 66    derefer -> PRODUCTO VARIABLE
Rule 67    sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
Rule 68    inicio -> VARIABLE DECLARADOR ENTERO
Rule 69    incrementa -> VARIABLE INCREMENTO
Rule 70    typeData -> BOOL
Rule 71    typeData -> INT
Rule 72    typeData -> FLOAT
Rule 73    typeData -> STRING
Rule 74    array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
Rule 75    arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
Rule 76    print -> IMPRIMIR PARLEFT contPrint PARRIGHT
Rule 77    contPrint -> contenido masCont
Rule 78    contPrint -> contenido
Rule 79    masCont -> masCont COMA contenido
Rule 80    masCont -> COMA contenido
Rule 81    contenido -> expresion
Rule 82    contenido -> CADENA
Rule 83    contenido -> VARIABLE
Rule 84    contenido -> <empty>
Rule 85    lectura -> SCAN PARLEFT contScan PARRIGHT
Rule 86    contScan -> AMPERSAND VARIABLE
Rule 87    contArray -> contArray COMA numericos
Rule 88    expresion -> expresion SUMA term
Rule 89    expresion -> expresion RESTA term
Rule 90    expresion -> expresion PRODUCTO term
Rule 91    expresion -> expresion DIVISION term
Rule 92    expresion -> expresion MODULO term
Rule 93    expresion -> term
Rule 94    contArray -> term
Rule 95    term -> numericos
Rule 96    factor -> numericos
Rule 97    factor -> VARIABLE
Rule 98    numericos -> ENTERO
Rule 99    numericos -> FLOTANTE
Rule 100   numericos -> PARLEFT expresion PARRIGHT
Rule 101   comparacion -> condiciones
Rule 102   comparacion -> NEGACION PARLEFT condiciones PARRIGHT
Rule 103   comparacion -> PARLEFT condiciones PARRIGHT
Rule 104   funcion -> funcion_sin_parametro
Rule 105   funcion -> funcion_parametro
Rule 106   funcion -> funcion_sin_parametro_return
Rule 107   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
Rule 108   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
Rule 109   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
Rule 110   funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 111   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
Rule 112   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
Rule 113   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
Rule 114   parametros -> VARIABLE
Rule 115   parametros -> VARIABLE COMA parametros
Rule 116   parametros -> typeData VARIABLE
Rule 117   parametros -> typeData VARIABLE COMA parametros
Rule 118   switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
Rule 119   bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK
Rule 120   bloque_switch -> CASE caso DOSPUNTOS instrucciones CONTINUE
Rule 121   bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch
Rule 122   bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK switch_default
Rule 123   bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch switch_default
Rule 124   bloque_switch -> switch_default
Rule 125   caso -> VARIABLE
Rule 126   caso -> CADENA
Rule 127   caso -> ENTERO
Rule 128   switch_default -> DEFAULT DOSPUNTOS instrucciones
Rule 129   condiciones -> factor MAYORQUE factor
Rule 130   condiciones -> factor MENORQUE factor
Rule 131   condiciones -> factor DIFERENTE factor
Rule 132   condiciones -> factor ESIGUAL factor
Rule 133   condiciones -> factor MENORIGUAL factor
Rule 134   condiciones -> factor MAYORIGUAL factor
Rule 135   comparaciones -> comparacion
Rule 136   comparaciones -> comparacion anado comparaciones
Rule 137   anado -> condicion
Rule 138   condicion -> AND
Rule 139   condicion -> OR
Rule 140   factor -> BOOL

Terminals, with rules where they appear

AMPERSAND            : 65 86
AND                  : 138
BOOL                 : 14 52 61 70 140
BREAK                : 119 121 122 123
CADENA               : 17 23 32 58 82 126
CASE                 : 119 120 121 122 123
COMA                 : 50 51 79 80 87 115 117
CONTINUE             : 120
CORCHLEFT            : 46 47 74 75
CORCHRIGHT           : 46 47 74 75
DECLARADOR           : 20 68 74
DEFAULT              : 128
DIFERENTE            : 131
DIVISION             : 91
DOSPUNTOS            : 48 49 50 51 119 120 121 122 123 128
ELSE                 : 42 43 44 45
ENTERO               : 68 74 75 98 127
ESIGUAL              : 132
FALSE                : 29 60
FLOAT                : 16 54 63 72
FLOTANTE             : 99
FOR                  : 67
FUNC                 : 107 108 109 110 111 112 113
IF                   : 36 37 38 39 40 41
IGUAL                : 14 15 16 17 18 21 26
IMPRIMIR             : 76
INCREMENTO           : 69
INT                  : 15 53 62 71
LLAVELEFT            : 36 37 38 39 40 41 42 43 44 46 47 67 74 107 108 109 110 111 112 113 118
LLAVERIGHT           : 36 37 38 39 40 41 42 43 44 46 47 67 74 107 108 109 110 111 112 113 118
MAP                  : 46 47
MASIGUAL             : 22 23 24
MAYORIGUAL           : 134
MAYORQUE             : 129
MENORIGUAL           : 133
MENORQUE             : 130
MENOSIGUAL           : 25
MODULO               : 92
NEGACION             : 102
OR                   : 139
PARLEFT              : 76 85 100 102 103 107 108 109 110 111 112 113
PARRIGHT             : 76 85 100 102 103 107 108 109 110 111 112 113
PRODUCTO             : 61 62 63 64 66 90
PUNTOCOMA            : 67 67
RESTA                : 89
RETURN               : 36 37 40 41 43 44 108 109 110 112 113
SCAN                 : 85
STRING               : 17 55 64 73
SUMA                 : 88
SWITCH               : 118
TRUE                 : 28 59
VAR                  : 14 15 16 17 18 19 75
VARIABLE             : 14 15 16 17 18 19 20 21 22 23 24 24 25 33 36 37 40 41 43 44 56 65 66 68 69 74 75 83 86 97 107 108 109 110 110 111 112 113 114 115 116 117 118 125
error                : 

Nonterminals, with rules where they appear

anado                : 136
array                : 10
arrayAsig            : 12
asignacion           : 1
bloque_switch        : 118 121 123
booleano             : 14 30
caso                 : 119 120 121 122 123
comparacion          : 135 136
comparaciones        : 136
condicion            : 27 137
condiciones          : 3 36 37 38 39 40 41 67 101 102 103
contArray            : 74 87
contPrint            : 76
contScan             : 85
contenido            : 77 78 79 80
dato                 : 48 48 49 49 50 50 51 51
derefer              : 26
else                 : 37 39 41
expresion            : 2 15 16 22 25 31 57 81 88 89 90 91 92 100
factor               : 129 129 130 130 131 131 132 132 133 133 134 134
funcion              : 13
funcion_parametro    : 105
funcion_sin_parametro : 104
funcion_sin_parametro_return : 106
incrementa           : 67
inicio               : 67
instrucciones        : 36 37 38 39 42 43 67 107 109 110 111 112 119 120 121 122 123 128 0
lectura              : 9
mapa                 : 7 34
mas                  : 48 50
masCont              : 77 79
numericos            : 87 95 96
par                  : 46
parametros           : 111 112 113 115 117
print                : 6
puntero              : 8 18 19
refer                : 18 35
sentenciaFor         : 5
sentenciaIf          : 4 45
switch               : 11
switch_default       : 122 123 124
term                 : 88 89 90 91 92 93 94
tipo                 : 46 46 47 47
typeData             : 74 75 116 117
valor                : 20 21 26

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (129) condiciones -> . factor MAYORQUE factor
    (130) condiciones -> . factor MENORQUE factor
    (131) condiciones -> . factor DIFERENTE factor
    (132) condiciones -> . factor ESIGUAL factor
    (133) condiciones -> . factor MENORIGUAL factor
    (134) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    RETURN          reduce using rule 1 (instrucciones -> asignacion .)
    LLAVERIGHT      reduce using rule 1 (instrucciones -> asignacion .)
    DEFAULT         reduce using rule 1 (instrucciones -> asignacion .)
    BREAK           reduce using rule 1 (instrucciones -> asignacion .)
    CONTINUE        reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 2 (instrucciones -> expresion .)
    RETURN          reduce using rule 2 (instrucciones -> expresion .)
    LLAVERIGHT      reduce using rule 2 (instrucciones -> expresion .)
    DEFAULT         reduce using rule 2 (instrucciones -> expresion .)
    BREAK           reduce using rule 2 (instrucciones -> expresion .)
    CONTINUE        reduce using rule 2 (instrucciones -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 4

    (3) instrucciones -> condiciones .

    $end            reduce using rule 3 (instrucciones -> condiciones .)
    RETURN          reduce using rule 3 (instrucciones -> condiciones .)
    LLAVERIGHT      reduce using rule 3 (instrucciones -> condiciones .)
    DEFAULT         reduce using rule 3 (instrucciones -> condiciones .)
    BREAK           reduce using rule 3 (instrucciones -> condiciones .)
    CONTINUE        reduce using rule 3 (instrucciones -> condiciones .)


state 5

    (4) instrucciones -> sentenciaIf .

    $end            reduce using rule 4 (instrucciones -> sentenciaIf .)
    RETURN          reduce using rule 4 (instrucciones -> sentenciaIf .)
    LLAVERIGHT      reduce using rule 4 (instrucciones -> sentenciaIf .)
    DEFAULT         reduce using rule 4 (instrucciones -> sentenciaIf .)
    BREAK           reduce using rule 4 (instrucciones -> sentenciaIf .)
    CONTINUE        reduce using rule 4 (instrucciones -> sentenciaIf .)


state 6

    (5) instrucciones -> sentenciaFor .

    $end            reduce using rule 5 (instrucciones -> sentenciaFor .)
    RETURN          reduce using rule 5 (instrucciones -> sentenciaFor .)
    LLAVERIGHT      reduce using rule 5 (instrucciones -> sentenciaFor .)
    DEFAULT         reduce using rule 5 (instrucciones -> sentenciaFor .)
    BREAK           reduce using rule 5 (instrucciones -> sentenciaFor .)
    CONTINUE        reduce using rule 5 (instrucciones -> sentenciaFor .)


state 7

    (6) instrucciones -> print .

    $end            reduce using rule 6 (instrucciones -> print .)
    RETURN          reduce using rule 6 (instrucciones -> print .)
    LLAVERIGHT      reduce using rule 6 (instrucciones -> print .)
    DEFAULT         reduce using rule 6 (instrucciones -> print .)
    BREAK           reduce using rule 6 (instrucciones -> print .)
    CONTINUE        reduce using rule 6 (instrucciones -> print .)


state 8

    (7) instrucciones -> mapa .

    $end            reduce using rule 7 (instrucciones -> mapa .)
    RETURN          reduce using rule 7 (instrucciones -> mapa .)
    LLAVERIGHT      reduce using rule 7 (instrucciones -> mapa .)
    DEFAULT         reduce using rule 7 (instrucciones -> mapa .)
    BREAK           reduce using rule 7 (instrucciones -> mapa .)
    CONTINUE        reduce using rule 7 (instrucciones -> mapa .)


state 9

    (8) instrucciones -> puntero .

    $end            reduce using rule 8 (instrucciones -> puntero .)
    RETURN          reduce using rule 8 (instrucciones -> puntero .)
    LLAVERIGHT      reduce using rule 8 (instrucciones -> puntero .)
    DEFAULT         reduce using rule 8 (instrucciones -> puntero .)
    BREAK           reduce using rule 8 (instrucciones -> puntero .)
    CONTINUE        reduce using rule 8 (instrucciones -> puntero .)


state 10

    (9) instrucciones -> lectura .

    $end            reduce using rule 9 (instrucciones -> lectura .)
    RETURN          reduce using rule 9 (instrucciones -> lectura .)
    LLAVERIGHT      reduce using rule 9 (instrucciones -> lectura .)
    DEFAULT         reduce using rule 9 (instrucciones -> lectura .)
    BREAK           reduce using rule 9 (instrucciones -> lectura .)
    CONTINUE        reduce using rule 9 (instrucciones -> lectura .)


state 11

    (10) instrucciones -> array .

    $end            reduce using rule 10 (instrucciones -> array .)
    RETURN          reduce using rule 10 (instrucciones -> array .)
    LLAVERIGHT      reduce using rule 10 (instrucciones -> array .)
    DEFAULT         reduce using rule 10 (instrucciones -> array .)
    BREAK           reduce using rule 10 (instrucciones -> array .)
    CONTINUE        reduce using rule 10 (instrucciones -> array .)


state 12

    (11) instrucciones -> switch .

    $end            reduce using rule 11 (instrucciones -> switch .)
    RETURN          reduce using rule 11 (instrucciones -> switch .)
    LLAVERIGHT      reduce using rule 11 (instrucciones -> switch .)
    DEFAULT         reduce using rule 11 (instrucciones -> switch .)
    BREAK           reduce using rule 11 (instrucciones -> switch .)
    CONTINUE        reduce using rule 11 (instrucciones -> switch .)


state 13

    (12) instrucciones -> arrayAsig .

    $end            reduce using rule 12 (instrucciones -> arrayAsig .)
    RETURN          reduce using rule 12 (instrucciones -> arrayAsig .)
    LLAVERIGHT      reduce using rule 12 (instrucciones -> arrayAsig .)
    DEFAULT         reduce using rule 12 (instrucciones -> arrayAsig .)
    BREAK           reduce using rule 12 (instrucciones -> arrayAsig .)
    CONTINUE        reduce using rule 12 (instrucciones -> arrayAsig .)


state 14

    (13) instrucciones -> funcion .

    $end            reduce using rule 13 (instrucciones -> funcion .)
    RETURN          reduce using rule 13 (instrucciones -> funcion .)
    LLAVERIGHT      reduce using rule 13 (instrucciones -> funcion .)
    DEFAULT         reduce using rule 13 (instrucciones -> funcion .)
    BREAK           reduce using rule 13 (instrucciones -> funcion .)
    CONTINUE        reduce using rule 13 (instrucciones -> funcion .)


state 15

    (14) asignacion -> VAR . VARIABLE BOOL IGUAL booleano
    (15) asignacion -> VAR . VARIABLE INT IGUAL expresion
    (16) asignacion -> VAR . VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> VAR . VARIABLE STRING IGUAL CADENA
    (18) asignacion -> VAR . VARIABLE puntero IGUAL refer
    (19) asignacion -> VAR . VARIABLE puntero
    (75) arrayAsig -> VAR . VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData

    VARIABLE        shift and go to state 41


state 16

    (20) asignacion -> VARIABLE . DECLARADOR valor
    (21) asignacion -> VARIABLE . IGUAL valor
    (22) asignacion -> VARIABLE . MASIGUAL expresion
    (23) asignacion -> VARIABLE . MASIGUAL CADENA
    (24) asignacion -> VARIABLE . MASIGUAL VARIABLE
    (25) asignacion -> VARIABLE . MENOSIGUAL expresion
    (74) array -> VARIABLE . DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (97) factor -> VARIABLE .

    DECLARADOR      shift and go to state 42
    IGUAL           shift and go to state 43
    MASIGUAL        shift and go to state 44
    MENOSIGUAL      shift and go to state 45
    MAYORQUE        reduce using rule 97 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 97 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 97 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 97 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 97 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 97 (factor -> VARIABLE .)


state 17

    (140) factor -> BOOL .

    MAYORQUE        reduce using rule 140 (factor -> BOOL .)
    MENORQUE        reduce using rule 140 (factor -> BOOL .)
    DIFERENTE       reduce using rule 140 (factor -> BOOL .)
    ESIGUAL         reduce using rule 140 (factor -> BOOL .)
    MENORIGUAL      reduce using rule 140 (factor -> BOOL .)
    MAYORIGUAL      reduce using rule 140 (factor -> BOOL .)
    $end            reduce using rule 140 (factor -> BOOL .)
    LLAVELEFT       reduce using rule 140 (factor -> BOOL .)
    RETURN          reduce using rule 140 (factor -> BOOL .)
    LLAVERIGHT      reduce using rule 140 (factor -> BOOL .)
    PUNTOCOMA       reduce using rule 140 (factor -> BOOL .)
    DEFAULT         reduce using rule 140 (factor -> BOOL .)
    BREAK           reduce using rule 140 (factor -> BOOL .)
    CONTINUE        reduce using rule 140 (factor -> BOOL .)


state 18

    (26) asignacion -> derefer . IGUAL valor

    IGUAL           shift and go to state 46


state 19

    (93) expresion -> term .

    SUMA            reduce using rule 93 (expresion -> term .)
    RESTA           reduce using rule 93 (expresion -> term .)
    PRODUCTO        reduce using rule 93 (expresion -> term .)
    DIVISION        reduce using rule 93 (expresion -> term .)
    MODULO          reduce using rule 93 (expresion -> term .)
    $end            reduce using rule 93 (expresion -> term .)
    PARRIGHT        reduce using rule 93 (expresion -> term .)
    RETURN          reduce using rule 93 (expresion -> term .)
    LLAVERIGHT      reduce using rule 93 (expresion -> term .)
    DEFAULT         reduce using rule 93 (expresion -> term .)
    BREAK           reduce using rule 93 (expresion -> term .)
    CONTINUE        reduce using rule 93 (expresion -> term .)
    COMA            reduce using rule 93 (expresion -> term .)
    DOSPUNTOS       reduce using rule 93 (expresion -> term .)


state 20

    (61) puntero -> PRODUCTO . BOOL
    (62) puntero -> PRODUCTO . INT
    (63) puntero -> PRODUCTO . FLOAT
    (64) puntero -> PRODUCTO . STRING
    (66) derefer -> PRODUCTO . VARIABLE

    BOOL            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    STRING          shift and go to state 50
    VARIABLE        shift and go to state 51


state 21

    (129) condiciones -> factor . MAYORQUE factor
    (130) condiciones -> factor . MENORQUE factor
    (131) condiciones -> factor . DIFERENTE factor
    (132) condiciones -> factor . ESIGUAL factor
    (133) condiciones -> factor . MENORIGUAL factor
    (134) condiciones -> factor . MAYORIGUAL factor

    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    DIFERENTE       shift and go to state 54
    ESIGUAL         shift and go to state 55
    MENORIGUAL      shift and go to state 56
    MAYORIGUAL      shift and go to state 57


state 22

    (36) sentenciaIf -> IF . condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF . condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF . condiciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> IF . condiciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> IF . condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF . condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (129) condiciones -> . factor MAYORQUE factor
    (130) condiciones -> . factor MENORQUE factor
    (131) condiciones -> . factor DIFERENTE factor
    (132) condiciones -> . factor ESIGUAL factor
    (133) condiciones -> . factor MENORIGUAL factor
    (134) condiciones -> . factor MAYORIGUAL factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    condiciones                    shift and go to state 58
    factor                         shift and go to state 21
    numericos                      shift and go to state 60

state 23

    (67) sentenciaFor -> FOR . inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (68) inicio -> . VARIABLE DECLARADOR ENTERO

    VARIABLE        shift and go to state 62

    inicio                         shift and go to state 61

state 24

    (76) print -> IMPRIMIR . PARLEFT contPrint PARRIGHT

    PARLEFT         shift and go to state 63


state 25

    (100) numericos -> PARLEFT . expresion PARRIGHT
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    expresion                      shift and go to state 64
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 26

    (46) mapa -> MAP . CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP . CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT

    CORCHLEFT       shift and go to state 66


state 27

    (85) lectura -> SCAN . PARLEFT contScan PARRIGHT

    PARLEFT         shift and go to state 67


state 28

    (98) numericos -> ENTERO .

    SUMA            reduce using rule 98 (numericos -> ENTERO .)
    RESTA           reduce using rule 98 (numericos -> ENTERO .)
    PRODUCTO        reduce using rule 98 (numericos -> ENTERO .)
    DIVISION        reduce using rule 98 (numericos -> ENTERO .)
    MODULO          reduce using rule 98 (numericos -> ENTERO .)
    $end            reduce using rule 98 (numericos -> ENTERO .)
    MAYORQUE        reduce using rule 98 (numericos -> ENTERO .)
    MENORQUE        reduce using rule 98 (numericos -> ENTERO .)
    DIFERENTE       reduce using rule 98 (numericos -> ENTERO .)
    ESIGUAL         reduce using rule 98 (numericos -> ENTERO .)
    MENORIGUAL      reduce using rule 98 (numericos -> ENTERO .)
    MAYORIGUAL      reduce using rule 98 (numericos -> ENTERO .)
    PARRIGHT        reduce using rule 98 (numericos -> ENTERO .)
    RETURN          reduce using rule 98 (numericos -> ENTERO .)
    LLAVERIGHT      reduce using rule 98 (numericos -> ENTERO .)
    DEFAULT         reduce using rule 98 (numericos -> ENTERO .)
    BREAK           reduce using rule 98 (numericos -> ENTERO .)
    CONTINUE        reduce using rule 98 (numericos -> ENTERO .)
    COMA            reduce using rule 98 (numericos -> ENTERO .)
    DOSPUNTOS       reduce using rule 98 (numericos -> ENTERO .)
    LLAVELEFT       reduce using rule 98 (numericos -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (numericos -> ENTERO .)


state 29

    (118) switch -> SWITCH . VARIABLE LLAVELEFT bloque_switch LLAVERIGHT

    VARIABLE        shift and go to state 68


state 30

    (104) funcion -> funcion_sin_parametro .

    $end            reduce using rule 104 (funcion -> funcion_sin_parametro .)
    RETURN          reduce using rule 104 (funcion -> funcion_sin_parametro .)
    LLAVERIGHT      reduce using rule 104 (funcion -> funcion_sin_parametro .)
    DEFAULT         reduce using rule 104 (funcion -> funcion_sin_parametro .)
    BREAK           reduce using rule 104 (funcion -> funcion_sin_parametro .)
    CONTINUE        reduce using rule 104 (funcion -> funcion_sin_parametro .)


state 31

    (105) funcion -> funcion_parametro .

    $end            reduce using rule 105 (funcion -> funcion_parametro .)
    RETURN          reduce using rule 105 (funcion -> funcion_parametro .)
    LLAVERIGHT      reduce using rule 105 (funcion -> funcion_parametro .)
    DEFAULT         reduce using rule 105 (funcion -> funcion_parametro .)
    BREAK           reduce using rule 105 (funcion -> funcion_parametro .)
    CONTINUE        reduce using rule 105 (funcion -> funcion_parametro .)


state 32

    (106) funcion -> funcion_sin_parametro_return .

    $end            reduce using rule 106 (funcion -> funcion_sin_parametro_return .)
    RETURN          reduce using rule 106 (funcion -> funcion_sin_parametro_return .)
    LLAVERIGHT      reduce using rule 106 (funcion -> funcion_sin_parametro_return .)
    DEFAULT         reduce using rule 106 (funcion -> funcion_sin_parametro_return .)
    BREAK           reduce using rule 106 (funcion -> funcion_sin_parametro_return .)
    CONTINUE        reduce using rule 106 (funcion -> funcion_sin_parametro_return .)


state 33

    (95) term -> numericos .
    (96) factor -> numericos .

    SUMA            reduce using rule 95 (term -> numericos .)
    RESTA           reduce using rule 95 (term -> numericos .)
    PRODUCTO        reduce using rule 95 (term -> numericos .)
    DIVISION        reduce using rule 95 (term -> numericos .)
    MODULO          reduce using rule 95 (term -> numericos .)
    $end            reduce using rule 95 (term -> numericos .)
    RETURN          reduce using rule 95 (term -> numericos .)
    LLAVERIGHT      reduce using rule 95 (term -> numericos .)
    DEFAULT         reduce using rule 95 (term -> numericos .)
    BREAK           reduce using rule 95 (term -> numericos .)
    CONTINUE        reduce using rule 95 (term -> numericos .)
    MAYORQUE        reduce using rule 96 (factor -> numericos .)
    MENORQUE        reduce using rule 96 (factor -> numericos .)
    DIFERENTE       reduce using rule 96 (factor -> numericos .)
    ESIGUAL         reduce using rule 96 (factor -> numericos .)
    MENORIGUAL      reduce using rule 96 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 96 (factor -> numericos .)


state 34

    (107) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 69


state 35

    (99) numericos -> FLOTANTE .

    SUMA            reduce using rule 99 (numericos -> FLOTANTE .)
    RESTA           reduce using rule 99 (numericos -> FLOTANTE .)
    PRODUCTO        reduce using rule 99 (numericos -> FLOTANTE .)
    DIVISION        reduce using rule 99 (numericos -> FLOTANTE .)
    MODULO          reduce using rule 99 (numericos -> FLOTANTE .)
    $end            reduce using rule 99 (numericos -> FLOTANTE .)
    MAYORQUE        reduce using rule 99 (numericos -> FLOTANTE .)
    MENORQUE        reduce using rule 99 (numericos -> FLOTANTE .)
    DIFERENTE       reduce using rule 99 (numericos -> FLOTANTE .)
    ESIGUAL         reduce using rule 99 (numericos -> FLOTANTE .)
    MENORIGUAL      reduce using rule 99 (numericos -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 99 (numericos -> FLOTANTE .)
    PARRIGHT        reduce using rule 99 (numericos -> FLOTANTE .)
    RETURN          reduce using rule 99 (numericos -> FLOTANTE .)
    LLAVERIGHT      reduce using rule 99 (numericos -> FLOTANTE .)
    DEFAULT         reduce using rule 99 (numericos -> FLOTANTE .)
    BREAK           reduce using rule 99 (numericos -> FLOTANTE .)
    CONTINUE        reduce using rule 99 (numericos -> FLOTANTE .)
    COMA            reduce using rule 99 (numericos -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 99 (numericos -> FLOTANTE .)
    LLAVELEFT       reduce using rule 99 (numericos -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 99 (numericos -> FLOTANTE .)


state 36

    (88) expresion -> expresion SUMA . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    term                           shift and go to state 70
    numericos                      shift and go to state 65

state 37

    (89) expresion -> expresion RESTA . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    term                           shift and go to state 71
    numericos                      shift and go to state 65

state 38

    (90) expresion -> expresion PRODUCTO . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    term                           shift and go to state 72
    numericos                      shift and go to state 65

state 39

    (91) expresion -> expresion DIVISION . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    term                           shift and go to state 73
    numericos                      shift and go to state 65

state 40

    (92) expresion -> expresion MODULO . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    term                           shift and go to state 74
    numericos                      shift and go to state 65

state 41

    (14) asignacion -> VAR VARIABLE . BOOL IGUAL booleano
    (15) asignacion -> VAR VARIABLE . INT IGUAL expresion
    (16) asignacion -> VAR VARIABLE . FLOAT IGUAL expresion
    (17) asignacion -> VAR VARIABLE . STRING IGUAL CADENA
    (18) asignacion -> VAR VARIABLE . puntero IGUAL refer
    (19) asignacion -> VAR VARIABLE . puntero
    (75) arrayAsig -> VAR VARIABLE . CORCHLEFT ENTERO CORCHRIGHT typeData
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING

    BOOL            shift and go to state 75
    INT             shift and go to state 76
    FLOAT           shift and go to state 77
    STRING          shift and go to state 78
    CORCHLEFT       shift and go to state 80
    PRODUCTO        shift and go to state 81

    puntero                        shift and go to state 79

state 42

    (20) asignacion -> VARIABLE DECLARADOR . valor
    (74) array -> VARIABLE DECLARADOR . CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (30) valor -> . booleano
    (31) valor -> . expresion
    (32) valor -> . CADENA
    (33) valor -> . VARIABLE
    (34) valor -> . mapa
    (35) valor -> . refer
    (27) booleano -> . condicion
    (28) booleano -> . TRUE
    (29) booleano -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (65) refer -> . AMPERSAND VARIABLE
    (138) condicion -> . AND
    (139) condicion -> . OR
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CORCHLEFT       shift and go to state 84
    CADENA          shift and go to state 87
    VARIABLE        shift and go to state 82
    TRUE            shift and go to state 91
    FALSE           shift and go to state 92
    MAP             shift and go to state 26
    AMPERSAND       shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    valor                          shift and go to state 83
    booleano                       shift and go to state 85
    expresion                      shift and go to state 86
    mapa                           shift and go to state 88
    refer                          shift and go to state 89
    condicion                      shift and go to state 90
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 43

    (21) asignacion -> VARIABLE IGUAL . valor
    (30) valor -> . booleano
    (31) valor -> . expresion
    (32) valor -> . CADENA
    (33) valor -> . VARIABLE
    (34) valor -> . mapa
    (35) valor -> . refer
    (27) booleano -> . condicion
    (28) booleano -> . TRUE
    (29) booleano -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (65) refer -> . AMPERSAND VARIABLE
    (138) condicion -> . AND
    (139) condicion -> . OR
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 87
    VARIABLE        shift and go to state 82
    TRUE            shift and go to state 91
    FALSE           shift and go to state 92
    MAP             shift and go to state 26
    AMPERSAND       shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    valor                          shift and go to state 96
    booleano                       shift and go to state 85
    expresion                      shift and go to state 86
    mapa                           shift and go to state 88
    refer                          shift and go to state 89
    condicion                      shift and go to state 90
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 44

    (22) asignacion -> VARIABLE MASIGUAL . expresion
    (23) asignacion -> VARIABLE MASIGUAL . CADENA
    (24) asignacion -> VARIABLE MASIGUAL . VARIABLE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 99
    VARIABLE        shift and go to state 97
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    expresion                      shift and go to state 98
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 45

    (25) asignacion -> VARIABLE MENOSIGUAL . expresion
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    expresion                      shift and go to state 100
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 46

    (26) asignacion -> derefer IGUAL . valor
    (30) valor -> . booleano
    (31) valor -> . expresion
    (32) valor -> . CADENA
    (33) valor -> . VARIABLE
    (34) valor -> . mapa
    (35) valor -> . refer
    (27) booleano -> . condicion
    (28) booleano -> . TRUE
    (29) booleano -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (65) refer -> . AMPERSAND VARIABLE
    (138) condicion -> . AND
    (139) condicion -> . OR
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 87
    VARIABLE        shift and go to state 82
    TRUE            shift and go to state 91
    FALSE           shift and go to state 92
    MAP             shift and go to state 26
    AMPERSAND       shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    valor                          shift and go to state 101
    booleano                       shift and go to state 85
    expresion                      shift and go to state 86
    mapa                           shift and go to state 88
    refer                          shift and go to state 89
    condicion                      shift and go to state 90
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 47

    (61) puntero -> PRODUCTO BOOL .

    $end            reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    IGUAL           reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    RETURN          reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    LLAVERIGHT      reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    DEFAULT         reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    BREAK           reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    CONTINUE        reduce using rule 61 (puntero -> PRODUCTO BOOL .)


state 48

    (62) puntero -> PRODUCTO INT .

    $end            reduce using rule 62 (puntero -> PRODUCTO INT .)
    IGUAL           reduce using rule 62 (puntero -> PRODUCTO INT .)
    RETURN          reduce using rule 62 (puntero -> PRODUCTO INT .)
    LLAVERIGHT      reduce using rule 62 (puntero -> PRODUCTO INT .)
    DEFAULT         reduce using rule 62 (puntero -> PRODUCTO INT .)
    BREAK           reduce using rule 62 (puntero -> PRODUCTO INT .)
    CONTINUE        reduce using rule 62 (puntero -> PRODUCTO INT .)


state 49

    (63) puntero -> PRODUCTO FLOAT .

    $end            reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    IGUAL           reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    RETURN          reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    LLAVERIGHT      reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    DEFAULT         reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    BREAK           reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    CONTINUE        reduce using rule 63 (puntero -> PRODUCTO FLOAT .)


state 50

    (64) puntero -> PRODUCTO STRING .

    $end            reduce using rule 64 (puntero -> PRODUCTO STRING .)
    IGUAL           reduce using rule 64 (puntero -> PRODUCTO STRING .)
    RETURN          reduce using rule 64 (puntero -> PRODUCTO STRING .)
    LLAVERIGHT      reduce using rule 64 (puntero -> PRODUCTO STRING .)
    DEFAULT         reduce using rule 64 (puntero -> PRODUCTO STRING .)
    BREAK           reduce using rule 64 (puntero -> PRODUCTO STRING .)
    CONTINUE        reduce using rule 64 (puntero -> PRODUCTO STRING .)


state 51

    (66) derefer -> PRODUCTO VARIABLE .

    IGUAL           reduce using rule 66 (derefer -> PRODUCTO VARIABLE .)


state 52

    (129) condiciones -> factor MAYORQUE . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 102
    numericos                      shift and go to state 60

state 53

    (130) condiciones -> factor MENORQUE . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 103
    numericos                      shift and go to state 60

state 54

    (131) condiciones -> factor DIFERENTE . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 104
    numericos                      shift and go to state 60

state 55

    (132) condiciones -> factor ESIGUAL . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 105
    numericos                      shift and go to state 60

state 56

    (133) condiciones -> factor MENORIGUAL . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 106
    numericos                      shift and go to state 60

state 57

    (134) condiciones -> factor MAYORIGUAL . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 107
    numericos                      shift and go to state 60

state 58

    (36) sentenciaIf -> IF condiciones . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF condiciones . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF condiciones . LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> IF condiciones . LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> IF condiciones . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF condiciones . LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 108


state 59

    (97) factor -> VARIABLE .

    MAYORQUE        reduce using rule 97 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 97 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 97 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 97 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 97 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 97 (factor -> VARIABLE .)
    $end            reduce using rule 97 (factor -> VARIABLE .)
    LLAVELEFT       reduce using rule 97 (factor -> VARIABLE .)
    RETURN          reduce using rule 97 (factor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 97 (factor -> VARIABLE .)
    PUNTOCOMA       reduce using rule 97 (factor -> VARIABLE .)
    DEFAULT         reduce using rule 97 (factor -> VARIABLE .)
    BREAK           reduce using rule 97 (factor -> VARIABLE .)
    CONTINUE        reduce using rule 97 (factor -> VARIABLE .)


state 60

    (96) factor -> numericos .

    MAYORQUE        reduce using rule 96 (factor -> numericos .)
    MENORQUE        reduce using rule 96 (factor -> numericos .)
    DIFERENTE       reduce using rule 96 (factor -> numericos .)
    ESIGUAL         reduce using rule 96 (factor -> numericos .)
    MENORIGUAL      reduce using rule 96 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 96 (factor -> numericos .)
    $end            reduce using rule 96 (factor -> numericos .)
    LLAVELEFT       reduce using rule 96 (factor -> numericos .)
    RETURN          reduce using rule 96 (factor -> numericos .)
    LLAVERIGHT      reduce using rule 96 (factor -> numericos .)
    PUNTOCOMA       reduce using rule 96 (factor -> numericos .)
    DEFAULT         reduce using rule 96 (factor -> numericos .)
    BREAK           reduce using rule 96 (factor -> numericos .)
    CONTINUE        reduce using rule 96 (factor -> numericos .)


state 61

    (67) sentenciaFor -> FOR inicio . PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 109


state 62

    (68) inicio -> VARIABLE . DECLARADOR ENTERO

    DECLARADOR      shift and go to state 110


state 63

    (76) print -> IMPRIMIR PARLEFT . contPrint PARRIGHT
    (77) contPrint -> . contenido masCont
    (78) contPrint -> . contenido
    (81) contenido -> . expresion
    (82) contenido -> . CADENA
    (83) contenido -> . VARIABLE
    (84) contenido -> .
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 114
    VARIABLE        shift and go to state 115
    COMA            reduce using rule 84 (contenido -> .)
    PARRIGHT        reduce using rule 84 (contenido -> .)
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    contPrint                      shift and go to state 111
    contenido                      shift and go to state 112
    expresion                      shift and go to state 113
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 64

    (100) numericos -> PARLEFT expresion . PARRIGHT
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    PARRIGHT        shift and go to state 116
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 65

    (95) term -> numericos .

    PARRIGHT        reduce using rule 95 (term -> numericos .)
    SUMA            reduce using rule 95 (term -> numericos .)
    RESTA           reduce using rule 95 (term -> numericos .)
    PRODUCTO        reduce using rule 95 (term -> numericos .)
    DIVISION        reduce using rule 95 (term -> numericos .)
    MODULO          reduce using rule 95 (term -> numericos .)
    $end            reduce using rule 95 (term -> numericos .)
    RETURN          reduce using rule 95 (term -> numericos .)
    LLAVERIGHT      reduce using rule 95 (term -> numericos .)
    DEFAULT         reduce using rule 95 (term -> numericos .)
    BREAK           reduce using rule 95 (term -> numericos .)
    CONTINUE        reduce using rule 95 (term -> numericos .)
    COMA            reduce using rule 95 (term -> numericos .)
    DOSPUNTOS       reduce using rule 95 (term -> numericos .)


state 66

    (46) mapa -> MAP CORCHLEFT . tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT . tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (52) tipo -> . BOOL
    (53) tipo -> . INT
    (54) tipo -> . FLOAT
    (55) tipo -> . STRING

    BOOL            shift and go to state 118
    INT             shift and go to state 119
    FLOAT           shift and go to state 120
    STRING          shift and go to state 121

    tipo                           shift and go to state 117

state 67

    (85) lectura -> SCAN PARLEFT . contScan PARRIGHT
    (86) contScan -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 123

    contScan                       shift and go to state 122

state 68

    (118) switch -> SWITCH VARIABLE . LLAVELEFT bloque_switch LLAVERIGHT

    LLAVELEFT       shift and go to state 124


state 69

    (107) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    PARLEFT         shift and go to state 125


state 70

    (88) expresion -> expresion SUMA term .

    SUMA            reduce using rule 88 (expresion -> expresion SUMA term .)
    RESTA           reduce using rule 88 (expresion -> expresion SUMA term .)
    PRODUCTO        reduce using rule 88 (expresion -> expresion SUMA term .)
    DIVISION        reduce using rule 88 (expresion -> expresion SUMA term .)
    MODULO          reduce using rule 88 (expresion -> expresion SUMA term .)
    $end            reduce using rule 88 (expresion -> expresion SUMA term .)
    PARRIGHT        reduce using rule 88 (expresion -> expresion SUMA term .)
    RETURN          reduce using rule 88 (expresion -> expresion SUMA term .)
    LLAVERIGHT      reduce using rule 88 (expresion -> expresion SUMA term .)
    DEFAULT         reduce using rule 88 (expresion -> expresion SUMA term .)
    BREAK           reduce using rule 88 (expresion -> expresion SUMA term .)
    CONTINUE        reduce using rule 88 (expresion -> expresion SUMA term .)
    COMA            reduce using rule 88 (expresion -> expresion SUMA term .)
    DOSPUNTOS       reduce using rule 88 (expresion -> expresion SUMA term .)


state 71

    (89) expresion -> expresion RESTA term .

    SUMA            reduce using rule 89 (expresion -> expresion RESTA term .)
    RESTA           reduce using rule 89 (expresion -> expresion RESTA term .)
    PRODUCTO        reduce using rule 89 (expresion -> expresion RESTA term .)
    DIVISION        reduce using rule 89 (expresion -> expresion RESTA term .)
    MODULO          reduce using rule 89 (expresion -> expresion RESTA term .)
    $end            reduce using rule 89 (expresion -> expresion RESTA term .)
    PARRIGHT        reduce using rule 89 (expresion -> expresion RESTA term .)
    RETURN          reduce using rule 89 (expresion -> expresion RESTA term .)
    LLAVERIGHT      reduce using rule 89 (expresion -> expresion RESTA term .)
    DEFAULT         reduce using rule 89 (expresion -> expresion RESTA term .)
    BREAK           reduce using rule 89 (expresion -> expresion RESTA term .)
    CONTINUE        reduce using rule 89 (expresion -> expresion RESTA term .)
    COMA            reduce using rule 89 (expresion -> expresion RESTA term .)
    DOSPUNTOS       reduce using rule 89 (expresion -> expresion RESTA term .)


state 72

    (90) expresion -> expresion PRODUCTO term .

    SUMA            reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    RESTA           reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    PRODUCTO        reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    DIVISION        reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    MODULO          reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    $end            reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    PARRIGHT        reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    RETURN          reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    LLAVERIGHT      reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    DEFAULT         reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    BREAK           reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    CONTINUE        reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    COMA            reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    DOSPUNTOS       reduce using rule 90 (expresion -> expresion PRODUCTO term .)


state 73

    (91) expresion -> expresion DIVISION term .

    SUMA            reduce using rule 91 (expresion -> expresion DIVISION term .)
    RESTA           reduce using rule 91 (expresion -> expresion DIVISION term .)
    PRODUCTO        reduce using rule 91 (expresion -> expresion DIVISION term .)
    DIVISION        reduce using rule 91 (expresion -> expresion DIVISION term .)
    MODULO          reduce using rule 91 (expresion -> expresion DIVISION term .)
    $end            reduce using rule 91 (expresion -> expresion DIVISION term .)
    PARRIGHT        reduce using rule 91 (expresion -> expresion DIVISION term .)
    RETURN          reduce using rule 91 (expresion -> expresion DIVISION term .)
    LLAVERIGHT      reduce using rule 91 (expresion -> expresion DIVISION term .)
    DEFAULT         reduce using rule 91 (expresion -> expresion DIVISION term .)
    BREAK           reduce using rule 91 (expresion -> expresion DIVISION term .)
    CONTINUE        reduce using rule 91 (expresion -> expresion DIVISION term .)
    COMA            reduce using rule 91 (expresion -> expresion DIVISION term .)
    DOSPUNTOS       reduce using rule 91 (expresion -> expresion DIVISION term .)


state 74

    (92) expresion -> expresion MODULO term .

    SUMA            reduce using rule 92 (expresion -> expresion MODULO term .)
    RESTA           reduce using rule 92 (expresion -> expresion MODULO term .)
    PRODUCTO        reduce using rule 92 (expresion -> expresion MODULO term .)
    DIVISION        reduce using rule 92 (expresion -> expresion MODULO term .)
    MODULO          reduce using rule 92 (expresion -> expresion MODULO term .)
    $end            reduce using rule 92 (expresion -> expresion MODULO term .)
    PARRIGHT        reduce using rule 92 (expresion -> expresion MODULO term .)
    RETURN          reduce using rule 92 (expresion -> expresion MODULO term .)
    LLAVERIGHT      reduce using rule 92 (expresion -> expresion MODULO term .)
    DEFAULT         reduce using rule 92 (expresion -> expresion MODULO term .)
    BREAK           reduce using rule 92 (expresion -> expresion MODULO term .)
    CONTINUE        reduce using rule 92 (expresion -> expresion MODULO term .)
    COMA            reduce using rule 92 (expresion -> expresion MODULO term .)
    DOSPUNTOS       reduce using rule 92 (expresion -> expresion MODULO term .)


state 75

    (14) asignacion -> VAR VARIABLE BOOL . IGUAL booleano

    IGUAL           shift and go to state 126


state 76

    (15) asignacion -> VAR VARIABLE INT . IGUAL expresion

    IGUAL           shift and go to state 127


state 77

    (16) asignacion -> VAR VARIABLE FLOAT . IGUAL expresion

    IGUAL           shift and go to state 128


state 78

    (17) asignacion -> VAR VARIABLE STRING . IGUAL CADENA

    IGUAL           shift and go to state 129


state 79

    (18) asignacion -> VAR VARIABLE puntero . IGUAL refer
    (19) asignacion -> VAR VARIABLE puntero .

    IGUAL           shift and go to state 130
    $end            reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    RETURN          reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    LLAVERIGHT      reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    DEFAULT         reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    BREAK           reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    CONTINUE        reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)


state 80

    (75) arrayAsig -> VAR VARIABLE CORCHLEFT . ENTERO CORCHRIGHT typeData

    ENTERO          shift and go to state 131


state 81

    (61) puntero -> PRODUCTO . BOOL
    (62) puntero -> PRODUCTO . INT
    (63) puntero -> PRODUCTO . FLOAT
    (64) puntero -> PRODUCTO . STRING

    BOOL            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    STRING          shift and go to state 50


state 82

    (33) valor -> VARIABLE .

    $end            reduce using rule 33 (valor -> VARIABLE .)
    RETURN          reduce using rule 33 (valor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 33 (valor -> VARIABLE .)
    DEFAULT         reduce using rule 33 (valor -> VARIABLE .)
    BREAK           reduce using rule 33 (valor -> VARIABLE .)
    CONTINUE        reduce using rule 33 (valor -> VARIABLE .)


state 83

    (20) asignacion -> VARIABLE DECLARADOR valor .

    $end            reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    RETURN          reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    LLAVERIGHT      reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    DEFAULT         reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    BREAK           reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    CONTINUE        reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)


state 84

    (74) array -> VARIABLE DECLARADOR CORCHLEFT . ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    ENTERO          shift and go to state 132


state 85

    (30) valor -> booleano .

    $end            reduce using rule 30 (valor -> booleano .)
    RETURN          reduce using rule 30 (valor -> booleano .)
    LLAVERIGHT      reduce using rule 30 (valor -> booleano .)
    DEFAULT         reduce using rule 30 (valor -> booleano .)
    BREAK           reduce using rule 30 (valor -> booleano .)
    CONTINUE        reduce using rule 30 (valor -> booleano .)


state 86

    (31) valor -> expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 31 (valor -> expresion .)
    RETURN          reduce using rule 31 (valor -> expresion .)
    LLAVERIGHT      reduce using rule 31 (valor -> expresion .)
    DEFAULT         reduce using rule 31 (valor -> expresion .)
    BREAK           reduce using rule 31 (valor -> expresion .)
    CONTINUE        reduce using rule 31 (valor -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 87

    (32) valor -> CADENA .

    $end            reduce using rule 32 (valor -> CADENA .)
    RETURN          reduce using rule 32 (valor -> CADENA .)
    LLAVERIGHT      reduce using rule 32 (valor -> CADENA .)
    DEFAULT         reduce using rule 32 (valor -> CADENA .)
    BREAK           reduce using rule 32 (valor -> CADENA .)
    CONTINUE        reduce using rule 32 (valor -> CADENA .)


state 88

    (34) valor -> mapa .

    $end            reduce using rule 34 (valor -> mapa .)
    RETURN          reduce using rule 34 (valor -> mapa .)
    LLAVERIGHT      reduce using rule 34 (valor -> mapa .)
    DEFAULT         reduce using rule 34 (valor -> mapa .)
    BREAK           reduce using rule 34 (valor -> mapa .)
    CONTINUE        reduce using rule 34 (valor -> mapa .)


state 89

    (35) valor -> refer .

    $end            reduce using rule 35 (valor -> refer .)
    RETURN          reduce using rule 35 (valor -> refer .)
    LLAVERIGHT      reduce using rule 35 (valor -> refer .)
    DEFAULT         reduce using rule 35 (valor -> refer .)
    BREAK           reduce using rule 35 (valor -> refer .)
    CONTINUE        reduce using rule 35 (valor -> refer .)


state 90

    (27) booleano -> condicion .

    $end            reduce using rule 27 (booleano -> condicion .)
    RETURN          reduce using rule 27 (booleano -> condicion .)
    LLAVERIGHT      reduce using rule 27 (booleano -> condicion .)
    DEFAULT         reduce using rule 27 (booleano -> condicion .)
    BREAK           reduce using rule 27 (booleano -> condicion .)
    CONTINUE        reduce using rule 27 (booleano -> condicion .)


state 91

    (28) booleano -> TRUE .

    $end            reduce using rule 28 (booleano -> TRUE .)
    RETURN          reduce using rule 28 (booleano -> TRUE .)
    LLAVERIGHT      reduce using rule 28 (booleano -> TRUE .)
    DEFAULT         reduce using rule 28 (booleano -> TRUE .)
    BREAK           reduce using rule 28 (booleano -> TRUE .)
    CONTINUE        reduce using rule 28 (booleano -> TRUE .)


state 92

    (29) booleano -> FALSE .

    $end            reduce using rule 29 (booleano -> FALSE .)
    RETURN          reduce using rule 29 (booleano -> FALSE .)
    LLAVERIGHT      reduce using rule 29 (booleano -> FALSE .)
    DEFAULT         reduce using rule 29 (booleano -> FALSE .)
    BREAK           reduce using rule 29 (booleano -> FALSE .)
    CONTINUE        reduce using rule 29 (booleano -> FALSE .)


state 93

    (65) refer -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 133


state 94

    (138) condicion -> AND .

    $end            reduce using rule 138 (condicion -> AND .)
    RETURN          reduce using rule 138 (condicion -> AND .)
    LLAVERIGHT      reduce using rule 138 (condicion -> AND .)
    DEFAULT         reduce using rule 138 (condicion -> AND .)
    BREAK           reduce using rule 138 (condicion -> AND .)
    CONTINUE        reduce using rule 138 (condicion -> AND .)


state 95

    (139) condicion -> OR .

    $end            reduce using rule 139 (condicion -> OR .)
    RETURN          reduce using rule 139 (condicion -> OR .)
    LLAVERIGHT      reduce using rule 139 (condicion -> OR .)
    DEFAULT         reduce using rule 139 (condicion -> OR .)
    BREAK           reduce using rule 139 (condicion -> OR .)
    CONTINUE        reduce using rule 139 (condicion -> OR .)


state 96

    (21) asignacion -> VARIABLE IGUAL valor .

    $end            reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    LLAVERIGHT      reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    DEFAULT         reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    BREAK           reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    CONTINUE        reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)


state 97

    (24) asignacion -> VARIABLE MASIGUAL VARIABLE .

    $end            reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)
    RETURN          reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)
    LLAVERIGHT      reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)
    DEFAULT         reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)
    BREAK           reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)
    CONTINUE        reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)


state 98

    (22) asignacion -> VARIABLE MASIGUAL expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    RETURN          reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    LLAVERIGHT      reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    DEFAULT         reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    BREAK           reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    CONTINUE        reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 99

    (23) asignacion -> VARIABLE MASIGUAL CADENA .

    $end            reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)
    RETURN          reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)
    LLAVERIGHT      reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)
    DEFAULT         reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)
    BREAK           reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)
    CONTINUE        reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)


state 100

    (25) asignacion -> VARIABLE MENOSIGUAL expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    RETURN          reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    LLAVERIGHT      reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    DEFAULT         reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    BREAK           reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    CONTINUE        reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 101

    (26) asignacion -> derefer IGUAL valor .

    $end            reduce using rule 26 (asignacion -> derefer IGUAL valor .)
    RETURN          reduce using rule 26 (asignacion -> derefer IGUAL valor .)
    LLAVERIGHT      reduce using rule 26 (asignacion -> derefer IGUAL valor .)
    DEFAULT         reduce using rule 26 (asignacion -> derefer IGUAL valor .)
    BREAK           reduce using rule 26 (asignacion -> derefer IGUAL valor .)
    CONTINUE        reduce using rule 26 (asignacion -> derefer IGUAL valor .)


state 102

    (129) condiciones -> factor MAYORQUE factor .

    $end            reduce using rule 129 (condiciones -> factor MAYORQUE factor .)
    LLAVELEFT       reduce using rule 129 (condiciones -> factor MAYORQUE factor .)
    RETURN          reduce using rule 129 (condiciones -> factor MAYORQUE factor .)
    LLAVERIGHT      reduce using rule 129 (condiciones -> factor MAYORQUE factor .)
    PUNTOCOMA       reduce using rule 129 (condiciones -> factor MAYORQUE factor .)
    DEFAULT         reduce using rule 129 (condiciones -> factor MAYORQUE factor .)
    BREAK           reduce using rule 129 (condiciones -> factor MAYORQUE factor .)
    CONTINUE        reduce using rule 129 (condiciones -> factor MAYORQUE factor .)


state 103

    (130) condiciones -> factor MENORQUE factor .

    $end            reduce using rule 130 (condiciones -> factor MENORQUE factor .)
    LLAVELEFT       reduce using rule 130 (condiciones -> factor MENORQUE factor .)
    RETURN          reduce using rule 130 (condiciones -> factor MENORQUE factor .)
    LLAVERIGHT      reduce using rule 130 (condiciones -> factor MENORQUE factor .)
    PUNTOCOMA       reduce using rule 130 (condiciones -> factor MENORQUE factor .)
    DEFAULT         reduce using rule 130 (condiciones -> factor MENORQUE factor .)
    BREAK           reduce using rule 130 (condiciones -> factor MENORQUE factor .)
    CONTINUE        reduce using rule 130 (condiciones -> factor MENORQUE factor .)


state 104

    (131) condiciones -> factor DIFERENTE factor .

    $end            reduce using rule 131 (condiciones -> factor DIFERENTE factor .)
    LLAVELEFT       reduce using rule 131 (condiciones -> factor DIFERENTE factor .)
    RETURN          reduce using rule 131 (condiciones -> factor DIFERENTE factor .)
    LLAVERIGHT      reduce using rule 131 (condiciones -> factor DIFERENTE factor .)
    PUNTOCOMA       reduce using rule 131 (condiciones -> factor DIFERENTE factor .)
    DEFAULT         reduce using rule 131 (condiciones -> factor DIFERENTE factor .)
    BREAK           reduce using rule 131 (condiciones -> factor DIFERENTE factor .)
    CONTINUE        reduce using rule 131 (condiciones -> factor DIFERENTE factor .)


state 105

    (132) condiciones -> factor ESIGUAL factor .

    $end            reduce using rule 132 (condiciones -> factor ESIGUAL factor .)
    LLAVELEFT       reduce using rule 132 (condiciones -> factor ESIGUAL factor .)
    RETURN          reduce using rule 132 (condiciones -> factor ESIGUAL factor .)
    LLAVERIGHT      reduce using rule 132 (condiciones -> factor ESIGUAL factor .)
    PUNTOCOMA       reduce using rule 132 (condiciones -> factor ESIGUAL factor .)
    DEFAULT         reduce using rule 132 (condiciones -> factor ESIGUAL factor .)
    BREAK           reduce using rule 132 (condiciones -> factor ESIGUAL factor .)
    CONTINUE        reduce using rule 132 (condiciones -> factor ESIGUAL factor .)


state 106

    (133) condiciones -> factor MENORIGUAL factor .

    $end            reduce using rule 133 (condiciones -> factor MENORIGUAL factor .)
    LLAVELEFT       reduce using rule 133 (condiciones -> factor MENORIGUAL factor .)
    RETURN          reduce using rule 133 (condiciones -> factor MENORIGUAL factor .)
    LLAVERIGHT      reduce using rule 133 (condiciones -> factor MENORIGUAL factor .)
    PUNTOCOMA       reduce using rule 133 (condiciones -> factor MENORIGUAL factor .)
    DEFAULT         reduce using rule 133 (condiciones -> factor MENORIGUAL factor .)
    BREAK           reduce using rule 133 (condiciones -> factor MENORIGUAL factor .)
    CONTINUE        reduce using rule 133 (condiciones -> factor MENORIGUAL factor .)


state 107

    (134) condiciones -> factor MAYORIGUAL factor .

    $end            reduce using rule 134 (condiciones -> factor MAYORIGUAL factor .)
    LLAVELEFT       reduce using rule 134 (condiciones -> factor MAYORIGUAL factor .)
    RETURN          reduce using rule 134 (condiciones -> factor MAYORIGUAL factor .)
    LLAVERIGHT      reduce using rule 134 (condiciones -> factor MAYORIGUAL factor .)
    PUNTOCOMA       reduce using rule 134 (condiciones -> factor MAYORIGUAL factor .)
    DEFAULT         reduce using rule 134 (condiciones -> factor MAYORIGUAL factor .)
    BREAK           reduce using rule 134 (condiciones -> factor MAYORIGUAL factor .)
    CONTINUE        reduce using rule 134 (condiciones -> factor MAYORIGUAL factor .)


state 108

    (36) sentenciaIf -> IF condiciones LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF condiciones LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF condiciones LLAVELEFT . instrucciones LLAVERIGHT
    (39) sentenciaIf -> IF condiciones LLAVELEFT . instrucciones LLAVERIGHT else
    (40) sentenciaIf -> IF condiciones LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF condiciones LLAVELEFT . RETURN VARIABLE LLAVERIGHT else
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (129) condiciones -> . factor MAYORQUE factor
    (130) condiciones -> . factor MENORQUE factor
    (131) condiciones -> . factor DIFERENTE factor
    (132) condiciones -> . factor ESIGUAL factor
    (133) condiciones -> . factor MENORIGUAL factor
    (134) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 135
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    condiciones                    shift and go to state 4
    instrucciones                  shift and go to state 134
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 109

    (67) sentenciaFor -> FOR inicio PUNTOCOMA . condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (129) condiciones -> . factor MAYORQUE factor
    (130) condiciones -> . factor MENORQUE factor
    (131) condiciones -> . factor DIFERENTE factor
    (132) condiciones -> . factor ESIGUAL factor
    (133) condiciones -> . factor MENORIGUAL factor
    (134) condiciones -> . factor MAYORIGUAL factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    condiciones                    shift and go to state 136
    factor                         shift and go to state 21
    numericos                      shift and go to state 60

state 110

    (68) inicio -> VARIABLE DECLARADOR . ENTERO

    ENTERO          shift and go to state 137


state 111

    (76) print -> IMPRIMIR PARLEFT contPrint . PARRIGHT

    PARRIGHT        shift and go to state 138


state 112

    (77) contPrint -> contenido . masCont
    (78) contPrint -> contenido .
    (79) masCont -> . masCont COMA contenido
    (80) masCont -> . COMA contenido

    PARRIGHT        reduce using rule 78 (contPrint -> contenido .)
    COMA            shift and go to state 140

    masCont                        shift and go to state 139

state 113

    (81) contenido -> expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    COMA            reduce using rule 81 (contenido -> expresion .)
    PARRIGHT        reduce using rule 81 (contenido -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 114

    (82) contenido -> CADENA .

    COMA            reduce using rule 82 (contenido -> CADENA .)
    PARRIGHT        reduce using rule 82 (contenido -> CADENA .)


state 115

    (83) contenido -> VARIABLE .

    COMA            reduce using rule 83 (contenido -> VARIABLE .)
    PARRIGHT        reduce using rule 83 (contenido -> VARIABLE .)


state 116

    (100) numericos -> PARLEFT expresion PARRIGHT .

    SUMA            reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    RESTA           reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    PRODUCTO        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    DIVISION        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    MODULO          reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    $end            reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORQUE        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORQUE        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    DIFERENTE       reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    ESIGUAL         reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORIGUAL      reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORIGUAL      reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    PARRIGHT        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    RETURN          reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVERIGHT      reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    DEFAULT         reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    BREAK           reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    CONTINUE        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    COMA            reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    DOSPUNTOS       reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVELEFT       reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    PUNTOCOMA       reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)


state 117

    (46) mapa -> MAP CORCHLEFT tipo . CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT tipo . CORCHRIGHT tipo LLAVELEFT LLAVERIGHT

    CORCHRIGHT      shift and go to state 141


state 118

    (52) tipo -> BOOL .

    CORCHRIGHT      reduce using rule 52 (tipo -> BOOL .)
    LLAVELEFT       reduce using rule 52 (tipo -> BOOL .)


state 119

    (53) tipo -> INT .

    CORCHRIGHT      reduce using rule 53 (tipo -> INT .)
    LLAVELEFT       reduce using rule 53 (tipo -> INT .)


state 120

    (54) tipo -> FLOAT .

    CORCHRIGHT      reduce using rule 54 (tipo -> FLOAT .)
    LLAVELEFT       reduce using rule 54 (tipo -> FLOAT .)


state 121

    (55) tipo -> STRING .

    CORCHRIGHT      reduce using rule 55 (tipo -> STRING .)
    LLAVELEFT       reduce using rule 55 (tipo -> STRING .)


state 122

    (85) lectura -> SCAN PARLEFT contScan . PARRIGHT

    PARRIGHT        shift and go to state 142


state 123

    (86) contScan -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 143


state 124

    (118) switch -> SWITCH VARIABLE LLAVELEFT . bloque_switch LLAVERIGHT
    (119) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK
    (120) bloque_switch -> . CASE caso DOSPUNTOS instrucciones CONTINUE
    (121) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK bloque_switch
    (122) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK switch_default
    (123) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK bloque_switch switch_default
    (124) bloque_switch -> . switch_default
    (128) switch_default -> . DEFAULT DOSPUNTOS instrucciones

    CASE            shift and go to state 145
    DEFAULT         shift and go to state 147

    bloque_switch                  shift and go to state 144
    switch_default                 shift and go to state 146

state 125

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (114) parametros -> . VARIABLE
    (115) parametros -> . VARIABLE COMA parametros
    (116) parametros -> . typeData VARIABLE
    (117) parametros -> . typeData VARIABLE COMA parametros
    (70) typeData -> . BOOL
    (71) typeData -> . INT
    (72) typeData -> . FLOAT
    (73) typeData -> . STRING

    PARRIGHT        shift and go to state 149
    VARIABLE        shift and go to state 148
    BOOL            shift and go to state 152
    INT             shift and go to state 153
    FLOAT           shift and go to state 154
    STRING          shift and go to state 155

    parametros                     shift and go to state 150
    typeData                       shift and go to state 151

state 126

    (14) asignacion -> VAR VARIABLE BOOL IGUAL . booleano
    (27) booleano -> . condicion
    (28) booleano -> . TRUE
    (29) booleano -> . FALSE
    (138) condicion -> . AND
    (139) condicion -> . OR

    TRUE            shift and go to state 91
    FALSE           shift and go to state 92
    AND             shift and go to state 94
    OR              shift and go to state 95

    booleano                       shift and go to state 156
    condicion                      shift and go to state 90

state 127

    (15) asignacion -> VAR VARIABLE INT IGUAL . expresion
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    expresion                      shift and go to state 157
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 128

    (16) asignacion -> VAR VARIABLE FLOAT IGUAL . expresion
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    expresion                      shift and go to state 158
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 129

    (17) asignacion -> VAR VARIABLE STRING IGUAL . CADENA

    CADENA          shift and go to state 159


state 130

    (18) asignacion -> VAR VARIABLE puntero IGUAL . refer
    (65) refer -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 93

    refer                          shift and go to state 160

state 131

    (75) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO . CORCHRIGHT typeData

    CORCHRIGHT      shift and go to state 161


state 132

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO . CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    CORCHRIGHT      shift and go to state 162


state 133

    (65) refer -> AMPERSAND VARIABLE .

    $end            reduce using rule 65 (refer -> AMPERSAND VARIABLE .)
    RETURN          reduce using rule 65 (refer -> AMPERSAND VARIABLE .)
    LLAVERIGHT      reduce using rule 65 (refer -> AMPERSAND VARIABLE .)
    DEFAULT         reduce using rule 65 (refer -> AMPERSAND VARIABLE .)
    BREAK           reduce using rule 65 (refer -> AMPERSAND VARIABLE .)
    CONTINUE        reduce using rule 65 (refer -> AMPERSAND VARIABLE .)


state 134

    (36) sentenciaIf -> IF condiciones LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF condiciones LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF condiciones LLAVELEFT instrucciones . LLAVERIGHT
    (39) sentenciaIf -> IF condiciones LLAVELEFT instrucciones . LLAVERIGHT else

    RETURN          shift and go to state 163
    LLAVERIGHT      shift and go to state 164


state 135

    (40) sentenciaIf -> IF condiciones LLAVELEFT RETURN . VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF condiciones LLAVELEFT RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 165


state 136

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones . PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 166


state 137

    (68) inicio -> VARIABLE DECLARADOR ENTERO .

    PUNTOCOMA       reduce using rule 68 (inicio -> VARIABLE DECLARADOR ENTERO .)


state 138

    (76) print -> IMPRIMIR PARLEFT contPrint PARRIGHT .

    $end            reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    RETURN          reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    LLAVERIGHT      reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    DEFAULT         reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    BREAK           reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    CONTINUE        reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)


state 139

    (77) contPrint -> contenido masCont .
    (79) masCont -> masCont . COMA contenido

    PARRIGHT        reduce using rule 77 (contPrint -> contenido masCont .)
    COMA            shift and go to state 167


state 140

    (80) masCont -> COMA . contenido
    (81) contenido -> . expresion
    (82) contenido -> . CADENA
    (83) contenido -> . VARIABLE
    (84) contenido -> .
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 114
    VARIABLE        shift and go to state 115
    COMA            reduce using rule 84 (contenido -> .)
    PARRIGHT        reduce using rule 84 (contenido -> .)
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    contenido                      shift and go to state 168
    expresion                      shift and go to state 113
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 141

    (46) mapa -> MAP CORCHLEFT tipo CORCHRIGHT . tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT tipo CORCHRIGHT . tipo LLAVELEFT LLAVERIGHT
    (52) tipo -> . BOOL
    (53) tipo -> . INT
    (54) tipo -> . FLOAT
    (55) tipo -> . STRING

    BOOL            shift and go to state 118
    INT             shift and go to state 119
    FLOAT           shift and go to state 120
    STRING          shift and go to state 121

    tipo                           shift and go to state 169

state 142

    (85) lectura -> SCAN PARLEFT contScan PARRIGHT .

    $end            reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    RETURN          reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    LLAVERIGHT      reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    DEFAULT         reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    BREAK           reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    CONTINUE        reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)


state 143

    (86) contScan -> AMPERSAND VARIABLE .

    PARRIGHT        reduce using rule 86 (contScan -> AMPERSAND VARIABLE .)


state 144

    (118) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch . LLAVERIGHT

    LLAVERIGHT      shift and go to state 170


state 145

    (119) bloque_switch -> CASE . caso DOSPUNTOS instrucciones BREAK
    (120) bloque_switch -> CASE . caso DOSPUNTOS instrucciones CONTINUE
    (121) bloque_switch -> CASE . caso DOSPUNTOS instrucciones BREAK bloque_switch
    (122) bloque_switch -> CASE . caso DOSPUNTOS instrucciones BREAK switch_default
    (123) bloque_switch -> CASE . caso DOSPUNTOS instrucciones BREAK bloque_switch switch_default
    (125) caso -> . VARIABLE
    (126) caso -> . CADENA
    (127) caso -> . ENTERO

    VARIABLE        shift and go to state 172
    CADENA          shift and go to state 173
    ENTERO          shift and go to state 174

    caso                           shift and go to state 171

state 146

    (124) bloque_switch -> switch_default .

    LLAVERIGHT      reduce using rule 124 (bloque_switch -> switch_default .)


state 147

    (128) switch_default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 175


state 148

    (114) parametros -> VARIABLE .
    (115) parametros -> VARIABLE . COMA parametros

    PARRIGHT        reduce using rule 114 (parametros -> VARIABLE .)
    COMA            shift and go to state 176


state 149

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    LLAVELEFT       shift and go to state 177


state 150

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT RETURN LLAVERIGHT

    PARRIGHT        shift and go to state 178


state 151

    (116) parametros -> typeData . VARIABLE
    (117) parametros -> typeData . VARIABLE COMA parametros

    VARIABLE        shift and go to state 179


state 152

    (70) typeData -> BOOL .

    VARIABLE        reduce using rule 70 (typeData -> BOOL .)
    $end            reduce using rule 70 (typeData -> BOOL .)
    RETURN          reduce using rule 70 (typeData -> BOOL .)
    LLAVERIGHT      reduce using rule 70 (typeData -> BOOL .)
    DEFAULT         reduce using rule 70 (typeData -> BOOL .)
    BREAK           reduce using rule 70 (typeData -> BOOL .)
    CONTINUE        reduce using rule 70 (typeData -> BOOL .)
    LLAVELEFT       reduce using rule 70 (typeData -> BOOL .)


state 153

    (71) typeData -> INT .

    VARIABLE        reduce using rule 71 (typeData -> INT .)
    $end            reduce using rule 71 (typeData -> INT .)
    RETURN          reduce using rule 71 (typeData -> INT .)
    LLAVERIGHT      reduce using rule 71 (typeData -> INT .)
    DEFAULT         reduce using rule 71 (typeData -> INT .)
    BREAK           reduce using rule 71 (typeData -> INT .)
    CONTINUE        reduce using rule 71 (typeData -> INT .)
    LLAVELEFT       reduce using rule 71 (typeData -> INT .)


state 154

    (72) typeData -> FLOAT .

    VARIABLE        reduce using rule 72 (typeData -> FLOAT .)
    $end            reduce using rule 72 (typeData -> FLOAT .)
    RETURN          reduce using rule 72 (typeData -> FLOAT .)
    LLAVERIGHT      reduce using rule 72 (typeData -> FLOAT .)
    DEFAULT         reduce using rule 72 (typeData -> FLOAT .)
    BREAK           reduce using rule 72 (typeData -> FLOAT .)
    CONTINUE        reduce using rule 72 (typeData -> FLOAT .)
    LLAVELEFT       reduce using rule 72 (typeData -> FLOAT .)


state 155

    (73) typeData -> STRING .

    VARIABLE        reduce using rule 73 (typeData -> STRING .)
    $end            reduce using rule 73 (typeData -> STRING .)
    RETURN          reduce using rule 73 (typeData -> STRING .)
    LLAVERIGHT      reduce using rule 73 (typeData -> STRING .)
    DEFAULT         reduce using rule 73 (typeData -> STRING .)
    BREAK           reduce using rule 73 (typeData -> STRING .)
    CONTINUE        reduce using rule 73 (typeData -> STRING .)
    LLAVELEFT       reduce using rule 73 (typeData -> STRING .)


state 156

    (14) asignacion -> VAR VARIABLE BOOL IGUAL booleano .

    $end            reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    RETURN          reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    LLAVERIGHT      reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    DEFAULT         reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    BREAK           reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    CONTINUE        reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)


state 157

    (15) asignacion -> VAR VARIABLE INT IGUAL expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    RETURN          reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    DEFAULT         reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    BREAK           reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    CONTINUE        reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 158

    (16) asignacion -> VAR VARIABLE FLOAT IGUAL expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    RETURN          reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    DEFAULT         reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    BREAK           reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    CONTINUE        reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 159

    (17) asignacion -> VAR VARIABLE STRING IGUAL CADENA .

    $end            reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    RETURN          reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    LLAVERIGHT      reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    DEFAULT         reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    BREAK           reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    CONTINUE        reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)


state 160

    (18) asignacion -> VAR VARIABLE puntero IGUAL refer .

    $end            reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    RETURN          reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    LLAVERIGHT      reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    DEFAULT         reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    BREAK           reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    CONTINUE        reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)


state 161

    (75) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT . typeData
    (70) typeData -> . BOOL
    (71) typeData -> . INT
    (72) typeData -> . FLOAT
    (73) typeData -> . STRING

    BOOL            shift and go to state 152
    INT             shift and go to state 153
    FLOAT           shift and go to state 154
    STRING          shift and go to state 155

    typeData                       shift and go to state 180

state 162

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT . typeData LLAVELEFT contArray LLAVERIGHT
    (70) typeData -> . BOOL
    (71) typeData -> . INT
    (72) typeData -> . FLOAT
    (73) typeData -> . STRING

    BOOL            shift and go to state 152
    INT             shift and go to state 153
    FLOAT           shift and go to state 154
    STRING          shift and go to state 155

    typeData                       shift and go to state 181

state 163

    (36) sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 182


state 164

    (38) sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT .
    (39) sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT . else
    (42) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE sentenciaIf

    $end            reduce using rule 38 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 38 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 38 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT .)
    DEFAULT         reduce using rule 38 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 38 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 38 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT .)
    ELSE            shift and go to state 184

    else                           shift and go to state 183

state 165

    (40) sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE . LLAVERIGHT
    (41) sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 185


state 166

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA . incrementa LLAVELEFT instrucciones LLAVERIGHT
    (69) incrementa -> . VARIABLE INCREMENTO

    VARIABLE        shift and go to state 187

    incrementa                     shift and go to state 186

state 167

    (79) masCont -> masCont COMA . contenido
    (81) contenido -> . expresion
    (82) contenido -> . CADENA
    (83) contenido -> . VARIABLE
    (84) contenido -> .
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 114
    VARIABLE        shift and go to state 115
    COMA            reduce using rule 84 (contenido -> .)
    PARRIGHT        reduce using rule 84 (contenido -> .)
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    contenido                      shift and go to state 188
    expresion                      shift and go to state 113
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 168

    (80) masCont -> COMA contenido .

    COMA            reduce using rule 80 (masCont -> COMA contenido .)
    PARRIGHT        reduce using rule 80 (masCont -> COMA contenido .)


state 169

    (46) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo . LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo . LLAVELEFT LLAVERIGHT

    LLAVELEFT       shift and go to state 189


state 170

    (118) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .

    $end            reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    RETURN          reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    DEFAULT         reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    BREAK           reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    CONTINUE        reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)


state 171

    (119) bloque_switch -> CASE caso . DOSPUNTOS instrucciones BREAK
    (120) bloque_switch -> CASE caso . DOSPUNTOS instrucciones CONTINUE
    (121) bloque_switch -> CASE caso . DOSPUNTOS instrucciones BREAK bloque_switch
    (122) bloque_switch -> CASE caso . DOSPUNTOS instrucciones BREAK switch_default
    (123) bloque_switch -> CASE caso . DOSPUNTOS instrucciones BREAK bloque_switch switch_default

    DOSPUNTOS       shift and go to state 190


state 172

    (125) caso -> VARIABLE .

    DOSPUNTOS       reduce using rule 125 (caso -> VARIABLE .)


state 173

    (126) caso -> CADENA .

    DOSPUNTOS       reduce using rule 126 (caso -> CADENA .)


state 174

    (127) caso -> ENTERO .

    DOSPUNTOS       reduce using rule 127 (caso -> ENTERO .)


state 175

    (128) switch_default -> DEFAULT DOSPUNTOS . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (129) condiciones -> . factor MAYORQUE factor
    (130) condiciones -> . factor MENORQUE factor
    (131) condiciones -> . factor DIFERENTE factor
    (132) condiciones -> . factor ESIGUAL factor
    (133) condiciones -> . factor MENORIGUAL factor
    (134) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 191
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 176

    (115) parametros -> VARIABLE COMA . parametros
    (114) parametros -> . VARIABLE
    (115) parametros -> . VARIABLE COMA parametros
    (116) parametros -> . typeData VARIABLE
    (117) parametros -> . typeData VARIABLE COMA parametros
    (70) typeData -> . BOOL
    (71) typeData -> . INT
    (72) typeData -> . FLOAT
    (73) typeData -> . STRING

    VARIABLE        shift and go to state 148
    BOOL            shift and go to state 152
    INT             shift and go to state 153
    FLOAT           shift and go to state 154
    STRING          shift and go to state 155

    parametros                     shift and go to state 192
    typeData                       shift and go to state 151

state 177

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (129) condiciones -> . factor MAYORQUE factor
    (130) condiciones -> . factor MENORQUE factor
    (131) condiciones -> . factor DIFERENTE factor
    (132) condiciones -> . factor ESIGUAL factor
    (133) condiciones -> . factor MENORIGUAL factor
    (134) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 194
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 193
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 178

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT RETURN LLAVERIGHT

    LLAVELEFT       shift and go to state 195


state 179

    (116) parametros -> typeData VARIABLE .
    (117) parametros -> typeData VARIABLE . COMA parametros

    PARRIGHT        reduce using rule 116 (parametros -> typeData VARIABLE .)
    COMA            shift and go to state 196


state 180

    (75) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .

    $end            reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    RETURN          reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    DEFAULT         reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    BREAK           reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)


state 181

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData . LLAVELEFT contArray LLAVERIGHT

    LLAVELEFT       shift and go to state 197


state 182

    (36) sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT
    (37) sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 198


state 183

    (39) sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT else .

    $end            reduce using rule 39 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT else .)
    RETURN          reduce using rule 39 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 39 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT else .)
    DEFAULT         reduce using rule 39 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT else .)
    BREAK           reduce using rule 39 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT else .)
    CONTINUE        reduce using rule 39 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones LLAVERIGHT else .)


state 184

    (42) else -> ELSE . LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> ELSE . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> ELSE . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> ELSE . sentenciaIf
    (36) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 199
    IF              shift and go to state 22

    sentenciaIf                    shift and go to state 200

state 185

    (40) sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .
    (41) sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT . else
    (42) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE sentenciaIf

    $end            reduce using rule 40 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 40 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 40 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    DEFAULT         reduce using rule 40 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 40 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 40 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 184

    else                           shift and go to state 201

state 186

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa . LLAVELEFT instrucciones LLAVERIGHT

    LLAVELEFT       shift and go to state 202


state 187

    (69) incrementa -> VARIABLE . INCREMENTO

    INCREMENTO      shift and go to state 203


state 188

    (79) masCont -> masCont COMA contenido .

    COMA            reduce using rule 79 (masCont -> masCont COMA contenido .)
    PARRIGHT        reduce using rule 79 (masCont -> masCont COMA contenido .)


state 189

    (46) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT . par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT . LLAVERIGHT
    (48) par -> . dato DOSPUNTOS dato mas
    (49) par -> . dato DOSPUNTOS dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    LLAVERIGHT      shift and go to state 205
    VARIABLE        shift and go to state 207
    CADENA          shift and go to state 209
    TRUE            shift and go to state 210
    FALSE           shift and go to state 211
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    par                            shift and go to state 204
    dato                           shift and go to state 206
    expresion                      shift and go to state 208
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 190

    (119) bloque_switch -> CASE caso DOSPUNTOS . instrucciones BREAK
    (120) bloque_switch -> CASE caso DOSPUNTOS . instrucciones CONTINUE
    (121) bloque_switch -> CASE caso DOSPUNTOS . instrucciones BREAK bloque_switch
    (122) bloque_switch -> CASE caso DOSPUNTOS . instrucciones BREAK switch_default
    (123) bloque_switch -> CASE caso DOSPUNTOS . instrucciones BREAK bloque_switch switch_default
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (129) condiciones -> . factor MAYORQUE factor
    (130) condiciones -> . factor MENORQUE factor
    (131) condiciones -> . factor DIFERENTE factor
    (132) condiciones -> . factor ESIGUAL factor
    (133) condiciones -> . factor MENORIGUAL factor
    (134) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 212
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 191

    (128) switch_default -> DEFAULT DOSPUNTOS instrucciones .

    LLAVERIGHT      reduce using rule 128 (switch_default -> DEFAULT DOSPUNTOS instrucciones .)
    DEFAULT         reduce using rule 128 (switch_default -> DEFAULT DOSPUNTOS instrucciones .)


state 192

    (115) parametros -> VARIABLE COMA parametros .

    PARRIGHT        reduce using rule 115 (parametros -> VARIABLE COMA parametros .)


state 193

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 213
    RETURN          shift and go to state 214


state 194

    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 215


state 195

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . RETURN LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (129) condiciones -> . factor MAYORQUE factor
    (130) condiciones -> . factor MENORQUE factor
    (131) condiciones -> . factor DIFERENTE factor
    (132) condiciones -> . factor ESIGUAL factor
    (133) condiciones -> . factor MENORIGUAL factor
    (134) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 217
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 216
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 196

    (117) parametros -> typeData VARIABLE COMA . parametros
    (114) parametros -> . VARIABLE
    (115) parametros -> . VARIABLE COMA parametros
    (116) parametros -> . typeData VARIABLE
    (117) parametros -> . typeData VARIABLE COMA parametros
    (70) typeData -> . BOOL
    (71) typeData -> . INT
    (72) typeData -> . FLOAT
    (73) typeData -> . STRING

    VARIABLE        shift and go to state 148
    BOOL            shift and go to state 152
    INT             shift and go to state 153
    FLOAT           shift and go to state 154
    STRING          shift and go to state 155

    typeData                       shift and go to state 151
    parametros                     shift and go to state 218

state 197

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT . contArray LLAVERIGHT
    (87) contArray -> . contArray COMA numericos
    (94) contArray -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    contArray                      shift and go to state 219
    numericos                      shift and go to state 65
    term                           shift and go to state 220

state 198

    (36) sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .
    (37) sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT . else
    (42) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE sentenciaIf

    $end            reduce using rule 36 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 36 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 36 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    DEFAULT         reduce using rule 36 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 36 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 36 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 184

    else                           shift and go to state 221

state 199

    (42) else -> ELSE LLAVELEFT . instrucciones LLAVERIGHT
    (43) else -> ELSE LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> ELSE LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (129) condiciones -> . factor MAYORQUE factor
    (130) condiciones -> . factor MENORQUE factor
    (131) condiciones -> . factor DIFERENTE factor
    (132) condiciones -> . factor ESIGUAL factor
    (133) condiciones -> . factor MENORIGUAL factor
    (134) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 223
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 222
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 200

    (45) else -> ELSE sentenciaIf .

    $end            reduce using rule 45 (else -> ELSE sentenciaIf .)
    RETURN          reduce using rule 45 (else -> ELSE sentenciaIf .)
    LLAVERIGHT      reduce using rule 45 (else -> ELSE sentenciaIf .)
    DEFAULT         reduce using rule 45 (else -> ELSE sentenciaIf .)
    BREAK           reduce using rule 45 (else -> ELSE sentenciaIf .)
    CONTINUE        reduce using rule 45 (else -> ELSE sentenciaIf .)


state 201

    (41) sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 41 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 41 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 41 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    DEFAULT         reduce using rule 41 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    BREAK           reduce using rule 41 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    CONTINUE        reduce using rule 41 (sentenciaIf -> IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)


state 202

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT . instrucciones LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (129) condiciones -> . factor MAYORQUE factor
    (130) condiciones -> . factor MENORQUE factor
    (131) condiciones -> . factor DIFERENTE factor
    (132) condiciones -> . factor ESIGUAL factor
    (133) condiciones -> . factor MENORIGUAL factor
    (134) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF condiciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF condiciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (140) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    condiciones                    shift and go to state 4
    instrucciones                  shift and go to state 224
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 203

    (69) incrementa -> VARIABLE INCREMENTO .

    LLAVELEFT       reduce using rule 69 (incrementa -> VARIABLE INCREMENTO .)


state 204

    (46) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par . LLAVERIGHT

    LLAVERIGHT      shift and go to state 225


state 205

    (47) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .

    $end            reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    RETURN          reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    DEFAULT         reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    BREAK           reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    CONTINUE        reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)


state 206

    (48) par -> dato . DOSPUNTOS dato mas
    (49) par -> dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 226


state 207

    (56) dato -> VARIABLE .

    DOSPUNTOS       reduce using rule 56 (dato -> VARIABLE .)
    COMA            reduce using rule 56 (dato -> VARIABLE .)
    LLAVERIGHT      reduce using rule 56 (dato -> VARIABLE .)


state 208

    (57) dato -> expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    DOSPUNTOS       reduce using rule 57 (dato -> expresion .)
    COMA            reduce using rule 57 (dato -> expresion .)
    LLAVERIGHT      reduce using rule 57 (dato -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 209

    (58) dato -> CADENA .

    DOSPUNTOS       reduce using rule 58 (dato -> CADENA .)
    COMA            reduce using rule 58 (dato -> CADENA .)
    LLAVERIGHT      reduce using rule 58 (dato -> CADENA .)


state 210

    (59) dato -> TRUE .

    DOSPUNTOS       reduce using rule 59 (dato -> TRUE .)
    COMA            reduce using rule 59 (dato -> TRUE .)
    LLAVERIGHT      reduce using rule 59 (dato -> TRUE .)


state 211

    (60) dato -> FALSE .

    DOSPUNTOS       reduce using rule 60 (dato -> FALSE .)
    COMA            reduce using rule 60 (dato -> FALSE .)
    LLAVERIGHT      reduce using rule 60 (dato -> FALSE .)


state 212

    (119) bloque_switch -> CASE caso DOSPUNTOS instrucciones . BREAK
    (120) bloque_switch -> CASE caso DOSPUNTOS instrucciones . CONTINUE
    (121) bloque_switch -> CASE caso DOSPUNTOS instrucciones . BREAK bloque_switch
    (122) bloque_switch -> CASE caso DOSPUNTOS instrucciones . BREAK switch_default
    (123) bloque_switch -> CASE caso DOSPUNTOS instrucciones . BREAK bloque_switch switch_default

    BREAK           shift and go to state 227
    CONTINUE        shift and go to state 228


state 213

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    DEFAULT         reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)


state 214

    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN . LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 230
    VARIABLE        shift and go to state 229


state 215

    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .

    $end            reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    RETURN          reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    DEFAULT         reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    BREAK           reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)


state 216

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones . LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones . RETURN LLAVERIGHT

    LLAVERIGHT      shift and go to state 231
    RETURN          shift and go to state 232


state 217

    (113) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 233


state 218

    (117) parametros -> typeData VARIABLE COMA parametros .

    PARRIGHT        reduce using rule 117 (parametros -> typeData VARIABLE COMA parametros .)


state 219

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray . LLAVERIGHT
    (87) contArray -> contArray . COMA numericos

    LLAVERIGHT      shift and go to state 234
    COMA            shift and go to state 235


state 220

    (94) contArray -> term .

    LLAVERIGHT      reduce using rule 94 (contArray -> term .)
    COMA            reduce using rule 94 (contArray -> term .)


state 221

    (37) sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 37 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 37 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 37 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    DEFAULT         reduce using rule 37 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    BREAK           reduce using rule 37 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    CONTINUE        reduce using rule 37 (sentenciaIf -> IF condiciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)


state 222

    (42) else -> ELSE LLAVELEFT instrucciones . LLAVERIGHT
    (43) else -> ELSE LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 236
    RETURN          shift and go to state 237


state 223

    (44) else -> ELSE LLAVELEFT RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 238


state 224

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones . LLAVERIGHT

    LLAVERIGHT      shift and go to state 239


state 225

    (46) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .

    $end            reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    RETURN          reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    DEFAULT         reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    BREAK           reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    CONTINUE        reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)


state 226

    (48) par -> dato DOSPUNTOS . dato mas
    (49) par -> dato DOSPUNTOS . dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 207
    CADENA          shift and go to state 209
    TRUE            shift and go to state 210
    FALSE           shift and go to state 211
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    dato                           shift and go to state 240
    expresion                      shift and go to state 208
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 227

    (119) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK .
    (121) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK . bloque_switch
    (122) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK . switch_default
    (123) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK . bloque_switch switch_default
    (119) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK
    (120) bloque_switch -> . CASE caso DOSPUNTOS instrucciones CONTINUE
    (121) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK bloque_switch
    (122) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK switch_default
    (123) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK bloque_switch switch_default
    (124) bloque_switch -> . switch_default
    (128) switch_default -> . DEFAULT DOSPUNTOS instrucciones

  ! shift/reduce conflict for DEFAULT resolved as shift
    LLAVERIGHT      reduce using rule 119 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK .)
    CASE            shift and go to state 145
    DEFAULT         shift and go to state 147

  ! DEFAULT         [ reduce using rule 119 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK .) ]

    bloque_switch                  shift and go to state 241
    switch_default                 shift and go to state 242

state 228

    (120) bloque_switch -> CASE caso DOSPUNTOS instrucciones CONTINUE .

    LLAVERIGHT      reduce using rule 120 (bloque_switch -> CASE caso DOSPUNTOS instrucciones CONTINUE .)
    DEFAULT         reduce using rule 120 (bloque_switch -> CASE caso DOSPUNTOS instrucciones CONTINUE .)


state 229

    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 243


state 230

    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .

    $end            reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    RETURN          reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    DEFAULT         reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    BREAK           reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)


state 231

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    DEFAULT         reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)


state 232

    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 244


state 233

    (113) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .

    $end            reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    RETURN          reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    DEFAULT         reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    BREAK           reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)


state 234

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .

    $end            reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    RETURN          reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    DEFAULT         reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    BREAK           reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    CONTINUE        reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)


state 235

    (87) contArray -> contArray COMA . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    numericos                      shift and go to state 245

state 236

    (42) else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    DEFAULT         reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)


state 237

    (43) else -> ELSE LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 246


state 238

    (44) else -> ELSE LLAVELEFT RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 247


state 239

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    DEFAULT         reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)


state 240

    (48) par -> dato DOSPUNTOS dato . mas
    (49) par -> dato DOSPUNTOS dato .
    (50) mas -> . mas COMA dato DOSPUNTOS dato
    (51) mas -> . COMA dato DOSPUNTOS dato

    LLAVERIGHT      reduce using rule 49 (par -> dato DOSPUNTOS dato .)
    COMA            shift and go to state 249

    mas                            shift and go to state 248

state 241

    (121) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch .
    (123) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch . switch_default
    (128) switch_default -> . DEFAULT DOSPUNTOS instrucciones

  ! shift/reduce conflict for DEFAULT resolved as shift
    LLAVERIGHT      reduce using rule 121 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch .)
    DEFAULT         shift and go to state 147

  ! DEFAULT         [ reduce using rule 121 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch .) ]

    switch_default                 shift and go to state 250

state 242

    (122) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK switch_default .
    (124) bloque_switch -> switch_default .

  ! reduce/reduce conflict for DEFAULT resolved using rule 122 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK switch_default .)
  ! reduce/reduce conflict for LLAVERIGHT resolved using rule 122 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK switch_default .)
    LLAVERIGHT      reduce using rule 122 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK switch_default .)
    DEFAULT         reduce using rule 122 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK switch_default .)

  ! DEFAULT         [ reduce using rule 124 (bloque_switch -> switch_default .) ]
  ! LLAVERIGHT      [ reduce using rule 124 (bloque_switch -> switch_default .) ]


state 243

    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    DEFAULT         reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 244

    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .

    $end            reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    RETURN          reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    DEFAULT         reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    BREAK           reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)


state 245

    (87) contArray -> contArray COMA numericos .

    LLAVERIGHT      reduce using rule 87 (contArray -> contArray COMA numericos .)
    COMA            reduce using rule 87 (contArray -> contArray COMA numericos .)


state 246

    (43) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 251


state 247

    (44) else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    DEFAULT         reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)


state 248

    (48) par -> dato DOSPUNTOS dato mas .
    (50) mas -> mas . COMA dato DOSPUNTOS dato

    LLAVERIGHT      reduce using rule 48 (par -> dato DOSPUNTOS dato mas .)
    COMA            shift and go to state 252


state 249

    (51) mas -> COMA . dato DOSPUNTOS dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 207
    CADENA          shift and go to state 209
    TRUE            shift and go to state 210
    FALSE           shift and go to state 211
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    dato                           shift and go to state 253
    expresion                      shift and go to state 208
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 250

    (123) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch switch_default .

    LLAVERIGHT      reduce using rule 123 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch switch_default .)
    DEFAULT         reduce using rule 123 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch switch_default .)


state 251

    (43) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    DEFAULT         reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 252

    (50) mas -> mas COMA . dato DOSPUNTOS dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 207
    CADENA          shift and go to state 209
    TRUE            shift and go to state 210
    FALSE           shift and go to state 211
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    dato                           shift and go to state 254
    expresion                      shift and go to state 208
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 253

    (51) mas -> COMA dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 255


state 254

    (50) mas -> mas COMA dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 256


state 255

    (51) mas -> COMA dato DOSPUNTOS . dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 207
    CADENA          shift and go to state 209
    TRUE            shift and go to state 210
    FALSE           shift and go to state 211
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    dato                           shift and go to state 257
    expresion                      shift and go to state 208
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 256

    (50) mas -> mas COMA dato DOSPUNTOS . dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 207
    CADENA          shift and go to state 209
    TRUE            shift and go to state 210
    FALSE           shift and go to state 211
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    dato                           shift and go to state 258
    expresion                      shift and go to state 208
    term                           shift and go to state 19
    numericos                      shift and go to state 65

state 257

    (51) mas -> COMA dato DOSPUNTOS dato .

    COMA            reduce using rule 51 (mas -> COMA dato DOSPUNTOS dato .)
    LLAVERIGHT      reduce using rule 51 (mas -> COMA dato DOSPUNTOS dato .)


state 258

    (50) mas -> mas COMA dato DOSPUNTOS dato .

    COMA            reduce using rule 50 (mas -> mas COMA dato DOSPUNTOS dato .)
    LLAVERIGHT      reduce using rule 50 (mas -> mas COMA dato DOSPUNTOS dato .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DEFAULT in state 227 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 241 resolved as shift
WARNING: reduce/reduce conflict in state 242 resolved using rule (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK switch_default)
WARNING: rejected rule (bloque_switch -> switch_default) in state 242
