Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BARRAINVERSA
    BREAK
    CASE
    CHAN
    COMENTARIO
    CONST
    CONTINUE
    DEFAULT
    DEFER
    ESPACIO
    FALLTHROUGH
    FUNC
    GO
    GOTO
    IMPORT
    INTERFACE
    MASIGUAL
    MENOSIGUAL
    PACKAGE
    RANGE
    SELECT
    STRUCT
    SWITCH
    TYPE

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> expresion
Rule 3     instrucciones -> condiciones
Rule 4     instrucciones -> sentenciaIf
Rule 5     instrucciones -> sentenciaFor
Rule 6     instrucciones -> print
Rule 7     instrucciones -> mapa
Rule 8     instrucciones -> puntero
Rule 9     instrucciones -> lectura
Rule 10    instrucciones -> array
Rule 11    instrucciones -> arrayAsig
Rule 12    asignacion -> VAR VARIABLE BOOL IGUAL booleano
Rule 13    asignacion -> VAR VARIABLE INT IGUAL expresion
Rule 14    asignacion -> VAR VARIABLE FLOAT IGUAL expresion
Rule 15    asignacion -> VAR VARIABLE STRING IGUAL CADENA
Rule 16    asignacion -> VAR VARIABLE puntero IGUAL refer
Rule 17    asignacion -> VAR VARIABLE puntero
Rule 18    asignacion -> VARIABLE DECLARADOR valor
Rule 19    asignacion -> VARIABLE IGUAL valor
Rule 20    asignacion -> derefer IGUAL valor
Rule 21    booleano -> condicion
Rule 22    booleano -> TRUE
Rule 23    booleano -> FALSE
Rule 24    valor -> booleano
Rule 25    valor -> expresion
Rule 26    valor -> CADENA
Rule 27    valor -> VARIABLE
Rule 28    valor -> mapa
Rule 29    valor -> refer
Rule 30    sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 31    sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
Rule 32    sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT
Rule 33    sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else
Rule 34    sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 35    sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
Rule 36    else -> ELSE LLAVELEFT instrucciones LLAVERIGHT
Rule 37    else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 38    else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 39    else -> ELSE sentenciaIf
Rule 40    mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
Rule 41    mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
Rule 42    par -> dato DOSPUNTOS dato
Rule 43    par -> dato DOSPUNTOS dato mas
Rule 44    mas -> COMA par
Rule 45    mas -> COMA par mas
Rule 46    tipo -> BOOL
Rule 47    tipo -> INT
Rule 48    tipo -> FLOAT
Rule 49    tipo -> STRING
Rule 50    dato -> VARIABLE
Rule 51    dato -> expresion
Rule 52    dato -> CADENA
Rule 53    dato -> TRUE
Rule 54    dato -> FALSE
Rule 55    puntero -> PRODUCTO BOOL
Rule 56    puntero -> PRODUCTO INT
Rule 57    puntero -> PRODUCTO FLOAT
Rule 58    puntero -> PRODUCTO STRING
Rule 59    refer -> AMPERSAND VARIABLE
Rule 60    derefer -> PRODUCTO VARIABLE
Rule 61    sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
Rule 62    inicio -> VARIABLE DECLARADOR ENTERO
Rule 63    incrementa -> VARIABLE INCREMENTO
Rule 64    typeData -> BOOL
Rule 65    typeData -> INT
Rule 66    typeData -> FLOAT
Rule 67    typeData -> STRING
Rule 68    array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
Rule 69    arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
Rule 70    print -> IMPRIMIR PARLEFT contPrint PARRIGHT
Rule 71    contPrint -> CADENA
Rule 72    contPrint -> VARIABLE
Rule 73    contPrint -> factor
Rule 74    contPrint -> contPrint COMA contPrint
Rule 75    lectura -> SCAN PARLEFT contScan PARRIGHT
Rule 76    contScan -> AMPERSAND VARIABLE
Rule 77    contScan -> COMILLA MODULO VARIABLE COMILLA COMA AMPERSAND VARIABLE
Rule 78    contArray -> contArray COMA numericos
Rule 79    expresion -> expresion SUMA numericos
Rule 80    expresion -> expresion RESTA numericos
Rule 81    expresion -> expresion PRODUCTO numericos
Rule 82    expresion -> expresion DIVISION numericos
Rule 83    expresion -> expresion MODULO numericos
Rule 84    expresion -> term
Rule 85    contArray -> term
Rule 86    term -> numericos
Rule 87    factor -> numericos
Rule 88    factor -> VARIABLE
Rule 89    numericos -> ENTERO
Rule 90    numericos -> FLOTANTE
Rule 91    factor -> BOOL
Rule 92    comparacion -> condiciones
Rule 93    comparacion -> NEGACION PARLEFT condiciones PARRIGHT
Rule 94    comparacion -> PARLEFT condiciones PARRIGHT
Rule 95    condiciones -> factor MAYORQUE factor
Rule 96    condiciones -> factor MENORQUE factor
Rule 97    condiciones -> factor DIFERENTE factor
Rule 98    condiciones -> factor ESIGUAL factor
Rule 99    condiciones -> factor MENORIGUAL factor
Rule 100   condiciones -> factor MAYORIGUAL factor
Rule 101   comparaciones -> comparacion
Rule 102   comparaciones -> comparacion anado comparaciones
Rule 103   anado -> condicion
Rule 104   condicion -> AND
Rule 105   condicion -> OR

Terminals, with rules where they appear

AMPERSAND            : 59 76 77
AND                  : 104
BARRAINVERSA         : 
BOOL                 : 12 46 55 64 91
BREAK                : 
CADENA               : 15 26 52 71
CASE                 : 
CHAN                 : 
COMA                 : 44 45 74 77 78
COMENTARIO           : 
COMILLA              : 77 77
CONST                : 
CONTINUE             : 
CORCHLEFT            : 40 41 68 69
CORCHRIGHT           : 40 41 68 69
DECLARADOR           : 18 62 68
DEFAULT              : 
DEFER                : 
DIFERENTE            : 97
DIVISION             : 82
DOSPUNTOS            : 42 43
ELSE                 : 36 37 38 39
ENTERO               : 62 68 69 89
ESIGUAL              : 98
ESPACIO              : 
FALLTHROUGH          : 
FALSE                : 23 54
FLOAT                : 14 48 57 66
FLOTANTE             : 90
FOR                  : 61
FUNC                 : 
GO                   : 
GOTO                 : 
IF                   : 30 31 32 33 34 35
IGUAL                : 12 13 14 15 16 19 20
IMPORT               : 
IMPRIMIR             : 70
INCREMENTO           : 63
INT                  : 13 47 56 65
INTERFACE            : 
LLAVELEFT            : 30 31 32 33 34 35 36 37 38 40 41 61 68
LLAVERIGHT           : 30 31 32 33 34 35 36 37 38 40 41 61 68
MAP                  : 40 41
MASIGUAL             : 
MAYORIGUAL           : 100
MAYORQUE             : 95
MENORIGUAL           : 99
MENORQUE             : 96
MENOSIGUAL           : 
MODULO               : 77 83
NEGACION             : 93
OR                   : 105
PACKAGE              : 
PARLEFT              : 70 75 93 94
PARRIGHT             : 70 75 93 94
PRODUCTO             : 55 56 57 58 60 81
PUNTOCOMA            : 61 61
RANGE                : 
RESTA                : 80
RETURN               : 30 31 34 35 37 38
SCAN                 : 75
SELECT               : 
STRING               : 15 49 58 67
STRUCT               : 
SUMA                 : 79
SWITCH               : 
TRUE                 : 22 53
TYPE                 : 
VAR                  : 12 13 14 15 16 17 69
VARIABLE             : 12 13 14 15 16 17 18 19 27 30 31 34 35 37 38 50 59 60 62 63 68 69 72 76 77 77 88
error                : 

Nonterminals, with rules where they appear

anado                : 102
array                : 10
arrayAsig            : 11
asignacion           : 1
booleano             : 12 24
comparacion          : 101 102
comparaciones        : 102
condicion            : 21 30 31 32 33 34 35 103
condiciones          : 3 61 92 93 94
contArray            : 68 78
contPrint            : 70 74 74
contScan             : 75
dato                 : 42 42 43 43
derefer              : 20
else                 : 31 33 35
expresion            : 2 13 14 25 51 79 80 81 82 83
factor               : 73 95 95 96 96 97 97 98 98 99 99 100 100
incrementa           : 61
inicio               : 61
instrucciones        : 30 31 32 33 36 37 61 0
lectura              : 9
mapa                 : 7 28
mas                  : 43 45
numericos            : 78 79 80 81 82 83 86 87
par                  : 40 44 45
print                : 6
puntero              : 8 16 17
refer                : 16 29
sentenciaFor         : 5
sentenciaIf          : 4 39
term                 : 84 85
tipo                 : 40 40 41 41
typeData             : 68 69
valor                : 18 19 20

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . arrayAsig
    (12) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (13) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (14) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (16) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (17) asignacion -> . VAR VARIABLE puntero
    (18) asignacion -> . VARIABLE DECLARADOR valor
    (19) asignacion -> . VARIABLE IGUAL valor
    (20) asignacion -> . derefer IGUAL valor
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (95) condiciones -> . factor MAYORQUE factor
    (96) condiciones -> . factor MENORQUE factor
    (97) condiciones -> . factor DIFERENTE factor
    (98) condiciones -> . factor ESIGUAL factor
    (99) condiciones -> . factor MENORIGUAL factor
    (100) condiciones -> . factor MAYORIGUAL factor
    (30) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (31) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (32) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (34) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (35) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (70) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (40) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (55) puntero -> . PRODUCTO BOOL
    (56) puntero -> . PRODUCTO INT
    (57) puntero -> . PRODUCTO FLOAT
    (58) puntero -> . PRODUCTO STRING
    (75) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (69) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (60) derefer -> . PRODUCTO VARIABLE
    (86) term -> . numericos
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VAR             shift and go to state 13
    VARIABLE        shift and go to state 14
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 18
    SCAN            shift and go to state 25
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    arrayAsig                      shift and go to state 12
    derefer                        shift and go to state 16
    numericos                      shift and go to state 17
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    RETURN          reduce using rule 1 (instrucciones -> asignacion .)
    LLAVERIGHT      reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> expresion .
    (79) expresion -> expresion . SUMA numericos
    (80) expresion -> expresion . RESTA numericos
    (81) expresion -> expresion . PRODUCTO numericos
    (82) expresion -> expresion . DIVISION numericos
    (83) expresion -> expresion . MODULO numericos

    $end            reduce using rule 2 (instrucciones -> expresion .)
    RETURN          reduce using rule 2 (instrucciones -> expresion .)
    LLAVERIGHT      reduce using rule 2 (instrucciones -> expresion .)
    SUMA            shift and go to state 28
    RESTA           shift and go to state 29
    PRODUCTO        shift and go to state 30
    DIVISION        shift and go to state 31
    MODULO          shift and go to state 32


state 4

    (3) instrucciones -> condiciones .

    $end            reduce using rule 3 (instrucciones -> condiciones .)
    RETURN          reduce using rule 3 (instrucciones -> condiciones .)
    LLAVERIGHT      reduce using rule 3 (instrucciones -> condiciones .)


state 5

    (4) instrucciones -> sentenciaIf .

    $end            reduce using rule 4 (instrucciones -> sentenciaIf .)
    RETURN          reduce using rule 4 (instrucciones -> sentenciaIf .)
    LLAVERIGHT      reduce using rule 4 (instrucciones -> sentenciaIf .)


state 6

    (5) instrucciones -> sentenciaFor .

    $end            reduce using rule 5 (instrucciones -> sentenciaFor .)
    RETURN          reduce using rule 5 (instrucciones -> sentenciaFor .)
    LLAVERIGHT      reduce using rule 5 (instrucciones -> sentenciaFor .)


state 7

    (6) instrucciones -> print .

    $end            reduce using rule 6 (instrucciones -> print .)
    RETURN          reduce using rule 6 (instrucciones -> print .)
    LLAVERIGHT      reduce using rule 6 (instrucciones -> print .)


state 8

    (7) instrucciones -> mapa .

    $end            reduce using rule 7 (instrucciones -> mapa .)
    RETURN          reduce using rule 7 (instrucciones -> mapa .)
    LLAVERIGHT      reduce using rule 7 (instrucciones -> mapa .)


state 9

    (8) instrucciones -> puntero .

    $end            reduce using rule 8 (instrucciones -> puntero .)
    RETURN          reduce using rule 8 (instrucciones -> puntero .)
    LLAVERIGHT      reduce using rule 8 (instrucciones -> puntero .)


state 10

    (9) instrucciones -> lectura .

    $end            reduce using rule 9 (instrucciones -> lectura .)
    RETURN          reduce using rule 9 (instrucciones -> lectura .)
    LLAVERIGHT      reduce using rule 9 (instrucciones -> lectura .)


state 11

    (10) instrucciones -> array .

    $end            reduce using rule 10 (instrucciones -> array .)
    RETURN          reduce using rule 10 (instrucciones -> array .)
    LLAVERIGHT      reduce using rule 10 (instrucciones -> array .)


state 12

    (11) instrucciones -> arrayAsig .

    $end            reduce using rule 11 (instrucciones -> arrayAsig .)
    RETURN          reduce using rule 11 (instrucciones -> arrayAsig .)
    LLAVERIGHT      reduce using rule 11 (instrucciones -> arrayAsig .)


state 13

    (12) asignacion -> VAR . VARIABLE BOOL IGUAL booleano
    (13) asignacion -> VAR . VARIABLE INT IGUAL expresion
    (14) asignacion -> VAR . VARIABLE FLOAT IGUAL expresion
    (15) asignacion -> VAR . VARIABLE STRING IGUAL CADENA
    (16) asignacion -> VAR . VARIABLE puntero IGUAL refer
    (17) asignacion -> VAR . VARIABLE puntero
    (69) arrayAsig -> VAR . VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData

    VARIABLE        shift and go to state 33


state 14

    (18) asignacion -> VARIABLE . DECLARADOR valor
    (19) asignacion -> VARIABLE . IGUAL valor
    (68) array -> VARIABLE . DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (88) factor -> VARIABLE .

    DECLARADOR      shift and go to state 34
    IGUAL           shift and go to state 35
    MAYORQUE        reduce using rule 88 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 88 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 88 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 88 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 88 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 88 (factor -> VARIABLE .)


state 15

    (91) factor -> BOOL .

    MAYORQUE        reduce using rule 91 (factor -> BOOL .)
    MENORQUE        reduce using rule 91 (factor -> BOOL .)
    DIFERENTE       reduce using rule 91 (factor -> BOOL .)
    ESIGUAL         reduce using rule 91 (factor -> BOOL .)
    MENORIGUAL      reduce using rule 91 (factor -> BOOL .)
    MAYORIGUAL      reduce using rule 91 (factor -> BOOL .)
    $end            reduce using rule 91 (factor -> BOOL .)
    RETURN          reduce using rule 91 (factor -> BOOL .)
    LLAVERIGHT      reduce using rule 91 (factor -> BOOL .)
    PUNTOCOMA       reduce using rule 91 (factor -> BOOL .)
    PARRIGHT        reduce using rule 91 (factor -> BOOL .)
    COMA            reduce using rule 91 (factor -> BOOL .)


state 16

    (20) asignacion -> derefer . IGUAL valor

    IGUAL           shift and go to state 36


state 17

    (86) term -> numericos .
    (87) factor -> numericos .

    SUMA            reduce using rule 86 (term -> numericos .)
    RESTA           reduce using rule 86 (term -> numericos .)
    PRODUCTO        reduce using rule 86 (term -> numericos .)
    DIVISION        reduce using rule 86 (term -> numericos .)
    MODULO          reduce using rule 86 (term -> numericos .)
    $end            reduce using rule 86 (term -> numericos .)
    RETURN          reduce using rule 86 (term -> numericos .)
    LLAVERIGHT      reduce using rule 86 (term -> numericos .)
    MAYORQUE        reduce using rule 87 (factor -> numericos .)
    MENORQUE        reduce using rule 87 (factor -> numericos .)
    DIFERENTE       reduce using rule 87 (factor -> numericos .)
    ESIGUAL         reduce using rule 87 (factor -> numericos .)
    MENORIGUAL      reduce using rule 87 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 87 (factor -> numericos .)


state 18

    (55) puntero -> PRODUCTO . BOOL
    (56) puntero -> PRODUCTO . INT
    (57) puntero -> PRODUCTO . FLOAT
    (58) puntero -> PRODUCTO . STRING
    (60) derefer -> PRODUCTO . VARIABLE

    BOOL            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    VARIABLE        shift and go to state 41


state 19

    (84) expresion -> term .

    SUMA            reduce using rule 84 (expresion -> term .)
    RESTA           reduce using rule 84 (expresion -> term .)
    PRODUCTO        reduce using rule 84 (expresion -> term .)
    DIVISION        reduce using rule 84 (expresion -> term .)
    MODULO          reduce using rule 84 (expresion -> term .)
    $end            reduce using rule 84 (expresion -> term .)
    RETURN          reduce using rule 84 (expresion -> term .)
    LLAVERIGHT      reduce using rule 84 (expresion -> term .)
    DOSPUNTOS       reduce using rule 84 (expresion -> term .)
    COMA            reduce using rule 84 (expresion -> term .)


state 20

    (95) condiciones -> factor . MAYORQUE factor
    (96) condiciones -> factor . MENORQUE factor
    (97) condiciones -> factor . DIFERENTE factor
    (98) condiciones -> factor . ESIGUAL factor
    (99) condiciones -> factor . MENORIGUAL factor
    (100) condiciones -> factor . MAYORIGUAL factor

    MAYORQUE        shift and go to state 42
    MENORQUE        shift and go to state 43
    DIFERENTE       shift and go to state 44
    ESIGUAL         shift and go to state 45
    MENORIGUAL      shift and go to state 46
    MAYORIGUAL      shift and go to state 47


state 21

    (30) sentenciaIf -> IF . condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (31) sentenciaIf -> IF . condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (32) sentenciaIf -> IF . condicion LLAVELEFT instrucciones LLAVERIGHT
    (33) sentenciaIf -> IF . condicion LLAVELEFT instrucciones LLAVERIGHT else
    (34) sentenciaIf -> IF . condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (35) sentenciaIf -> IF . condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (104) condicion -> . AND
    (105) condicion -> . OR

    AND             shift and go to state 49
    OR              shift and go to state 50

    condicion                      shift and go to state 48

state 22

    (61) sentenciaFor -> FOR . inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (62) inicio -> . VARIABLE DECLARADOR ENTERO

    VARIABLE        shift and go to state 52

    inicio                         shift and go to state 51

state 23

    (70) print -> IMPRIMIR . PARLEFT contPrint PARRIGHT

    PARLEFT         shift and go to state 53


state 24

    (40) mapa -> MAP . CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> MAP . CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT

    CORCHLEFT       shift and go to state 54


state 25

    (75) lectura -> SCAN . PARLEFT contScan PARRIGHT

    PARLEFT         shift and go to state 55


state 26

    (89) numericos -> ENTERO .

    SUMA            reduce using rule 89 (numericos -> ENTERO .)
    RESTA           reduce using rule 89 (numericos -> ENTERO .)
    PRODUCTO        reduce using rule 89 (numericos -> ENTERO .)
    DIVISION        reduce using rule 89 (numericos -> ENTERO .)
    MODULO          reduce using rule 89 (numericos -> ENTERO .)
    $end            reduce using rule 89 (numericos -> ENTERO .)
    MAYORQUE        reduce using rule 89 (numericos -> ENTERO .)
    MENORQUE        reduce using rule 89 (numericos -> ENTERO .)
    DIFERENTE       reduce using rule 89 (numericos -> ENTERO .)
    ESIGUAL         reduce using rule 89 (numericos -> ENTERO .)
    MENORIGUAL      reduce using rule 89 (numericos -> ENTERO .)
    MAYORIGUAL      reduce using rule 89 (numericos -> ENTERO .)
    RETURN          reduce using rule 89 (numericos -> ENTERO .)
    LLAVERIGHT      reduce using rule 89 (numericos -> ENTERO .)
    DOSPUNTOS       reduce using rule 89 (numericos -> ENTERO .)
    COMA            reduce using rule 89 (numericos -> ENTERO .)
    PUNTOCOMA       reduce using rule 89 (numericos -> ENTERO .)
    PARRIGHT        reduce using rule 89 (numericos -> ENTERO .)


state 27

    (90) numericos -> FLOTANTE .

    SUMA            reduce using rule 90 (numericos -> FLOTANTE .)
    RESTA           reduce using rule 90 (numericos -> FLOTANTE .)
    PRODUCTO        reduce using rule 90 (numericos -> FLOTANTE .)
    DIVISION        reduce using rule 90 (numericos -> FLOTANTE .)
    MODULO          reduce using rule 90 (numericos -> FLOTANTE .)
    $end            reduce using rule 90 (numericos -> FLOTANTE .)
    MAYORQUE        reduce using rule 90 (numericos -> FLOTANTE .)
    MENORQUE        reduce using rule 90 (numericos -> FLOTANTE .)
    DIFERENTE       reduce using rule 90 (numericos -> FLOTANTE .)
    ESIGUAL         reduce using rule 90 (numericos -> FLOTANTE .)
    MENORIGUAL      reduce using rule 90 (numericos -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 90 (numericos -> FLOTANTE .)
    RETURN          reduce using rule 90 (numericos -> FLOTANTE .)
    LLAVERIGHT      reduce using rule 90 (numericos -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 90 (numericos -> FLOTANTE .)
    COMA            reduce using rule 90 (numericos -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 90 (numericos -> FLOTANTE .)
    PARRIGHT        reduce using rule 90 (numericos -> FLOTANTE .)


state 28

    (79) expresion -> expresion SUMA . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    numericos                      shift and go to state 56

state 29

    (80) expresion -> expresion RESTA . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    numericos                      shift and go to state 57

state 30

    (81) expresion -> expresion PRODUCTO . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    numericos                      shift and go to state 58

state 31

    (82) expresion -> expresion DIVISION . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    numericos                      shift and go to state 59

state 32

    (83) expresion -> expresion MODULO . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    numericos                      shift and go to state 60

state 33

    (12) asignacion -> VAR VARIABLE . BOOL IGUAL booleano
    (13) asignacion -> VAR VARIABLE . INT IGUAL expresion
    (14) asignacion -> VAR VARIABLE . FLOAT IGUAL expresion
    (15) asignacion -> VAR VARIABLE . STRING IGUAL CADENA
    (16) asignacion -> VAR VARIABLE . puntero IGUAL refer
    (17) asignacion -> VAR VARIABLE . puntero
    (69) arrayAsig -> VAR VARIABLE . CORCHLEFT ENTERO CORCHRIGHT typeData
    (55) puntero -> . PRODUCTO BOOL
    (56) puntero -> . PRODUCTO INT
    (57) puntero -> . PRODUCTO FLOAT
    (58) puntero -> . PRODUCTO STRING

    BOOL            shift and go to state 61
    INT             shift and go to state 62
    FLOAT           shift and go to state 63
    STRING          shift and go to state 64
    CORCHLEFT       shift and go to state 66
    PRODUCTO        shift and go to state 67

    puntero                        shift and go to state 65

state 34

    (18) asignacion -> VARIABLE DECLARADOR . valor
    (68) array -> VARIABLE DECLARADOR . CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (24) valor -> . booleano
    (25) valor -> . expresion
    (26) valor -> . CADENA
    (27) valor -> . VARIABLE
    (28) valor -> . mapa
    (29) valor -> . refer
    (21) booleano -> . condicion
    (22) booleano -> . TRUE
    (23) booleano -> . FALSE
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (40) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (59) refer -> . AMPERSAND VARIABLE
    (104) condicion -> . AND
    (105) condicion -> . OR
    (86) term -> . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    CORCHLEFT       shift and go to state 70
    CADENA          shift and go to state 73
    VARIABLE        shift and go to state 68
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    MAP             shift and go to state 24
    AMPERSAND       shift and go to state 80
    AND             shift and go to state 49
    OR              shift and go to state 50
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    valor                          shift and go to state 69
    booleano                       shift and go to state 71
    expresion                      shift and go to state 72
    mapa                           shift and go to state 74
    refer                          shift and go to state 75
    condicion                      shift and go to state 76
    numericos                      shift and go to state 79
    term                           shift and go to state 19

state 35

    (19) asignacion -> VARIABLE IGUAL . valor
    (24) valor -> . booleano
    (25) valor -> . expresion
    (26) valor -> . CADENA
    (27) valor -> . VARIABLE
    (28) valor -> . mapa
    (29) valor -> . refer
    (21) booleano -> . condicion
    (22) booleano -> . TRUE
    (23) booleano -> . FALSE
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (40) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (59) refer -> . AMPERSAND VARIABLE
    (104) condicion -> . AND
    (105) condicion -> . OR
    (86) term -> . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    CADENA          shift and go to state 73
    VARIABLE        shift and go to state 68
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    MAP             shift and go to state 24
    AMPERSAND       shift and go to state 80
    AND             shift and go to state 49
    OR              shift and go to state 50
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    valor                          shift and go to state 81
    booleano                       shift and go to state 71
    expresion                      shift and go to state 72
    mapa                           shift and go to state 74
    refer                          shift and go to state 75
    condicion                      shift and go to state 76
    numericos                      shift and go to state 79
    term                           shift and go to state 19

state 36

    (20) asignacion -> derefer IGUAL . valor
    (24) valor -> . booleano
    (25) valor -> . expresion
    (26) valor -> . CADENA
    (27) valor -> . VARIABLE
    (28) valor -> . mapa
    (29) valor -> . refer
    (21) booleano -> . condicion
    (22) booleano -> . TRUE
    (23) booleano -> . FALSE
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (40) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (59) refer -> . AMPERSAND VARIABLE
    (104) condicion -> . AND
    (105) condicion -> . OR
    (86) term -> . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    CADENA          shift and go to state 73
    VARIABLE        shift and go to state 68
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    MAP             shift and go to state 24
    AMPERSAND       shift and go to state 80
    AND             shift and go to state 49
    OR              shift and go to state 50
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    valor                          shift and go to state 82
    booleano                       shift and go to state 71
    expresion                      shift and go to state 72
    mapa                           shift and go to state 74
    refer                          shift and go to state 75
    condicion                      shift and go to state 76
    numericos                      shift and go to state 79
    term                           shift and go to state 19

state 37

    (55) puntero -> PRODUCTO BOOL .

    $end            reduce using rule 55 (puntero -> PRODUCTO BOOL .)
    IGUAL           reduce using rule 55 (puntero -> PRODUCTO BOOL .)
    RETURN          reduce using rule 55 (puntero -> PRODUCTO BOOL .)
    LLAVERIGHT      reduce using rule 55 (puntero -> PRODUCTO BOOL .)


state 38

    (56) puntero -> PRODUCTO INT .

    $end            reduce using rule 56 (puntero -> PRODUCTO INT .)
    IGUAL           reduce using rule 56 (puntero -> PRODUCTO INT .)
    RETURN          reduce using rule 56 (puntero -> PRODUCTO INT .)
    LLAVERIGHT      reduce using rule 56 (puntero -> PRODUCTO INT .)


state 39

    (57) puntero -> PRODUCTO FLOAT .

    $end            reduce using rule 57 (puntero -> PRODUCTO FLOAT .)
    IGUAL           reduce using rule 57 (puntero -> PRODUCTO FLOAT .)
    RETURN          reduce using rule 57 (puntero -> PRODUCTO FLOAT .)
    LLAVERIGHT      reduce using rule 57 (puntero -> PRODUCTO FLOAT .)


state 40

    (58) puntero -> PRODUCTO STRING .

    $end            reduce using rule 58 (puntero -> PRODUCTO STRING .)
    IGUAL           reduce using rule 58 (puntero -> PRODUCTO STRING .)
    RETURN          reduce using rule 58 (puntero -> PRODUCTO STRING .)
    LLAVERIGHT      reduce using rule 58 (puntero -> PRODUCTO STRING .)


state 41

    (60) derefer -> PRODUCTO VARIABLE .

    IGUAL           reduce using rule 60 (derefer -> PRODUCTO VARIABLE .)


state 42

    (95) condiciones -> factor MAYORQUE . factor
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VARIABLE        shift and go to state 85
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    factor                         shift and go to state 83
    numericos                      shift and go to state 84

state 43

    (96) condiciones -> factor MENORQUE . factor
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VARIABLE        shift and go to state 85
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    factor                         shift and go to state 86
    numericos                      shift and go to state 84

state 44

    (97) condiciones -> factor DIFERENTE . factor
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VARIABLE        shift and go to state 85
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    factor                         shift and go to state 87
    numericos                      shift and go to state 84

state 45

    (98) condiciones -> factor ESIGUAL . factor
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VARIABLE        shift and go to state 85
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    factor                         shift and go to state 88
    numericos                      shift and go to state 84

state 46

    (99) condiciones -> factor MENORIGUAL . factor
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VARIABLE        shift and go to state 85
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    factor                         shift and go to state 89
    numericos                      shift and go to state 84

state 47

    (100) condiciones -> factor MAYORIGUAL . factor
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VARIABLE        shift and go to state 85
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    factor                         shift and go to state 90
    numericos                      shift and go to state 84

state 48

    (30) sentenciaIf -> IF condicion . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (31) sentenciaIf -> IF condicion . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (32) sentenciaIf -> IF condicion . LLAVELEFT instrucciones LLAVERIGHT
    (33) sentenciaIf -> IF condicion . LLAVELEFT instrucciones LLAVERIGHT else
    (34) sentenciaIf -> IF condicion . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (35) sentenciaIf -> IF condicion . LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 91


state 49

    (104) condicion -> AND .

    LLAVELEFT       reduce using rule 104 (condicion -> AND .)
    $end            reduce using rule 104 (condicion -> AND .)
    RETURN          reduce using rule 104 (condicion -> AND .)
    LLAVERIGHT      reduce using rule 104 (condicion -> AND .)


state 50

    (105) condicion -> OR .

    LLAVELEFT       reduce using rule 105 (condicion -> OR .)
    $end            reduce using rule 105 (condicion -> OR .)
    RETURN          reduce using rule 105 (condicion -> OR .)
    LLAVERIGHT      reduce using rule 105 (condicion -> OR .)


state 51

    (61) sentenciaFor -> FOR inicio . PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 92


state 52

    (62) inicio -> VARIABLE . DECLARADOR ENTERO

    DECLARADOR      shift and go to state 93


state 53

    (70) print -> IMPRIMIR PARLEFT . contPrint PARRIGHT
    (71) contPrint -> . CADENA
    (72) contPrint -> . VARIABLE
    (73) contPrint -> . factor
    (74) contPrint -> . contPrint COMA contPrint
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    CADENA          shift and go to state 95
    VARIABLE        shift and go to state 96
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    contPrint                      shift and go to state 94
    factor                         shift and go to state 97
    numericos                      shift and go to state 84

state 54

    (40) mapa -> MAP CORCHLEFT . tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> MAP CORCHLEFT . tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (46) tipo -> . BOOL
    (47) tipo -> . INT
    (48) tipo -> . FLOAT
    (49) tipo -> . STRING

    BOOL            shift and go to state 99
    INT             shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 102

    tipo                           shift and go to state 98

state 55

    (75) lectura -> SCAN PARLEFT . contScan PARRIGHT
    (76) contScan -> . AMPERSAND VARIABLE
    (77) contScan -> . COMILLA MODULO VARIABLE COMILLA COMA AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 104
    COMILLA         shift and go to state 105

    contScan                       shift and go to state 103

state 56

    (79) expresion -> expresion SUMA numericos .

    SUMA            reduce using rule 79 (expresion -> expresion SUMA numericos .)
    RESTA           reduce using rule 79 (expresion -> expresion SUMA numericos .)
    PRODUCTO        reduce using rule 79 (expresion -> expresion SUMA numericos .)
    DIVISION        reduce using rule 79 (expresion -> expresion SUMA numericos .)
    MODULO          reduce using rule 79 (expresion -> expresion SUMA numericos .)
    $end            reduce using rule 79 (expresion -> expresion SUMA numericos .)
    RETURN          reduce using rule 79 (expresion -> expresion SUMA numericos .)
    LLAVERIGHT      reduce using rule 79 (expresion -> expresion SUMA numericos .)
    DOSPUNTOS       reduce using rule 79 (expresion -> expresion SUMA numericos .)
    COMA            reduce using rule 79 (expresion -> expresion SUMA numericos .)


state 57

    (80) expresion -> expresion RESTA numericos .

    SUMA            reduce using rule 80 (expresion -> expresion RESTA numericos .)
    RESTA           reduce using rule 80 (expresion -> expresion RESTA numericos .)
    PRODUCTO        reduce using rule 80 (expresion -> expresion RESTA numericos .)
    DIVISION        reduce using rule 80 (expresion -> expresion RESTA numericos .)
    MODULO          reduce using rule 80 (expresion -> expresion RESTA numericos .)
    $end            reduce using rule 80 (expresion -> expresion RESTA numericos .)
    RETURN          reduce using rule 80 (expresion -> expresion RESTA numericos .)
    LLAVERIGHT      reduce using rule 80 (expresion -> expresion RESTA numericos .)
    DOSPUNTOS       reduce using rule 80 (expresion -> expresion RESTA numericos .)
    COMA            reduce using rule 80 (expresion -> expresion RESTA numericos .)


state 58

    (81) expresion -> expresion PRODUCTO numericos .

    SUMA            reduce using rule 81 (expresion -> expresion PRODUCTO numericos .)
    RESTA           reduce using rule 81 (expresion -> expresion PRODUCTO numericos .)
    PRODUCTO        reduce using rule 81 (expresion -> expresion PRODUCTO numericos .)
    DIVISION        reduce using rule 81 (expresion -> expresion PRODUCTO numericos .)
    MODULO          reduce using rule 81 (expresion -> expresion PRODUCTO numericos .)
    $end            reduce using rule 81 (expresion -> expresion PRODUCTO numericos .)
    RETURN          reduce using rule 81 (expresion -> expresion PRODUCTO numericos .)
    LLAVERIGHT      reduce using rule 81 (expresion -> expresion PRODUCTO numericos .)
    DOSPUNTOS       reduce using rule 81 (expresion -> expresion PRODUCTO numericos .)
    COMA            reduce using rule 81 (expresion -> expresion PRODUCTO numericos .)


state 59

    (82) expresion -> expresion DIVISION numericos .

    SUMA            reduce using rule 82 (expresion -> expresion DIVISION numericos .)
    RESTA           reduce using rule 82 (expresion -> expresion DIVISION numericos .)
    PRODUCTO        reduce using rule 82 (expresion -> expresion DIVISION numericos .)
    DIVISION        reduce using rule 82 (expresion -> expresion DIVISION numericos .)
    MODULO          reduce using rule 82 (expresion -> expresion DIVISION numericos .)
    $end            reduce using rule 82 (expresion -> expresion DIVISION numericos .)
    RETURN          reduce using rule 82 (expresion -> expresion DIVISION numericos .)
    LLAVERIGHT      reduce using rule 82 (expresion -> expresion DIVISION numericos .)
    DOSPUNTOS       reduce using rule 82 (expresion -> expresion DIVISION numericos .)
    COMA            reduce using rule 82 (expresion -> expresion DIVISION numericos .)


state 60

    (83) expresion -> expresion MODULO numericos .

    SUMA            reduce using rule 83 (expresion -> expresion MODULO numericos .)
    RESTA           reduce using rule 83 (expresion -> expresion MODULO numericos .)
    PRODUCTO        reduce using rule 83 (expresion -> expresion MODULO numericos .)
    DIVISION        reduce using rule 83 (expresion -> expresion MODULO numericos .)
    MODULO          reduce using rule 83 (expresion -> expresion MODULO numericos .)
    $end            reduce using rule 83 (expresion -> expresion MODULO numericos .)
    RETURN          reduce using rule 83 (expresion -> expresion MODULO numericos .)
    LLAVERIGHT      reduce using rule 83 (expresion -> expresion MODULO numericos .)
    DOSPUNTOS       reduce using rule 83 (expresion -> expresion MODULO numericos .)
    COMA            reduce using rule 83 (expresion -> expresion MODULO numericos .)


state 61

    (12) asignacion -> VAR VARIABLE BOOL . IGUAL booleano

    IGUAL           shift and go to state 106


state 62

    (13) asignacion -> VAR VARIABLE INT . IGUAL expresion

    IGUAL           shift and go to state 107


state 63

    (14) asignacion -> VAR VARIABLE FLOAT . IGUAL expresion

    IGUAL           shift and go to state 108


state 64

    (15) asignacion -> VAR VARIABLE STRING . IGUAL CADENA

    IGUAL           shift and go to state 109


state 65

    (16) asignacion -> VAR VARIABLE puntero . IGUAL refer
    (17) asignacion -> VAR VARIABLE puntero .

    IGUAL           shift and go to state 110
    $end            reduce using rule 17 (asignacion -> VAR VARIABLE puntero .)
    RETURN          reduce using rule 17 (asignacion -> VAR VARIABLE puntero .)
    LLAVERIGHT      reduce using rule 17 (asignacion -> VAR VARIABLE puntero .)


state 66

    (69) arrayAsig -> VAR VARIABLE CORCHLEFT . ENTERO CORCHRIGHT typeData

    ENTERO          shift and go to state 111


state 67

    (55) puntero -> PRODUCTO . BOOL
    (56) puntero -> PRODUCTO . INT
    (57) puntero -> PRODUCTO . FLOAT
    (58) puntero -> PRODUCTO . STRING

    BOOL            shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40


state 68

    (27) valor -> VARIABLE .

    $end            reduce using rule 27 (valor -> VARIABLE .)
    RETURN          reduce using rule 27 (valor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 27 (valor -> VARIABLE .)


state 69

    (18) asignacion -> VARIABLE DECLARADOR valor .

    $end            reduce using rule 18 (asignacion -> VARIABLE DECLARADOR valor .)
    RETURN          reduce using rule 18 (asignacion -> VARIABLE DECLARADOR valor .)
    LLAVERIGHT      reduce using rule 18 (asignacion -> VARIABLE DECLARADOR valor .)


state 70

    (68) array -> VARIABLE DECLARADOR CORCHLEFT . ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    ENTERO          shift and go to state 112


state 71

    (24) valor -> booleano .

    $end            reduce using rule 24 (valor -> booleano .)
    RETURN          reduce using rule 24 (valor -> booleano .)
    LLAVERIGHT      reduce using rule 24 (valor -> booleano .)


state 72

    (25) valor -> expresion .
    (79) expresion -> expresion . SUMA numericos
    (80) expresion -> expresion . RESTA numericos
    (81) expresion -> expresion . PRODUCTO numericos
    (82) expresion -> expresion . DIVISION numericos
    (83) expresion -> expresion . MODULO numericos

    $end            reduce using rule 25 (valor -> expresion .)
    RETURN          reduce using rule 25 (valor -> expresion .)
    LLAVERIGHT      reduce using rule 25 (valor -> expresion .)
    SUMA            shift and go to state 28
    RESTA           shift and go to state 29
    PRODUCTO        shift and go to state 30
    DIVISION        shift and go to state 31
    MODULO          shift and go to state 32


state 73

    (26) valor -> CADENA .

    $end            reduce using rule 26 (valor -> CADENA .)
    RETURN          reduce using rule 26 (valor -> CADENA .)
    LLAVERIGHT      reduce using rule 26 (valor -> CADENA .)


state 74

    (28) valor -> mapa .

    $end            reduce using rule 28 (valor -> mapa .)
    RETURN          reduce using rule 28 (valor -> mapa .)
    LLAVERIGHT      reduce using rule 28 (valor -> mapa .)


state 75

    (29) valor -> refer .

    $end            reduce using rule 29 (valor -> refer .)
    RETURN          reduce using rule 29 (valor -> refer .)
    LLAVERIGHT      reduce using rule 29 (valor -> refer .)


state 76

    (21) booleano -> condicion .

    $end            reduce using rule 21 (booleano -> condicion .)
    RETURN          reduce using rule 21 (booleano -> condicion .)
    LLAVERIGHT      reduce using rule 21 (booleano -> condicion .)


state 77

    (22) booleano -> TRUE .

    $end            reduce using rule 22 (booleano -> TRUE .)
    RETURN          reduce using rule 22 (booleano -> TRUE .)
    LLAVERIGHT      reduce using rule 22 (booleano -> TRUE .)


state 78

    (23) booleano -> FALSE .

    $end            reduce using rule 23 (booleano -> FALSE .)
    RETURN          reduce using rule 23 (booleano -> FALSE .)
    LLAVERIGHT      reduce using rule 23 (booleano -> FALSE .)


state 79

    (86) term -> numericos .

    SUMA            reduce using rule 86 (term -> numericos .)
    RESTA           reduce using rule 86 (term -> numericos .)
    PRODUCTO        reduce using rule 86 (term -> numericos .)
    DIVISION        reduce using rule 86 (term -> numericos .)
    MODULO          reduce using rule 86 (term -> numericos .)
    $end            reduce using rule 86 (term -> numericos .)
    RETURN          reduce using rule 86 (term -> numericos .)
    LLAVERIGHT      reduce using rule 86 (term -> numericos .)
    DOSPUNTOS       reduce using rule 86 (term -> numericos .)
    COMA            reduce using rule 86 (term -> numericos .)


state 80

    (59) refer -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 113


state 81

    (19) asignacion -> VARIABLE IGUAL valor .

    $end            reduce using rule 19 (asignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 19 (asignacion -> VARIABLE IGUAL valor .)
    LLAVERIGHT      reduce using rule 19 (asignacion -> VARIABLE IGUAL valor .)


state 82

    (20) asignacion -> derefer IGUAL valor .

    $end            reduce using rule 20 (asignacion -> derefer IGUAL valor .)
    RETURN          reduce using rule 20 (asignacion -> derefer IGUAL valor .)
    LLAVERIGHT      reduce using rule 20 (asignacion -> derefer IGUAL valor .)


state 83

    (95) condiciones -> factor MAYORQUE factor .

    $end            reduce using rule 95 (condiciones -> factor MAYORQUE factor .)
    RETURN          reduce using rule 95 (condiciones -> factor MAYORQUE factor .)
    LLAVERIGHT      reduce using rule 95 (condiciones -> factor MAYORQUE factor .)
    PUNTOCOMA       reduce using rule 95 (condiciones -> factor MAYORQUE factor .)


state 84

    (87) factor -> numericos .

    $end            reduce using rule 87 (factor -> numericos .)
    RETURN          reduce using rule 87 (factor -> numericos .)
    LLAVERIGHT      reduce using rule 87 (factor -> numericos .)
    PUNTOCOMA       reduce using rule 87 (factor -> numericos .)
    PARRIGHT        reduce using rule 87 (factor -> numericos .)
    COMA            reduce using rule 87 (factor -> numericos .)
    MAYORQUE        reduce using rule 87 (factor -> numericos .)
    MENORQUE        reduce using rule 87 (factor -> numericos .)
    DIFERENTE       reduce using rule 87 (factor -> numericos .)
    ESIGUAL         reduce using rule 87 (factor -> numericos .)
    MENORIGUAL      reduce using rule 87 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 87 (factor -> numericos .)


state 85

    (88) factor -> VARIABLE .

    $end            reduce using rule 88 (factor -> VARIABLE .)
    RETURN          reduce using rule 88 (factor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 88 (factor -> VARIABLE .)
    PUNTOCOMA       reduce using rule 88 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 88 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 88 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 88 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 88 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 88 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 88 (factor -> VARIABLE .)


state 86

    (96) condiciones -> factor MENORQUE factor .

    $end            reduce using rule 96 (condiciones -> factor MENORQUE factor .)
    RETURN          reduce using rule 96 (condiciones -> factor MENORQUE factor .)
    LLAVERIGHT      reduce using rule 96 (condiciones -> factor MENORQUE factor .)
    PUNTOCOMA       reduce using rule 96 (condiciones -> factor MENORQUE factor .)


state 87

    (97) condiciones -> factor DIFERENTE factor .

    $end            reduce using rule 97 (condiciones -> factor DIFERENTE factor .)
    RETURN          reduce using rule 97 (condiciones -> factor DIFERENTE factor .)
    LLAVERIGHT      reduce using rule 97 (condiciones -> factor DIFERENTE factor .)
    PUNTOCOMA       reduce using rule 97 (condiciones -> factor DIFERENTE factor .)


state 88

    (98) condiciones -> factor ESIGUAL factor .

    $end            reduce using rule 98 (condiciones -> factor ESIGUAL factor .)
    RETURN          reduce using rule 98 (condiciones -> factor ESIGUAL factor .)
    LLAVERIGHT      reduce using rule 98 (condiciones -> factor ESIGUAL factor .)
    PUNTOCOMA       reduce using rule 98 (condiciones -> factor ESIGUAL factor .)


state 89

    (99) condiciones -> factor MENORIGUAL factor .

    $end            reduce using rule 99 (condiciones -> factor MENORIGUAL factor .)
    RETURN          reduce using rule 99 (condiciones -> factor MENORIGUAL factor .)
    LLAVERIGHT      reduce using rule 99 (condiciones -> factor MENORIGUAL factor .)
    PUNTOCOMA       reduce using rule 99 (condiciones -> factor MENORIGUAL factor .)


state 90

    (100) condiciones -> factor MAYORIGUAL factor .

    $end            reduce using rule 100 (condiciones -> factor MAYORIGUAL factor .)
    RETURN          reduce using rule 100 (condiciones -> factor MAYORIGUAL factor .)
    LLAVERIGHT      reduce using rule 100 (condiciones -> factor MAYORIGUAL factor .)
    PUNTOCOMA       reduce using rule 100 (condiciones -> factor MAYORIGUAL factor .)


state 91

    (30) sentenciaIf -> IF condicion LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (31) sentenciaIf -> IF condicion LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT else
    (32) sentenciaIf -> IF condicion LLAVELEFT . instrucciones LLAVERIGHT
    (33) sentenciaIf -> IF condicion LLAVELEFT . instrucciones LLAVERIGHT else
    (34) sentenciaIf -> IF condicion LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (35) sentenciaIf -> IF condicion LLAVELEFT . RETURN VARIABLE LLAVERIGHT else
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . arrayAsig
    (12) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (13) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (14) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (16) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (17) asignacion -> . VAR VARIABLE puntero
    (18) asignacion -> . VARIABLE DECLARADOR valor
    (19) asignacion -> . VARIABLE IGUAL valor
    (20) asignacion -> . derefer IGUAL valor
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (95) condiciones -> . factor MAYORQUE factor
    (96) condiciones -> . factor MENORQUE factor
    (97) condiciones -> . factor DIFERENTE factor
    (98) condiciones -> . factor ESIGUAL factor
    (99) condiciones -> . factor MENORIGUAL factor
    (100) condiciones -> . factor MAYORIGUAL factor
    (30) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (31) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (32) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (34) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (35) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (70) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (40) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (55) puntero -> . PRODUCTO BOOL
    (56) puntero -> . PRODUCTO INT
    (57) puntero -> . PRODUCTO FLOAT
    (58) puntero -> . PRODUCTO STRING
    (75) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (69) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (60) derefer -> . PRODUCTO VARIABLE
    (86) term -> . numericos
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    RETURN          shift and go to state 115
    VAR             shift and go to state 13
    VARIABLE        shift and go to state 14
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 18
    SCAN            shift and go to state 25
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    instrucciones                  shift and go to state 114
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    arrayAsig                      shift and go to state 12
    derefer                        shift and go to state 16
    numericos                      shift and go to state 17
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 92

    (61) sentenciaFor -> FOR inicio PUNTOCOMA . condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (95) condiciones -> . factor MAYORQUE factor
    (96) condiciones -> . factor MENORQUE factor
    (97) condiciones -> . factor DIFERENTE factor
    (98) condiciones -> . factor ESIGUAL factor
    (99) condiciones -> . factor MENORIGUAL factor
    (100) condiciones -> . factor MAYORIGUAL factor
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VARIABLE        shift and go to state 85
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    condiciones                    shift and go to state 116
    factor                         shift and go to state 20
    numericos                      shift and go to state 84

state 93

    (62) inicio -> VARIABLE DECLARADOR . ENTERO

    ENTERO          shift and go to state 117


state 94

    (70) print -> IMPRIMIR PARLEFT contPrint . PARRIGHT
    (74) contPrint -> contPrint . COMA contPrint

    PARRIGHT        shift and go to state 118
    COMA            shift and go to state 119


state 95

    (71) contPrint -> CADENA .

    PARRIGHT        reduce using rule 71 (contPrint -> CADENA .)
    COMA            reduce using rule 71 (contPrint -> CADENA .)


state 96

    (72) contPrint -> VARIABLE .
    (88) factor -> VARIABLE .

  ! reduce/reduce conflict for PARRIGHT resolved using rule 72 (contPrint -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 72 (contPrint -> VARIABLE .)
    PARRIGHT        reduce using rule 72 (contPrint -> VARIABLE .)
    COMA            reduce using rule 72 (contPrint -> VARIABLE .)

  ! PARRIGHT        [ reduce using rule 88 (factor -> VARIABLE .) ]
  ! COMA            [ reduce using rule 88 (factor -> VARIABLE .) ]


state 97

    (73) contPrint -> factor .

    PARRIGHT        reduce using rule 73 (contPrint -> factor .)
    COMA            reduce using rule 73 (contPrint -> factor .)


state 98

    (40) mapa -> MAP CORCHLEFT tipo . CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> MAP CORCHLEFT tipo . CORCHRIGHT tipo LLAVELEFT LLAVERIGHT

    CORCHRIGHT      shift and go to state 120


state 99

    (46) tipo -> BOOL .

    CORCHRIGHT      reduce using rule 46 (tipo -> BOOL .)
    LLAVELEFT       reduce using rule 46 (tipo -> BOOL .)


state 100

    (47) tipo -> INT .

    CORCHRIGHT      reduce using rule 47 (tipo -> INT .)
    LLAVELEFT       reduce using rule 47 (tipo -> INT .)


state 101

    (48) tipo -> FLOAT .

    CORCHRIGHT      reduce using rule 48 (tipo -> FLOAT .)
    LLAVELEFT       reduce using rule 48 (tipo -> FLOAT .)


state 102

    (49) tipo -> STRING .

    CORCHRIGHT      reduce using rule 49 (tipo -> STRING .)
    LLAVELEFT       reduce using rule 49 (tipo -> STRING .)


state 103

    (75) lectura -> SCAN PARLEFT contScan . PARRIGHT

    PARRIGHT        shift and go to state 121


state 104

    (76) contScan -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 122


state 105

    (77) contScan -> COMILLA . MODULO VARIABLE COMILLA COMA AMPERSAND VARIABLE

    MODULO          shift and go to state 123


state 106

    (12) asignacion -> VAR VARIABLE BOOL IGUAL . booleano
    (21) booleano -> . condicion
    (22) booleano -> . TRUE
    (23) booleano -> . FALSE
    (104) condicion -> . AND
    (105) condicion -> . OR

    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    AND             shift and go to state 49
    OR              shift and go to state 50

    booleano                       shift and go to state 124
    condicion                      shift and go to state 76

state 107

    (13) asignacion -> VAR VARIABLE INT IGUAL . expresion
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (86) term -> . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    expresion                      shift and go to state 125
    numericos                      shift and go to state 79
    term                           shift and go to state 19

state 108

    (14) asignacion -> VAR VARIABLE FLOAT IGUAL . expresion
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (86) term -> . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    expresion                      shift and go to state 126
    numericos                      shift and go to state 79
    term                           shift and go to state 19

state 109

    (15) asignacion -> VAR VARIABLE STRING IGUAL . CADENA

    CADENA          shift and go to state 127


state 110

    (16) asignacion -> VAR VARIABLE puntero IGUAL . refer
    (59) refer -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 80

    refer                          shift and go to state 128

state 111

    (69) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO . CORCHRIGHT typeData

    CORCHRIGHT      shift and go to state 129


state 112

    (68) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO . CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    CORCHRIGHT      shift and go to state 130


state 113

    (59) refer -> AMPERSAND VARIABLE .

    $end            reduce using rule 59 (refer -> AMPERSAND VARIABLE .)
    RETURN          reduce using rule 59 (refer -> AMPERSAND VARIABLE .)
    LLAVERIGHT      reduce using rule 59 (refer -> AMPERSAND VARIABLE .)


state 114

    (30) sentenciaIf -> IF condicion LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT
    (31) sentenciaIf -> IF condicion LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT else
    (32) sentenciaIf -> IF condicion LLAVELEFT instrucciones . LLAVERIGHT
    (33) sentenciaIf -> IF condicion LLAVELEFT instrucciones . LLAVERIGHT else

    RETURN          shift and go to state 131
    LLAVERIGHT      shift and go to state 132


state 115

    (34) sentenciaIf -> IF condicion LLAVELEFT RETURN . VARIABLE LLAVERIGHT
    (35) sentenciaIf -> IF condicion LLAVELEFT RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 133


state 116

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones . PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 134


state 117

    (62) inicio -> VARIABLE DECLARADOR ENTERO .

    PUNTOCOMA       reduce using rule 62 (inicio -> VARIABLE DECLARADOR ENTERO .)


state 118

    (70) print -> IMPRIMIR PARLEFT contPrint PARRIGHT .

    $end            reduce using rule 70 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    RETURN          reduce using rule 70 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    LLAVERIGHT      reduce using rule 70 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)


state 119

    (74) contPrint -> contPrint COMA . contPrint
    (71) contPrint -> . CADENA
    (72) contPrint -> . VARIABLE
    (73) contPrint -> . factor
    (74) contPrint -> . contPrint COMA contPrint
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    CADENA          shift and go to state 95
    VARIABLE        shift and go to state 96
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    contPrint                      shift and go to state 135
    factor                         shift and go to state 97
    numericos                      shift and go to state 84

state 120

    (40) mapa -> MAP CORCHLEFT tipo CORCHRIGHT . tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> MAP CORCHLEFT tipo CORCHRIGHT . tipo LLAVELEFT LLAVERIGHT
    (46) tipo -> . BOOL
    (47) tipo -> . INT
    (48) tipo -> . FLOAT
    (49) tipo -> . STRING

    BOOL            shift and go to state 99
    INT             shift and go to state 100
    FLOAT           shift and go to state 101
    STRING          shift and go to state 102

    tipo                           shift and go to state 136

state 121

    (75) lectura -> SCAN PARLEFT contScan PARRIGHT .

    $end            reduce using rule 75 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    RETURN          reduce using rule 75 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    LLAVERIGHT      reduce using rule 75 (lectura -> SCAN PARLEFT contScan PARRIGHT .)


state 122

    (76) contScan -> AMPERSAND VARIABLE .

    PARRIGHT        reduce using rule 76 (contScan -> AMPERSAND VARIABLE .)


state 123

    (77) contScan -> COMILLA MODULO . VARIABLE COMILLA COMA AMPERSAND VARIABLE

    VARIABLE        shift and go to state 137


state 124

    (12) asignacion -> VAR VARIABLE BOOL IGUAL booleano .

    $end            reduce using rule 12 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    RETURN          reduce using rule 12 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    LLAVERIGHT      reduce using rule 12 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)


state 125

    (13) asignacion -> VAR VARIABLE INT IGUAL expresion .
    (79) expresion -> expresion . SUMA numericos
    (80) expresion -> expresion . RESTA numericos
    (81) expresion -> expresion . PRODUCTO numericos
    (82) expresion -> expresion . DIVISION numericos
    (83) expresion -> expresion . MODULO numericos

    $end            reduce using rule 13 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    RETURN          reduce using rule 13 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 13 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    SUMA            shift and go to state 28
    RESTA           shift and go to state 29
    PRODUCTO        shift and go to state 30
    DIVISION        shift and go to state 31
    MODULO          shift and go to state 32


state 126

    (14) asignacion -> VAR VARIABLE FLOAT IGUAL expresion .
    (79) expresion -> expresion . SUMA numericos
    (80) expresion -> expresion . RESTA numericos
    (81) expresion -> expresion . PRODUCTO numericos
    (82) expresion -> expresion . DIVISION numericos
    (83) expresion -> expresion . MODULO numericos

    $end            reduce using rule 14 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    RETURN          reduce using rule 14 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 14 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    SUMA            shift and go to state 28
    RESTA           shift and go to state 29
    PRODUCTO        shift and go to state 30
    DIVISION        shift and go to state 31
    MODULO          shift and go to state 32


state 127

    (15) asignacion -> VAR VARIABLE STRING IGUAL CADENA .

    $end            reduce using rule 15 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    RETURN          reduce using rule 15 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    LLAVERIGHT      reduce using rule 15 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)


state 128

    (16) asignacion -> VAR VARIABLE puntero IGUAL refer .

    $end            reduce using rule 16 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    RETURN          reduce using rule 16 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    LLAVERIGHT      reduce using rule 16 (asignacion -> VAR VARIABLE puntero IGUAL refer .)


state 129

    (69) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT . typeData
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 139
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 142

    typeData                       shift and go to state 138

state 130

    (68) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT . typeData LLAVELEFT contArray LLAVERIGHT
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 139
    INT             shift and go to state 140
    FLOAT           shift and go to state 141
    STRING          shift and go to state 142

    typeData                       shift and go to state 143

state 131

    (30) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT
    (31) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 144


state 132

    (32) sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT .
    (33) sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT . else
    (36) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (37) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (39) else -> . ELSE sentenciaIf

    $end            reduce using rule 32 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 32 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 32 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT .)
    ELSE            shift and go to state 146

    else                           shift and go to state 145

state 133

    (34) sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE . LLAVERIGHT
    (35) sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 147


state 134

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA . incrementa LLAVELEFT instrucciones LLAVERIGHT
    (63) incrementa -> . VARIABLE INCREMENTO

    VARIABLE        shift and go to state 149

    incrementa                     shift and go to state 148

state 135

    (74) contPrint -> contPrint COMA contPrint .
    (74) contPrint -> contPrint . COMA contPrint

  ! shift/reduce conflict for COMA resolved as shift
    PARRIGHT        reduce using rule 74 (contPrint -> contPrint COMA contPrint .)
    COMA            shift and go to state 119

  ! COMA            [ reduce using rule 74 (contPrint -> contPrint COMA contPrint .) ]


state 136

    (40) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo . LLAVELEFT par LLAVERIGHT
    (41) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo . LLAVELEFT LLAVERIGHT

    LLAVELEFT       shift and go to state 150


state 137

    (77) contScan -> COMILLA MODULO VARIABLE . COMILLA COMA AMPERSAND VARIABLE

    COMILLA         shift and go to state 151


state 138

    (69) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .

    $end            reduce using rule 69 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    RETURN          reduce using rule 69 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 69 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)


state 139

    (64) typeData -> BOOL .

    $end            reduce using rule 64 (typeData -> BOOL .)
    RETURN          reduce using rule 64 (typeData -> BOOL .)
    LLAVERIGHT      reduce using rule 64 (typeData -> BOOL .)
    LLAVELEFT       reduce using rule 64 (typeData -> BOOL .)


state 140

    (65) typeData -> INT .

    $end            reduce using rule 65 (typeData -> INT .)
    RETURN          reduce using rule 65 (typeData -> INT .)
    LLAVERIGHT      reduce using rule 65 (typeData -> INT .)
    LLAVELEFT       reduce using rule 65 (typeData -> INT .)


state 141

    (66) typeData -> FLOAT .

    $end            reduce using rule 66 (typeData -> FLOAT .)
    RETURN          reduce using rule 66 (typeData -> FLOAT .)
    LLAVERIGHT      reduce using rule 66 (typeData -> FLOAT .)
    LLAVELEFT       reduce using rule 66 (typeData -> FLOAT .)


state 142

    (67) typeData -> STRING .

    $end            reduce using rule 67 (typeData -> STRING .)
    RETURN          reduce using rule 67 (typeData -> STRING .)
    LLAVERIGHT      reduce using rule 67 (typeData -> STRING .)
    LLAVELEFT       reduce using rule 67 (typeData -> STRING .)


state 143

    (68) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData . LLAVELEFT contArray LLAVERIGHT

    LLAVELEFT       shift and go to state 152


state 144

    (30) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT
    (31) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 153


state 145

    (33) sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else .

    $end            reduce using rule 33 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else .)
    RETURN          reduce using rule 33 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 33 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else .)


state 146

    (36) else -> ELSE . LLAVELEFT instrucciones LLAVERIGHT
    (37) else -> ELSE . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) else -> ELSE . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (39) else -> ELSE . sentenciaIf
    (30) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (31) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (32) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (34) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (35) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 154
    IF              shift and go to state 21

    sentenciaIf                    shift and go to state 155

state 147

    (34) sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT .
    (35) sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT . else
    (36) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (37) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (39) else -> . ELSE sentenciaIf

    $end            reduce using rule 34 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 34 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 34 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 146

    else                           shift and go to state 156

state 148

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa . LLAVELEFT instrucciones LLAVERIGHT

    LLAVELEFT       shift and go to state 157


state 149

    (63) incrementa -> VARIABLE . INCREMENTO

    INCREMENTO      shift and go to state 158


state 150

    (40) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT . par LLAVERIGHT
    (41) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT . LLAVERIGHT
    (42) par -> . dato DOSPUNTOS dato
    (43) par -> . dato DOSPUNTOS dato mas
    (50) dato -> . VARIABLE
    (51) dato -> . expresion
    (52) dato -> . CADENA
    (53) dato -> . TRUE
    (54) dato -> . FALSE
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (86) term -> . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    LLAVERIGHT      shift and go to state 160
    VARIABLE        shift and go to state 162
    CADENA          shift and go to state 164
    TRUE            shift and go to state 165
    FALSE           shift and go to state 166
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    par                            shift and go to state 159
    dato                           shift and go to state 161
    expresion                      shift and go to state 163
    numericos                      shift and go to state 79
    term                           shift and go to state 19

state 151

    (77) contScan -> COMILLA MODULO VARIABLE COMILLA . COMA AMPERSAND VARIABLE

    COMA            shift and go to state 167


state 152

    (68) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT . contArray LLAVERIGHT
    (78) contArray -> . contArray COMA numericos
    (85) contArray -> . term
    (86) term -> . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    contArray                      shift and go to state 168
    numericos                      shift and go to state 79
    term                           shift and go to state 169

state 153

    (30) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .
    (31) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT . else
    (36) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (37) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (39) else -> . ELSE sentenciaIf

    $end            reduce using rule 30 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 30 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 30 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 146

    else                           shift and go to state 170

state 154

    (36) else -> ELSE LLAVELEFT . instrucciones LLAVERIGHT
    (37) else -> ELSE LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (38) else -> ELSE LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . arrayAsig
    (12) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (13) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (14) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (16) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (17) asignacion -> . VAR VARIABLE puntero
    (18) asignacion -> . VARIABLE DECLARADOR valor
    (19) asignacion -> . VARIABLE IGUAL valor
    (20) asignacion -> . derefer IGUAL valor
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (95) condiciones -> . factor MAYORQUE factor
    (96) condiciones -> . factor MENORQUE factor
    (97) condiciones -> . factor DIFERENTE factor
    (98) condiciones -> . factor ESIGUAL factor
    (99) condiciones -> . factor MENORIGUAL factor
    (100) condiciones -> . factor MAYORIGUAL factor
    (30) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (31) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (32) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (34) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (35) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (70) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (40) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (55) puntero -> . PRODUCTO BOOL
    (56) puntero -> . PRODUCTO INT
    (57) puntero -> . PRODUCTO FLOAT
    (58) puntero -> . PRODUCTO STRING
    (75) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (69) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (60) derefer -> . PRODUCTO VARIABLE
    (86) term -> . numericos
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    RETURN          shift and go to state 172
    VAR             shift and go to state 13
    VARIABLE        shift and go to state 14
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 18
    SCAN            shift and go to state 25
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    instrucciones                  shift and go to state 171
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    arrayAsig                      shift and go to state 12
    derefer                        shift and go to state 16
    numericos                      shift and go to state 17
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 155

    (39) else -> ELSE sentenciaIf .

    $end            reduce using rule 39 (else -> ELSE sentenciaIf .)
    RETURN          reduce using rule 39 (else -> ELSE sentenciaIf .)
    LLAVERIGHT      reduce using rule 39 (else -> ELSE sentenciaIf .)


state 156

    (35) sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 35 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 35 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 35 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)


state 157

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT . instrucciones LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . arrayAsig
    (12) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (13) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (14) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (16) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (17) asignacion -> . VAR VARIABLE puntero
    (18) asignacion -> . VARIABLE DECLARADOR valor
    (19) asignacion -> . VARIABLE IGUAL valor
    (20) asignacion -> . derefer IGUAL valor
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (95) condiciones -> . factor MAYORQUE factor
    (96) condiciones -> . factor MENORQUE factor
    (97) condiciones -> . factor DIFERENTE factor
    (98) condiciones -> . factor ESIGUAL factor
    (99) condiciones -> . factor MENORIGUAL factor
    (100) condiciones -> . factor MAYORIGUAL factor
    (30) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (31) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (32) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (34) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (35) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (70) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (40) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (41) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (55) puntero -> . PRODUCTO BOOL
    (56) puntero -> . PRODUCTO INT
    (57) puntero -> . PRODUCTO FLOAT
    (58) puntero -> . PRODUCTO STRING
    (75) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (69) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (60) derefer -> . PRODUCTO VARIABLE
    (86) term -> . numericos
    (87) factor -> . numericos
    (88) factor -> . VARIABLE
    (91) factor -> . BOOL
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VAR             shift and go to state 13
    VARIABLE        shift and go to state 14
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 18
    SCAN            shift and go to state 25
    BOOL            shift and go to state 15
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    condiciones                    shift and go to state 4
    instrucciones                  shift and go to state 173
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    arrayAsig                      shift and go to state 12
    derefer                        shift and go to state 16
    numericos                      shift and go to state 17
    term                           shift and go to state 19
    factor                         shift and go to state 20

state 158

    (63) incrementa -> VARIABLE INCREMENTO .

    LLAVELEFT       reduce using rule 63 (incrementa -> VARIABLE INCREMENTO .)


state 159

    (40) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par . LLAVERIGHT

    LLAVERIGHT      shift and go to state 174


state 160

    (41) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .

    $end            reduce using rule 41 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    RETURN          reduce using rule 41 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 41 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)


state 161

    (42) par -> dato . DOSPUNTOS dato
    (43) par -> dato . DOSPUNTOS dato mas

    DOSPUNTOS       shift and go to state 175


state 162

    (50) dato -> VARIABLE .

    DOSPUNTOS       reduce using rule 50 (dato -> VARIABLE .)
    COMA            reduce using rule 50 (dato -> VARIABLE .)
    LLAVERIGHT      reduce using rule 50 (dato -> VARIABLE .)


state 163

    (51) dato -> expresion .
    (79) expresion -> expresion . SUMA numericos
    (80) expresion -> expresion . RESTA numericos
    (81) expresion -> expresion . PRODUCTO numericos
    (82) expresion -> expresion . DIVISION numericos
    (83) expresion -> expresion . MODULO numericos

    DOSPUNTOS       reduce using rule 51 (dato -> expresion .)
    COMA            reduce using rule 51 (dato -> expresion .)
    LLAVERIGHT      reduce using rule 51 (dato -> expresion .)
    SUMA            shift and go to state 28
    RESTA           shift and go to state 29
    PRODUCTO        shift and go to state 30
    DIVISION        shift and go to state 31
    MODULO          shift and go to state 32


state 164

    (52) dato -> CADENA .

    DOSPUNTOS       reduce using rule 52 (dato -> CADENA .)
    COMA            reduce using rule 52 (dato -> CADENA .)
    LLAVERIGHT      reduce using rule 52 (dato -> CADENA .)


state 165

    (53) dato -> TRUE .

    DOSPUNTOS       reduce using rule 53 (dato -> TRUE .)
    COMA            reduce using rule 53 (dato -> TRUE .)
    LLAVERIGHT      reduce using rule 53 (dato -> TRUE .)


state 166

    (54) dato -> FALSE .

    DOSPUNTOS       reduce using rule 54 (dato -> FALSE .)
    COMA            reduce using rule 54 (dato -> FALSE .)
    LLAVERIGHT      reduce using rule 54 (dato -> FALSE .)


state 167

    (77) contScan -> COMILLA MODULO VARIABLE COMILLA COMA . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 176


state 168

    (68) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray . LLAVERIGHT
    (78) contArray -> contArray . COMA numericos

    LLAVERIGHT      shift and go to state 177
    COMA            shift and go to state 178


state 169

    (85) contArray -> term .

    LLAVERIGHT      reduce using rule 85 (contArray -> term .)
    COMA            reduce using rule 85 (contArray -> term .)


state 170

    (31) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 31 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 31 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 31 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)


state 171

    (36) else -> ELSE LLAVELEFT instrucciones . LLAVERIGHT
    (37) else -> ELSE LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 179
    RETURN          shift and go to state 180


state 172

    (38) else -> ELSE LLAVELEFT RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 181


state 173

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones . LLAVERIGHT

    LLAVERIGHT      shift and go to state 182


state 174

    (40) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .

    $end            reduce using rule 40 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    RETURN          reduce using rule 40 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 40 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)


state 175

    (42) par -> dato DOSPUNTOS . dato
    (43) par -> dato DOSPUNTOS . dato mas
    (50) dato -> . VARIABLE
    (51) dato -> . expresion
    (52) dato -> . CADENA
    (53) dato -> . TRUE
    (54) dato -> . FALSE
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (86) term -> . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VARIABLE        shift and go to state 162
    CADENA          shift and go to state 164
    TRUE            shift and go to state 165
    FALSE           shift and go to state 166
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    dato                           shift and go to state 183
    expresion                      shift and go to state 163
    numericos                      shift and go to state 79
    term                           shift and go to state 19

state 176

    (77) contScan -> COMILLA MODULO VARIABLE COMILLA COMA AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 184


state 177

    (68) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .

    $end            reduce using rule 68 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    RETURN          reduce using rule 68 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 68 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)


state 178

    (78) contArray -> contArray COMA . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    numericos                      shift and go to state 185

state 179

    (36) else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 36 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 36 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 36 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)


state 180

    (37) else -> ELSE LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 186


state 181

    (38) else -> ELSE LLAVELEFT RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 187


state 182

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 61 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 61 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 61 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)


state 183

    (42) par -> dato DOSPUNTOS dato .
    (43) par -> dato DOSPUNTOS dato . mas
    (44) mas -> . COMA par
    (45) mas -> . COMA par mas

  ! shift/reduce conflict for COMA resolved as shift
    LLAVERIGHT      reduce using rule 42 (par -> dato DOSPUNTOS dato .)
    COMA            shift and go to state 189

  ! COMA            [ reduce using rule 42 (par -> dato DOSPUNTOS dato .) ]

    mas                            shift and go to state 188

state 184

    (77) contScan -> COMILLA MODULO VARIABLE COMILLA COMA AMPERSAND VARIABLE .

    PARRIGHT        reduce using rule 77 (contScan -> COMILLA MODULO VARIABLE COMILLA COMA AMPERSAND VARIABLE .)


state 185

    (78) contArray -> contArray COMA numericos .

    LLAVERIGHT      reduce using rule 78 (contArray -> contArray COMA numericos .)
    COMA            reduce using rule 78 (contArray -> contArray COMA numericos .)


state 186

    (37) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 190


state 187

    (38) else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 38 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 38 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 38 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)


state 188

    (43) par -> dato DOSPUNTOS dato mas .

    LLAVERIGHT      reduce using rule 43 (par -> dato DOSPUNTOS dato mas .)
    COMA            reduce using rule 43 (par -> dato DOSPUNTOS dato mas .)


state 189

    (44) mas -> COMA . par
    (45) mas -> COMA . par mas
    (42) par -> . dato DOSPUNTOS dato
    (43) par -> . dato DOSPUNTOS dato mas
    (50) dato -> . VARIABLE
    (51) dato -> . expresion
    (52) dato -> . CADENA
    (53) dato -> . TRUE
    (54) dato -> . FALSE
    (79) expresion -> . expresion SUMA numericos
    (80) expresion -> . expresion RESTA numericos
    (81) expresion -> . expresion PRODUCTO numericos
    (82) expresion -> . expresion DIVISION numericos
    (83) expresion -> . expresion MODULO numericos
    (84) expresion -> . term
    (86) term -> . numericos
    (89) numericos -> . ENTERO
    (90) numericos -> . FLOTANTE

    VARIABLE        shift and go to state 162
    CADENA          shift and go to state 164
    TRUE            shift and go to state 165
    FALSE           shift and go to state 166
    ENTERO          shift and go to state 26
    FLOTANTE        shift and go to state 27

    par                            shift and go to state 191
    dato                           shift and go to state 161
    expresion                      shift and go to state 163
    numericos                      shift and go to state 79
    term                           shift and go to state 19

state 190

    (37) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 37 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 37 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 37 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 191

    (44) mas -> COMA par .
    (45) mas -> COMA par . mas
    (44) mas -> . COMA par
    (45) mas -> . COMA par mas

  ! shift/reduce conflict for COMA resolved as shift
    LLAVERIGHT      reduce using rule 44 (mas -> COMA par .)
    COMA            shift and go to state 189

  ! COMA            [ reduce using rule 44 (mas -> COMA par .) ]

    mas                            shift and go to state 192

state 192

    (45) mas -> COMA par mas .

    COMA            reduce using rule 45 (mas -> COMA par mas .)
    LLAVERIGHT      reduce using rule 45 (mas -> COMA par mas .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMA in state 135 resolved as shift
WARNING: shift/reduce conflict for COMA in state 183 resolved as shift
WARNING: shift/reduce conflict for COMA in state 191 resolved as shift
WARNING: reduce/reduce conflict in state 96 resolved using rule (contPrint -> VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 96
