Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> expresion
Rule 3     instrucciones -> condiciones
Rule 4     instrucciones -> sentenciaIf
Rule 5     instrucciones -> sentenciaFor
Rule 6     instrucciones -> print
Rule 7     instrucciones -> mapa
Rule 8     instrucciones -> puntero
Rule 9     instrucciones -> lectura
Rule 10    instrucciones -> array
Rule 11    instrucciones -> switch
Rule 12    instrucciones -> arrayAsig
Rule 13    instrucciones -> funcion
Rule 14    asignacion -> VAR VARIABLE BOOL IGUAL booleano
Rule 15    asignacion -> VAR VARIABLE INT IGUAL expresion
Rule 16    asignacion -> VAR VARIABLE FLOAT IGUAL expresion
Rule 17    asignacion -> VAR VARIABLE STRING IGUAL CADENA
Rule 18    asignacion -> VAR VARIABLE puntero IGUAL refer
Rule 19    asignacion -> VAR VARIABLE puntero
Rule 20    asignacion -> VARIABLE DECLARADOR valor
Rule 21    asignacion -> VARIABLE IGUAL valor
Rule 22    asignacion -> VARIABLE MASIGUAL expresion
Rule 23    asignacion -> VARIABLE MASIGUAL CADENA
Rule 24    asignacion -> VARIABLE MASIGUAL VARIABLE
Rule 25    asignacion -> VARIABLE MENOSIGUAL expresion
Rule 26    asignacion -> derefer IGUAL valor
Rule 27    booleano -> condicion
Rule 28    booleano -> TRUE
Rule 29    booleano -> FALSE
Rule 30    valor -> booleano
Rule 31    valor -> expresion
Rule 32    valor -> CADENA
Rule 33    valor -> VARIABLE
Rule 34    valor -> mapa
Rule 35    valor -> refer
Rule 36    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 37    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
Rule 38    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
Rule 39    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
Rule 40    sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 41    sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
Rule 42    else -> ELSE LLAVELEFT instrucciones LLAVERIGHT
Rule 43    else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 44    else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 45    else -> ELSE sentenciaIf
Rule 46    mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
Rule 47    mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
Rule 48    par -> dato DOSPUNTOS dato mas
Rule 49    par -> dato DOSPUNTOS dato
Rule 50    mas -> mas COMA dato DOSPUNTOS dato
Rule 51    mas -> COMA dato DOSPUNTOS dato
Rule 52    tipo -> BOOL
Rule 53    tipo -> INT
Rule 54    tipo -> FLOAT
Rule 55    tipo -> STRING
Rule 56    dato -> VARIABLE
Rule 57    dato -> expresion
Rule 58    dato -> CADENA
Rule 59    dato -> TRUE
Rule 60    dato -> FALSE
Rule 61    puntero -> PRODUCTO BOOL
Rule 62    puntero -> PRODUCTO INT
Rule 63    puntero -> PRODUCTO FLOAT
Rule 64    puntero -> PRODUCTO STRING
Rule 65    refer -> AMPERSAND VARIABLE
Rule 66    derefer -> PRODUCTO VARIABLE
Rule 67    sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
Rule 68    inicio -> VARIABLE DECLARADOR ENTERO
Rule 69    incrementa -> VARIABLE INCREMENTO
Rule 70    typeData -> BOOL
Rule 71    typeData -> INT
Rule 72    typeData -> FLOAT
Rule 73    typeData -> STRING
Rule 74    array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
Rule 75    arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
Rule 76    print -> IMPRIMIR PARLEFT contPrint PARRIGHT
Rule 77    contPrint -> contenido masCont
Rule 78    contPrint -> contenido
Rule 79    masCont -> masCont COMA contenido
Rule 80    masCont -> COMA contenido
Rule 81    contenido -> expresion
Rule 82    contenido -> CADENA
Rule 83    contenido -> VARIABLE
Rule 84    contenido -> <empty>
Rule 85    lectura -> SCAN PARLEFT contScan PARRIGHT
Rule 86    contScan -> AMPERSAND VARIABLE
Rule 87    contArray -> contArray COMA numericos
Rule 88    expresion -> expresion SUMA term
Rule 89    expresion -> expresion RESTA term
Rule 90    expresion -> expresion PRODUCTO term
Rule 91    expresion -> expresion DIVISION term
Rule 92    expresion -> expresion MODULO term
Rule 93    expresion -> term
Rule 94    contArray -> term
Rule 95    term -> numericos
Rule 96    factor -> numericos
Rule 97    factor -> VARIABLE
Rule 98    numericos -> ENTERO
Rule 99    numericos -> FLOTANTE
Rule 100   numericos -> PARLEFT expresion PARRIGHT
Rule 101   comparacion -> condiciones
Rule 102   comparacion -> NEGACION PARLEFT condiciones PARRIGHT
Rule 103   comparacion -> PARLEFT condiciones PARRIGHT
Rule 104   funcion -> funcion_sin_parametro
Rule 105   funcion -> funcion_parametro
Rule 106   funcion -> funcion_sin_parametro_return
Rule 107   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
Rule 108   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
Rule 109   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
Rule 110   funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 111   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
Rule 112   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
Rule 113   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
Rule 114   parametros -> VARIABLE
Rule 115   parametros -> VARIABLE COMA parametros
Rule 116   parametros -> typeData VARIABLE
Rule 117   parametros -> typeData VARIABLE COMA parametros
Rule 118   switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
Rule 119   bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK
Rule 120   bloque_switch -> CASE caso DOSPUNTOS instrucciones CONTINUE
Rule 121   bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch
Rule 122   bloque_switch -> switch_default
Rule 123   caso -> VARIABLE
Rule 124   caso -> CADENA
Rule 125   caso -> ENTERO
Rule 126   switch_default -> DEFAULT DOSPUNTOS instrucciones
Rule 127   condiciones -> factor MAYORQUE factor
Rule 128   condiciones -> factor MENORQUE factor
Rule 129   condiciones -> factor DIFERENTE factor
Rule 130   condiciones -> factor ESIGUAL factor
Rule 131   condiciones -> factor MENORIGUAL factor
Rule 132   condiciones -> factor MAYORIGUAL factor
Rule 133   comparaciones -> comparacion
Rule 134   comparaciones -> comparacion anado comparaciones
Rule 135   anado -> condicion
Rule 136   condicion -> AND
Rule 137   condicion -> OR
Rule 138   factor -> BOOL

Terminals, with rules where they appear

AMPERSAND            : 65 86
AND                  : 136
BOOL                 : 14 52 61 70 138
BREAK                : 119 121
CADENA               : 17 23 32 58 82 124
CASE                 : 119 120 121
COMA                 : 50 51 79 80 87 115 117
CONTINUE             : 120
CORCHLEFT            : 46 47 74 75
CORCHRIGHT           : 46 47 74 75
DECLARADOR           : 20 68 74
DEFAULT              : 126
DIFERENTE            : 129
DIVISION             : 91
DOSPUNTOS            : 48 49 50 51 119 120 121 126
ELSE                 : 42 43 44 45
ENTERO               : 68 74 75 98 125
ESIGUAL              : 130
FALSE                : 29 60
FLOAT                : 16 54 63 72
FLOTANTE             : 99
FOR                  : 67
FUNC                 : 107 108 109 110 111 112 113
IF                   : 36 37 38 39 40 41
IGUAL                : 14 15 16 17 18 21 26
IMPRIMIR             : 76
INCREMENTO           : 69
INT                  : 15 53 62 71
LLAVELEFT            : 36 37 38 39 40 41 42 43 44 46 47 67 74 107 108 109 110 111 112 113 118
LLAVERIGHT           : 36 37 38 39 40 41 42 43 44 46 47 67 74 107 108 109 110 111 112 113 118
MAP                  : 46 47
MASIGUAL             : 22 23 24
MAYORIGUAL           : 132
MAYORQUE             : 127
MENORIGUAL           : 131
MENORQUE             : 128
MENOSIGUAL           : 25
MODULO               : 92
NEGACION             : 102
OR                   : 137
PARLEFT              : 76 85 100 102 103 107 108 109 110 111 112 113
PARRIGHT             : 76 85 100 102 103 107 108 109 110 111 112 113
PRODUCTO             : 61 62 63 64 66 90
PUNTOCOMA            : 67 67
RESTA                : 89
RETURN               : 36 37 40 41 43 44 108 109 110 112 113
SCAN                 : 85
STRING               : 17 55 64 73
SUMA                 : 88
SWITCH               : 118
TRUE                 : 28 59
VAR                  : 14 15 16 17 18 19 75
VARIABLE             : 14 15 16 17 18 19 20 21 22 23 24 24 25 33 36 37 40 41 43 44 56 65 66 68 69 74 75 83 86 97 107 108 109 110 110 111 112 113 114 115 116 117 118 123
error                : 

Nonterminals, with rules where they appear

anado                : 134
array                : 10
arrayAsig            : 12
asignacion           : 1
bloque_switch        : 118 121
booleano             : 14 30
caso                 : 119 120 121
comparacion          : 133 134
comparaciones        : 36 37 38 39 40 41 134
condicion            : 27 135
condiciones          : 3 67 101 102 103
contArray            : 74 87
contPrint            : 76
contScan             : 85
contenido            : 77 78 79 80
dato                 : 48 48 49 49 50 50 51 51
derefer              : 26
else                 : 37 39 41
expresion            : 2 15 16 22 25 31 57 81 88 89 90 91 92 100
factor               : 127 127 128 128 129 129 130 130 131 131 132 132
funcion              : 13
funcion_parametro    : 105
funcion_sin_parametro : 104
funcion_sin_parametro_return : 106
incrementa           : 67
inicio               : 67
instrucciones        : 36 37 38 39 42 43 67 107 109 110 111 112 119 120 121 126 0
lectura              : 9
mapa                 : 7 34
mas                  : 48 50
masCont              : 77 79
numericos            : 87 95 96
par                  : 46
parametros           : 111 112 113 115 117
print                : 6
puntero              : 8 18 19
refer                : 18 35
sentenciaFor         : 5
sentenciaIf          : 4 45
switch               : 11
switch_default       : 122
term                 : 88 89 90 91 92 93 94
tipo                 : 46 46 47 47
typeData             : 74 75 116 117
valor                : 20 21 26

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    RETURN          reduce using rule 1 (instrucciones -> asignacion .)
    LLAVERIGHT      reduce using rule 1 (instrucciones -> asignacion .)
    BREAK           reduce using rule 1 (instrucciones -> asignacion .)
    CONTINUE        reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 2 (instrucciones -> expresion .)
    RETURN          reduce using rule 2 (instrucciones -> expresion .)
    LLAVERIGHT      reduce using rule 2 (instrucciones -> expresion .)
    BREAK           reduce using rule 2 (instrucciones -> expresion .)
    CONTINUE        reduce using rule 2 (instrucciones -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 4

    (3) instrucciones -> condiciones .

    $end            reduce using rule 3 (instrucciones -> condiciones .)
    RETURN          reduce using rule 3 (instrucciones -> condiciones .)
    LLAVERIGHT      reduce using rule 3 (instrucciones -> condiciones .)
    BREAK           reduce using rule 3 (instrucciones -> condiciones .)
    CONTINUE        reduce using rule 3 (instrucciones -> condiciones .)


state 5

    (4) instrucciones -> sentenciaIf .

    $end            reduce using rule 4 (instrucciones -> sentenciaIf .)
    RETURN          reduce using rule 4 (instrucciones -> sentenciaIf .)
    LLAVERIGHT      reduce using rule 4 (instrucciones -> sentenciaIf .)
    BREAK           reduce using rule 4 (instrucciones -> sentenciaIf .)
    CONTINUE        reduce using rule 4 (instrucciones -> sentenciaIf .)


state 6

    (5) instrucciones -> sentenciaFor .

    $end            reduce using rule 5 (instrucciones -> sentenciaFor .)
    RETURN          reduce using rule 5 (instrucciones -> sentenciaFor .)
    LLAVERIGHT      reduce using rule 5 (instrucciones -> sentenciaFor .)
    BREAK           reduce using rule 5 (instrucciones -> sentenciaFor .)
    CONTINUE        reduce using rule 5 (instrucciones -> sentenciaFor .)


state 7

    (6) instrucciones -> print .

    $end            reduce using rule 6 (instrucciones -> print .)
    RETURN          reduce using rule 6 (instrucciones -> print .)
    LLAVERIGHT      reduce using rule 6 (instrucciones -> print .)
    BREAK           reduce using rule 6 (instrucciones -> print .)
    CONTINUE        reduce using rule 6 (instrucciones -> print .)


state 8

    (7) instrucciones -> mapa .

    $end            reduce using rule 7 (instrucciones -> mapa .)
    RETURN          reduce using rule 7 (instrucciones -> mapa .)
    LLAVERIGHT      reduce using rule 7 (instrucciones -> mapa .)
    BREAK           reduce using rule 7 (instrucciones -> mapa .)
    CONTINUE        reduce using rule 7 (instrucciones -> mapa .)


state 9

    (8) instrucciones -> puntero .

    $end            reduce using rule 8 (instrucciones -> puntero .)
    RETURN          reduce using rule 8 (instrucciones -> puntero .)
    LLAVERIGHT      reduce using rule 8 (instrucciones -> puntero .)
    BREAK           reduce using rule 8 (instrucciones -> puntero .)
    CONTINUE        reduce using rule 8 (instrucciones -> puntero .)


state 10

    (9) instrucciones -> lectura .

    $end            reduce using rule 9 (instrucciones -> lectura .)
    RETURN          reduce using rule 9 (instrucciones -> lectura .)
    LLAVERIGHT      reduce using rule 9 (instrucciones -> lectura .)
    BREAK           reduce using rule 9 (instrucciones -> lectura .)
    CONTINUE        reduce using rule 9 (instrucciones -> lectura .)


state 11

    (10) instrucciones -> array .

    $end            reduce using rule 10 (instrucciones -> array .)
    RETURN          reduce using rule 10 (instrucciones -> array .)
    LLAVERIGHT      reduce using rule 10 (instrucciones -> array .)
    BREAK           reduce using rule 10 (instrucciones -> array .)
    CONTINUE        reduce using rule 10 (instrucciones -> array .)


state 12

    (11) instrucciones -> switch .

    $end            reduce using rule 11 (instrucciones -> switch .)
    RETURN          reduce using rule 11 (instrucciones -> switch .)
    LLAVERIGHT      reduce using rule 11 (instrucciones -> switch .)
    BREAK           reduce using rule 11 (instrucciones -> switch .)
    CONTINUE        reduce using rule 11 (instrucciones -> switch .)


state 13

    (12) instrucciones -> arrayAsig .

    $end            reduce using rule 12 (instrucciones -> arrayAsig .)
    RETURN          reduce using rule 12 (instrucciones -> arrayAsig .)
    LLAVERIGHT      reduce using rule 12 (instrucciones -> arrayAsig .)
    BREAK           reduce using rule 12 (instrucciones -> arrayAsig .)
    CONTINUE        reduce using rule 12 (instrucciones -> arrayAsig .)


state 14

    (13) instrucciones -> funcion .

    $end            reduce using rule 13 (instrucciones -> funcion .)
    RETURN          reduce using rule 13 (instrucciones -> funcion .)
    LLAVERIGHT      reduce using rule 13 (instrucciones -> funcion .)
    BREAK           reduce using rule 13 (instrucciones -> funcion .)
    CONTINUE        reduce using rule 13 (instrucciones -> funcion .)


state 15

    (14) asignacion -> VAR . VARIABLE BOOL IGUAL booleano
    (15) asignacion -> VAR . VARIABLE INT IGUAL expresion
    (16) asignacion -> VAR . VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> VAR . VARIABLE STRING IGUAL CADENA
    (18) asignacion -> VAR . VARIABLE puntero IGUAL refer
    (19) asignacion -> VAR . VARIABLE puntero
    (75) arrayAsig -> VAR . VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData

    VARIABLE        shift and go to state 41


state 16

    (20) asignacion -> VARIABLE . DECLARADOR valor
    (21) asignacion -> VARIABLE . IGUAL valor
    (22) asignacion -> VARIABLE . MASIGUAL expresion
    (23) asignacion -> VARIABLE . MASIGUAL CADENA
    (24) asignacion -> VARIABLE . MASIGUAL VARIABLE
    (25) asignacion -> VARIABLE . MENOSIGUAL expresion
    (74) array -> VARIABLE . DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (97) factor -> VARIABLE .

    DECLARADOR      shift and go to state 42
    IGUAL           shift and go to state 43
    MASIGUAL        shift and go to state 44
    MENOSIGUAL      shift and go to state 45
    MAYORQUE        reduce using rule 97 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 97 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 97 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 97 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 97 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 97 (factor -> VARIABLE .)


state 17

    (138) factor -> BOOL .

    MAYORQUE        reduce using rule 138 (factor -> BOOL .)
    MENORQUE        reduce using rule 138 (factor -> BOOL .)
    DIFERENTE       reduce using rule 138 (factor -> BOOL .)
    ESIGUAL         reduce using rule 138 (factor -> BOOL .)
    MENORIGUAL      reduce using rule 138 (factor -> BOOL .)
    MAYORIGUAL      reduce using rule 138 (factor -> BOOL .)
    $end            reduce using rule 138 (factor -> BOOL .)
    AND             reduce using rule 138 (factor -> BOOL .)
    OR              reduce using rule 138 (factor -> BOOL .)
    LLAVELEFT       reduce using rule 138 (factor -> BOOL .)
    PARRIGHT        reduce using rule 138 (factor -> BOOL .)
    RETURN          reduce using rule 138 (factor -> BOOL .)
    LLAVERIGHT      reduce using rule 138 (factor -> BOOL .)
    PUNTOCOMA       reduce using rule 138 (factor -> BOOL .)
    BREAK           reduce using rule 138 (factor -> BOOL .)
    CONTINUE        reduce using rule 138 (factor -> BOOL .)


state 18

    (26) asignacion -> derefer . IGUAL valor

    IGUAL           shift and go to state 46


state 19

    (93) expresion -> term .

    SUMA            reduce using rule 93 (expresion -> term .)
    RESTA           reduce using rule 93 (expresion -> term .)
    PRODUCTO        reduce using rule 93 (expresion -> term .)
    DIVISION        reduce using rule 93 (expresion -> term .)
    MODULO          reduce using rule 93 (expresion -> term .)
    $end            reduce using rule 93 (expresion -> term .)
    PARRIGHT        reduce using rule 93 (expresion -> term .)
    RETURN          reduce using rule 93 (expresion -> term .)
    LLAVERIGHT      reduce using rule 93 (expresion -> term .)
    BREAK           reduce using rule 93 (expresion -> term .)
    CONTINUE        reduce using rule 93 (expresion -> term .)
    COMA            reduce using rule 93 (expresion -> term .)
    DOSPUNTOS       reduce using rule 93 (expresion -> term .)


state 20

    (61) puntero -> PRODUCTO . BOOL
    (62) puntero -> PRODUCTO . INT
    (63) puntero -> PRODUCTO . FLOAT
    (64) puntero -> PRODUCTO . STRING
    (66) derefer -> PRODUCTO . VARIABLE

    BOOL            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    STRING          shift and go to state 50
    VARIABLE        shift and go to state 51


state 21

    (127) condiciones -> factor . MAYORQUE factor
    (128) condiciones -> factor . MENORQUE factor
    (129) condiciones -> factor . DIFERENTE factor
    (130) condiciones -> factor . ESIGUAL factor
    (131) condiciones -> factor . MENORIGUAL factor
    (132) condiciones -> factor . MAYORIGUAL factor

    MAYORQUE        shift and go to state 52
    MENORQUE        shift and go to state 53
    DIFERENTE       shift and go to state 54
    ESIGUAL         shift and go to state 55
    MENORIGUAL      shift and go to state 56
    MAYORIGUAL      shift and go to state 57


state 22

    (36) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> IF . comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF . comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (133) comparaciones -> . comparacion
    (134) comparaciones -> . comparacion anado comparaciones
    (101) comparacion -> . condiciones
    (102) comparacion -> . NEGACION PARLEFT condiciones PARRIGHT
    (103) comparacion -> . PARLEFT condiciones PARRIGHT
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    NEGACION        shift and go to state 62
    PARLEFT         shift and go to state 63
    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35

    comparaciones                  shift and go to state 58
    comparacion                    shift and go to state 60
    condiciones                    shift and go to state 61
    factor                         shift and go to state 21
    numericos                      shift and go to state 64

state 23

    (67) sentenciaFor -> FOR . inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (68) inicio -> . VARIABLE DECLARADOR ENTERO

    VARIABLE        shift and go to state 66

    inicio                         shift and go to state 65

state 24

    (76) print -> IMPRIMIR . PARLEFT contPrint PARRIGHT

    PARLEFT         shift and go to state 67


state 25

    (100) numericos -> PARLEFT . expresion PARRIGHT
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    expresion                      shift and go to state 68
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 26

    (46) mapa -> MAP . CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP . CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT

    CORCHLEFT       shift and go to state 70


state 27

    (85) lectura -> SCAN . PARLEFT contScan PARRIGHT

    PARLEFT         shift and go to state 71


state 28

    (98) numericos -> ENTERO .

    SUMA            reduce using rule 98 (numericos -> ENTERO .)
    RESTA           reduce using rule 98 (numericos -> ENTERO .)
    PRODUCTO        reduce using rule 98 (numericos -> ENTERO .)
    DIVISION        reduce using rule 98 (numericos -> ENTERO .)
    MODULO          reduce using rule 98 (numericos -> ENTERO .)
    $end            reduce using rule 98 (numericos -> ENTERO .)
    MAYORQUE        reduce using rule 98 (numericos -> ENTERO .)
    MENORQUE        reduce using rule 98 (numericos -> ENTERO .)
    DIFERENTE       reduce using rule 98 (numericos -> ENTERO .)
    ESIGUAL         reduce using rule 98 (numericos -> ENTERO .)
    MENORIGUAL      reduce using rule 98 (numericos -> ENTERO .)
    MAYORIGUAL      reduce using rule 98 (numericos -> ENTERO .)
    PARRIGHT        reduce using rule 98 (numericos -> ENTERO .)
    RETURN          reduce using rule 98 (numericos -> ENTERO .)
    LLAVERIGHT      reduce using rule 98 (numericos -> ENTERO .)
    BREAK           reduce using rule 98 (numericos -> ENTERO .)
    CONTINUE        reduce using rule 98 (numericos -> ENTERO .)
    COMA            reduce using rule 98 (numericos -> ENTERO .)
    DOSPUNTOS       reduce using rule 98 (numericos -> ENTERO .)
    AND             reduce using rule 98 (numericos -> ENTERO .)
    OR              reduce using rule 98 (numericos -> ENTERO .)
    LLAVELEFT       reduce using rule 98 (numericos -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (numericos -> ENTERO .)


state 29

    (118) switch -> SWITCH . VARIABLE LLAVELEFT bloque_switch LLAVERIGHT

    VARIABLE        shift and go to state 72


state 30

    (104) funcion -> funcion_sin_parametro .

    $end            reduce using rule 104 (funcion -> funcion_sin_parametro .)
    RETURN          reduce using rule 104 (funcion -> funcion_sin_parametro .)
    LLAVERIGHT      reduce using rule 104 (funcion -> funcion_sin_parametro .)
    BREAK           reduce using rule 104 (funcion -> funcion_sin_parametro .)
    CONTINUE        reduce using rule 104 (funcion -> funcion_sin_parametro .)


state 31

    (105) funcion -> funcion_parametro .

    $end            reduce using rule 105 (funcion -> funcion_parametro .)
    RETURN          reduce using rule 105 (funcion -> funcion_parametro .)
    LLAVERIGHT      reduce using rule 105 (funcion -> funcion_parametro .)
    BREAK           reduce using rule 105 (funcion -> funcion_parametro .)
    CONTINUE        reduce using rule 105 (funcion -> funcion_parametro .)


state 32

    (106) funcion -> funcion_sin_parametro_return .

    $end            reduce using rule 106 (funcion -> funcion_sin_parametro_return .)
    RETURN          reduce using rule 106 (funcion -> funcion_sin_parametro_return .)
    LLAVERIGHT      reduce using rule 106 (funcion -> funcion_sin_parametro_return .)
    BREAK           reduce using rule 106 (funcion -> funcion_sin_parametro_return .)
    CONTINUE        reduce using rule 106 (funcion -> funcion_sin_parametro_return .)


state 33

    (95) term -> numericos .
    (96) factor -> numericos .

    SUMA            reduce using rule 95 (term -> numericos .)
    RESTA           reduce using rule 95 (term -> numericos .)
    PRODUCTO        reduce using rule 95 (term -> numericos .)
    DIVISION        reduce using rule 95 (term -> numericos .)
    MODULO          reduce using rule 95 (term -> numericos .)
    $end            reduce using rule 95 (term -> numericos .)
    RETURN          reduce using rule 95 (term -> numericos .)
    LLAVERIGHT      reduce using rule 95 (term -> numericos .)
    BREAK           reduce using rule 95 (term -> numericos .)
    CONTINUE        reduce using rule 95 (term -> numericos .)
    MAYORQUE        reduce using rule 96 (factor -> numericos .)
    MENORQUE        reduce using rule 96 (factor -> numericos .)
    DIFERENTE       reduce using rule 96 (factor -> numericos .)
    ESIGUAL         reduce using rule 96 (factor -> numericos .)
    MENORIGUAL      reduce using rule 96 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 96 (factor -> numericos .)


state 34

    (107) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 73


state 35

    (99) numericos -> FLOTANTE .

    SUMA            reduce using rule 99 (numericos -> FLOTANTE .)
    RESTA           reduce using rule 99 (numericos -> FLOTANTE .)
    PRODUCTO        reduce using rule 99 (numericos -> FLOTANTE .)
    DIVISION        reduce using rule 99 (numericos -> FLOTANTE .)
    MODULO          reduce using rule 99 (numericos -> FLOTANTE .)
    $end            reduce using rule 99 (numericos -> FLOTANTE .)
    MAYORQUE        reduce using rule 99 (numericos -> FLOTANTE .)
    MENORQUE        reduce using rule 99 (numericos -> FLOTANTE .)
    DIFERENTE       reduce using rule 99 (numericos -> FLOTANTE .)
    ESIGUAL         reduce using rule 99 (numericos -> FLOTANTE .)
    MENORIGUAL      reduce using rule 99 (numericos -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 99 (numericos -> FLOTANTE .)
    PARRIGHT        reduce using rule 99 (numericos -> FLOTANTE .)
    RETURN          reduce using rule 99 (numericos -> FLOTANTE .)
    LLAVERIGHT      reduce using rule 99 (numericos -> FLOTANTE .)
    BREAK           reduce using rule 99 (numericos -> FLOTANTE .)
    CONTINUE        reduce using rule 99 (numericos -> FLOTANTE .)
    COMA            reduce using rule 99 (numericos -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 99 (numericos -> FLOTANTE .)
    AND             reduce using rule 99 (numericos -> FLOTANTE .)
    OR              reduce using rule 99 (numericos -> FLOTANTE .)
    LLAVELEFT       reduce using rule 99 (numericos -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 99 (numericos -> FLOTANTE .)


state 36

    (88) expresion -> expresion SUMA . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    term                           shift and go to state 74
    numericos                      shift and go to state 69

state 37

    (89) expresion -> expresion RESTA . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    term                           shift and go to state 75
    numericos                      shift and go to state 69

state 38

    (90) expresion -> expresion PRODUCTO . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    term                           shift and go to state 76
    numericos                      shift and go to state 69

state 39

    (91) expresion -> expresion DIVISION . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    term                           shift and go to state 77
    numericos                      shift and go to state 69

state 40

    (92) expresion -> expresion MODULO . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    term                           shift and go to state 78
    numericos                      shift and go to state 69

state 41

    (14) asignacion -> VAR VARIABLE . BOOL IGUAL booleano
    (15) asignacion -> VAR VARIABLE . INT IGUAL expresion
    (16) asignacion -> VAR VARIABLE . FLOAT IGUAL expresion
    (17) asignacion -> VAR VARIABLE . STRING IGUAL CADENA
    (18) asignacion -> VAR VARIABLE . puntero IGUAL refer
    (19) asignacion -> VAR VARIABLE . puntero
    (75) arrayAsig -> VAR VARIABLE . CORCHLEFT ENTERO CORCHRIGHT typeData
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING

    BOOL            shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    STRING          shift and go to state 82
    CORCHLEFT       shift and go to state 84
    PRODUCTO        shift and go to state 85

    puntero                        shift and go to state 83

state 42

    (20) asignacion -> VARIABLE DECLARADOR . valor
    (74) array -> VARIABLE DECLARADOR . CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (30) valor -> . booleano
    (31) valor -> . expresion
    (32) valor -> . CADENA
    (33) valor -> . VARIABLE
    (34) valor -> . mapa
    (35) valor -> . refer
    (27) booleano -> . condicion
    (28) booleano -> . TRUE
    (29) booleano -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (65) refer -> . AMPERSAND VARIABLE
    (136) condicion -> . AND
    (137) condicion -> . OR
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CORCHLEFT       shift and go to state 88
    CADENA          shift and go to state 91
    VARIABLE        shift and go to state 86
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    MAP             shift and go to state 26
    AMPERSAND       shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    valor                          shift and go to state 87
    booleano                       shift and go to state 89
    expresion                      shift and go to state 90
    mapa                           shift and go to state 92
    refer                          shift and go to state 93
    condicion                      shift and go to state 94
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 43

    (21) asignacion -> VARIABLE IGUAL . valor
    (30) valor -> . booleano
    (31) valor -> . expresion
    (32) valor -> . CADENA
    (33) valor -> . VARIABLE
    (34) valor -> . mapa
    (35) valor -> . refer
    (27) booleano -> . condicion
    (28) booleano -> . TRUE
    (29) booleano -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (65) refer -> . AMPERSAND VARIABLE
    (136) condicion -> . AND
    (137) condicion -> . OR
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 91
    VARIABLE        shift and go to state 86
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    MAP             shift and go to state 26
    AMPERSAND       shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    valor                          shift and go to state 100
    booleano                       shift and go to state 89
    expresion                      shift and go to state 90
    mapa                           shift and go to state 92
    refer                          shift and go to state 93
    condicion                      shift and go to state 94
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 44

    (22) asignacion -> VARIABLE MASIGUAL . expresion
    (23) asignacion -> VARIABLE MASIGUAL . CADENA
    (24) asignacion -> VARIABLE MASIGUAL . VARIABLE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 103
    VARIABLE        shift and go to state 101
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    expresion                      shift and go to state 102
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 45

    (25) asignacion -> VARIABLE MENOSIGUAL . expresion
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    expresion                      shift and go to state 104
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 46

    (26) asignacion -> derefer IGUAL . valor
    (30) valor -> . booleano
    (31) valor -> . expresion
    (32) valor -> . CADENA
    (33) valor -> . VARIABLE
    (34) valor -> . mapa
    (35) valor -> . refer
    (27) booleano -> . condicion
    (28) booleano -> . TRUE
    (29) booleano -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (65) refer -> . AMPERSAND VARIABLE
    (136) condicion -> . AND
    (137) condicion -> . OR
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 91
    VARIABLE        shift and go to state 86
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    MAP             shift and go to state 26
    AMPERSAND       shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    valor                          shift and go to state 105
    booleano                       shift and go to state 89
    expresion                      shift and go to state 90
    mapa                           shift and go to state 92
    refer                          shift and go to state 93
    condicion                      shift and go to state 94
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 47

    (61) puntero -> PRODUCTO BOOL .

    $end            reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    IGUAL           reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    RETURN          reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    LLAVERIGHT      reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    BREAK           reduce using rule 61 (puntero -> PRODUCTO BOOL .)
    CONTINUE        reduce using rule 61 (puntero -> PRODUCTO BOOL .)


state 48

    (62) puntero -> PRODUCTO INT .

    $end            reduce using rule 62 (puntero -> PRODUCTO INT .)
    IGUAL           reduce using rule 62 (puntero -> PRODUCTO INT .)
    RETURN          reduce using rule 62 (puntero -> PRODUCTO INT .)
    LLAVERIGHT      reduce using rule 62 (puntero -> PRODUCTO INT .)
    BREAK           reduce using rule 62 (puntero -> PRODUCTO INT .)
    CONTINUE        reduce using rule 62 (puntero -> PRODUCTO INT .)


state 49

    (63) puntero -> PRODUCTO FLOAT .

    $end            reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    IGUAL           reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    RETURN          reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    LLAVERIGHT      reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    BREAK           reduce using rule 63 (puntero -> PRODUCTO FLOAT .)
    CONTINUE        reduce using rule 63 (puntero -> PRODUCTO FLOAT .)


state 50

    (64) puntero -> PRODUCTO STRING .

    $end            reduce using rule 64 (puntero -> PRODUCTO STRING .)
    IGUAL           reduce using rule 64 (puntero -> PRODUCTO STRING .)
    RETURN          reduce using rule 64 (puntero -> PRODUCTO STRING .)
    LLAVERIGHT      reduce using rule 64 (puntero -> PRODUCTO STRING .)
    BREAK           reduce using rule 64 (puntero -> PRODUCTO STRING .)
    CONTINUE        reduce using rule 64 (puntero -> PRODUCTO STRING .)


state 51

    (66) derefer -> PRODUCTO VARIABLE .

    IGUAL           reduce using rule 66 (derefer -> PRODUCTO VARIABLE .)


state 52

    (127) condiciones -> factor MAYORQUE . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 106
    numericos                      shift and go to state 64

state 53

    (128) condiciones -> factor MENORQUE . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 107
    numericos                      shift and go to state 64

state 54

    (129) condiciones -> factor DIFERENTE . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 108
    numericos                      shift and go to state 64

state 55

    (130) condiciones -> factor ESIGUAL . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 109
    numericos                      shift and go to state 64

state 56

    (131) condiciones -> factor MENORIGUAL . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 110
    numericos                      shift and go to state 64

state 57

    (132) condiciones -> factor MAYORIGUAL . factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    factor                         shift and go to state 111
    numericos                      shift and go to state 64

state 58

    (36) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> IF comparaciones . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones . LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 112


state 59

    (97) factor -> VARIABLE .

    MAYORQUE        reduce using rule 97 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 97 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 97 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 97 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 97 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 97 (factor -> VARIABLE .)
    $end            reduce using rule 97 (factor -> VARIABLE .)
    AND             reduce using rule 97 (factor -> VARIABLE .)
    OR              reduce using rule 97 (factor -> VARIABLE .)
    LLAVELEFT       reduce using rule 97 (factor -> VARIABLE .)
    PARRIGHT        reduce using rule 97 (factor -> VARIABLE .)
    RETURN          reduce using rule 97 (factor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 97 (factor -> VARIABLE .)
    PUNTOCOMA       reduce using rule 97 (factor -> VARIABLE .)
    BREAK           reduce using rule 97 (factor -> VARIABLE .)
    CONTINUE        reduce using rule 97 (factor -> VARIABLE .)


state 60

    (133) comparaciones -> comparacion .
    (134) comparaciones -> comparacion . anado comparaciones
    (135) anado -> . condicion
    (136) condicion -> . AND
    (137) condicion -> . OR

    LLAVELEFT       reduce using rule 133 (comparaciones -> comparacion .)
    AND             shift and go to state 98
    OR              shift and go to state 99

    anado                          shift and go to state 113
    condicion                      shift and go to state 114

state 61

    (101) comparacion -> condiciones .

    AND             reduce using rule 101 (comparacion -> condiciones .)
    OR              reduce using rule 101 (comparacion -> condiciones .)
    LLAVELEFT       reduce using rule 101 (comparacion -> condiciones .)


state 62

    (102) comparacion -> NEGACION . PARLEFT condiciones PARRIGHT

    PARLEFT         shift and go to state 115


state 63

    (103) comparacion -> PARLEFT . condiciones PARRIGHT
    (100) numericos -> PARLEFT . expresion PARRIGHT
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    condiciones                    shift and go to state 116
    expresion                      shift and go to state 68
    factor                         shift and go to state 21
    term                           shift and go to state 19
    numericos                      shift and go to state 117

state 64

    (96) factor -> numericos .

    MAYORQUE        reduce using rule 96 (factor -> numericos .)
    MENORQUE        reduce using rule 96 (factor -> numericos .)
    DIFERENTE       reduce using rule 96 (factor -> numericos .)
    ESIGUAL         reduce using rule 96 (factor -> numericos .)
    MENORIGUAL      reduce using rule 96 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 96 (factor -> numericos .)
    $end            reduce using rule 96 (factor -> numericos .)
    AND             reduce using rule 96 (factor -> numericos .)
    OR              reduce using rule 96 (factor -> numericos .)
    LLAVELEFT       reduce using rule 96 (factor -> numericos .)
    PARRIGHT        reduce using rule 96 (factor -> numericos .)
    RETURN          reduce using rule 96 (factor -> numericos .)
    LLAVERIGHT      reduce using rule 96 (factor -> numericos .)
    PUNTOCOMA       reduce using rule 96 (factor -> numericos .)
    BREAK           reduce using rule 96 (factor -> numericos .)
    CONTINUE        reduce using rule 96 (factor -> numericos .)


state 65

    (67) sentenciaFor -> FOR inicio . PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 118


state 66

    (68) inicio -> VARIABLE . DECLARADOR ENTERO

    DECLARADOR      shift and go to state 119


state 67

    (76) print -> IMPRIMIR PARLEFT . contPrint PARRIGHT
    (77) contPrint -> . contenido masCont
    (78) contPrint -> . contenido
    (81) contenido -> . expresion
    (82) contenido -> . CADENA
    (83) contenido -> . VARIABLE
    (84) contenido -> .
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 123
    VARIABLE        shift and go to state 124
    COMA            reduce using rule 84 (contenido -> .)
    PARRIGHT        reduce using rule 84 (contenido -> .)
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    contPrint                      shift and go to state 120
    contenido                      shift and go to state 121
    expresion                      shift and go to state 122
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 68

    (100) numericos -> PARLEFT expresion . PARRIGHT
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    PARRIGHT        shift and go to state 125
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 69

    (95) term -> numericos .

    PARRIGHT        reduce using rule 95 (term -> numericos .)
    SUMA            reduce using rule 95 (term -> numericos .)
    RESTA           reduce using rule 95 (term -> numericos .)
    PRODUCTO        reduce using rule 95 (term -> numericos .)
    DIVISION        reduce using rule 95 (term -> numericos .)
    MODULO          reduce using rule 95 (term -> numericos .)
    $end            reduce using rule 95 (term -> numericos .)
    RETURN          reduce using rule 95 (term -> numericos .)
    LLAVERIGHT      reduce using rule 95 (term -> numericos .)
    BREAK           reduce using rule 95 (term -> numericos .)
    CONTINUE        reduce using rule 95 (term -> numericos .)
    COMA            reduce using rule 95 (term -> numericos .)
    DOSPUNTOS       reduce using rule 95 (term -> numericos .)


state 70

    (46) mapa -> MAP CORCHLEFT . tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT . tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (52) tipo -> . BOOL
    (53) tipo -> . INT
    (54) tipo -> . FLOAT
    (55) tipo -> . STRING

    BOOL            shift and go to state 127
    INT             shift and go to state 128
    FLOAT           shift and go to state 129
    STRING          shift and go to state 130

    tipo                           shift and go to state 126

state 71

    (85) lectura -> SCAN PARLEFT . contScan PARRIGHT
    (86) contScan -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 132

    contScan                       shift and go to state 131

state 72

    (118) switch -> SWITCH VARIABLE . LLAVELEFT bloque_switch LLAVERIGHT

    LLAVELEFT       shift and go to state 133


state 73

    (107) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    PARLEFT         shift and go to state 134


state 74

    (88) expresion -> expresion SUMA term .

    SUMA            reduce using rule 88 (expresion -> expresion SUMA term .)
    RESTA           reduce using rule 88 (expresion -> expresion SUMA term .)
    PRODUCTO        reduce using rule 88 (expresion -> expresion SUMA term .)
    DIVISION        reduce using rule 88 (expresion -> expresion SUMA term .)
    MODULO          reduce using rule 88 (expresion -> expresion SUMA term .)
    $end            reduce using rule 88 (expresion -> expresion SUMA term .)
    PARRIGHT        reduce using rule 88 (expresion -> expresion SUMA term .)
    RETURN          reduce using rule 88 (expresion -> expresion SUMA term .)
    LLAVERIGHT      reduce using rule 88 (expresion -> expresion SUMA term .)
    BREAK           reduce using rule 88 (expresion -> expresion SUMA term .)
    CONTINUE        reduce using rule 88 (expresion -> expresion SUMA term .)
    COMA            reduce using rule 88 (expresion -> expresion SUMA term .)
    DOSPUNTOS       reduce using rule 88 (expresion -> expresion SUMA term .)


state 75

    (89) expresion -> expresion RESTA term .

    SUMA            reduce using rule 89 (expresion -> expresion RESTA term .)
    RESTA           reduce using rule 89 (expresion -> expresion RESTA term .)
    PRODUCTO        reduce using rule 89 (expresion -> expresion RESTA term .)
    DIVISION        reduce using rule 89 (expresion -> expresion RESTA term .)
    MODULO          reduce using rule 89 (expresion -> expresion RESTA term .)
    $end            reduce using rule 89 (expresion -> expresion RESTA term .)
    PARRIGHT        reduce using rule 89 (expresion -> expresion RESTA term .)
    RETURN          reduce using rule 89 (expresion -> expresion RESTA term .)
    LLAVERIGHT      reduce using rule 89 (expresion -> expresion RESTA term .)
    BREAK           reduce using rule 89 (expresion -> expresion RESTA term .)
    CONTINUE        reduce using rule 89 (expresion -> expresion RESTA term .)
    COMA            reduce using rule 89 (expresion -> expresion RESTA term .)
    DOSPUNTOS       reduce using rule 89 (expresion -> expresion RESTA term .)


state 76

    (90) expresion -> expresion PRODUCTO term .

    SUMA            reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    RESTA           reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    PRODUCTO        reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    DIVISION        reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    MODULO          reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    $end            reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    PARRIGHT        reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    RETURN          reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    LLAVERIGHT      reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    BREAK           reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    CONTINUE        reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    COMA            reduce using rule 90 (expresion -> expresion PRODUCTO term .)
    DOSPUNTOS       reduce using rule 90 (expresion -> expresion PRODUCTO term .)


state 77

    (91) expresion -> expresion DIVISION term .

    SUMA            reduce using rule 91 (expresion -> expresion DIVISION term .)
    RESTA           reduce using rule 91 (expresion -> expresion DIVISION term .)
    PRODUCTO        reduce using rule 91 (expresion -> expresion DIVISION term .)
    DIVISION        reduce using rule 91 (expresion -> expresion DIVISION term .)
    MODULO          reduce using rule 91 (expresion -> expresion DIVISION term .)
    $end            reduce using rule 91 (expresion -> expresion DIVISION term .)
    PARRIGHT        reduce using rule 91 (expresion -> expresion DIVISION term .)
    RETURN          reduce using rule 91 (expresion -> expresion DIVISION term .)
    LLAVERIGHT      reduce using rule 91 (expresion -> expresion DIVISION term .)
    BREAK           reduce using rule 91 (expresion -> expresion DIVISION term .)
    CONTINUE        reduce using rule 91 (expresion -> expresion DIVISION term .)
    COMA            reduce using rule 91 (expresion -> expresion DIVISION term .)
    DOSPUNTOS       reduce using rule 91 (expresion -> expresion DIVISION term .)


state 78

    (92) expresion -> expresion MODULO term .

    SUMA            reduce using rule 92 (expresion -> expresion MODULO term .)
    RESTA           reduce using rule 92 (expresion -> expresion MODULO term .)
    PRODUCTO        reduce using rule 92 (expresion -> expresion MODULO term .)
    DIVISION        reduce using rule 92 (expresion -> expresion MODULO term .)
    MODULO          reduce using rule 92 (expresion -> expresion MODULO term .)
    $end            reduce using rule 92 (expresion -> expresion MODULO term .)
    PARRIGHT        reduce using rule 92 (expresion -> expresion MODULO term .)
    RETURN          reduce using rule 92 (expresion -> expresion MODULO term .)
    LLAVERIGHT      reduce using rule 92 (expresion -> expresion MODULO term .)
    BREAK           reduce using rule 92 (expresion -> expresion MODULO term .)
    CONTINUE        reduce using rule 92 (expresion -> expresion MODULO term .)
    COMA            reduce using rule 92 (expresion -> expresion MODULO term .)
    DOSPUNTOS       reduce using rule 92 (expresion -> expresion MODULO term .)


state 79

    (14) asignacion -> VAR VARIABLE BOOL . IGUAL booleano

    IGUAL           shift and go to state 135


state 80

    (15) asignacion -> VAR VARIABLE INT . IGUAL expresion

    IGUAL           shift and go to state 136


state 81

    (16) asignacion -> VAR VARIABLE FLOAT . IGUAL expresion

    IGUAL           shift and go to state 137


state 82

    (17) asignacion -> VAR VARIABLE STRING . IGUAL CADENA

    IGUAL           shift and go to state 138


state 83

    (18) asignacion -> VAR VARIABLE puntero . IGUAL refer
    (19) asignacion -> VAR VARIABLE puntero .

    IGUAL           shift and go to state 139
    $end            reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    RETURN          reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    LLAVERIGHT      reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    BREAK           reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)
    CONTINUE        reduce using rule 19 (asignacion -> VAR VARIABLE puntero .)


state 84

    (75) arrayAsig -> VAR VARIABLE CORCHLEFT . ENTERO CORCHRIGHT typeData

    ENTERO          shift and go to state 140


state 85

    (61) puntero -> PRODUCTO . BOOL
    (62) puntero -> PRODUCTO . INT
    (63) puntero -> PRODUCTO . FLOAT
    (64) puntero -> PRODUCTO . STRING

    BOOL            shift and go to state 47
    INT             shift and go to state 48
    FLOAT           shift and go to state 49
    STRING          shift and go to state 50


state 86

    (33) valor -> VARIABLE .

    $end            reduce using rule 33 (valor -> VARIABLE .)
    RETURN          reduce using rule 33 (valor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 33 (valor -> VARIABLE .)
    BREAK           reduce using rule 33 (valor -> VARIABLE .)
    CONTINUE        reduce using rule 33 (valor -> VARIABLE .)


state 87

    (20) asignacion -> VARIABLE DECLARADOR valor .

    $end            reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    RETURN          reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    LLAVERIGHT      reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    BREAK           reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    CONTINUE        reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)


state 88

    (74) array -> VARIABLE DECLARADOR CORCHLEFT . ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    ENTERO          shift and go to state 141


state 89

    (30) valor -> booleano .

    $end            reduce using rule 30 (valor -> booleano .)
    RETURN          reduce using rule 30 (valor -> booleano .)
    LLAVERIGHT      reduce using rule 30 (valor -> booleano .)
    BREAK           reduce using rule 30 (valor -> booleano .)
    CONTINUE        reduce using rule 30 (valor -> booleano .)


state 90

    (31) valor -> expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 31 (valor -> expresion .)
    RETURN          reduce using rule 31 (valor -> expresion .)
    LLAVERIGHT      reduce using rule 31 (valor -> expresion .)
    BREAK           reduce using rule 31 (valor -> expresion .)
    CONTINUE        reduce using rule 31 (valor -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 91

    (32) valor -> CADENA .

    $end            reduce using rule 32 (valor -> CADENA .)
    RETURN          reduce using rule 32 (valor -> CADENA .)
    LLAVERIGHT      reduce using rule 32 (valor -> CADENA .)
    BREAK           reduce using rule 32 (valor -> CADENA .)
    CONTINUE        reduce using rule 32 (valor -> CADENA .)


state 92

    (34) valor -> mapa .

    $end            reduce using rule 34 (valor -> mapa .)
    RETURN          reduce using rule 34 (valor -> mapa .)
    LLAVERIGHT      reduce using rule 34 (valor -> mapa .)
    BREAK           reduce using rule 34 (valor -> mapa .)
    CONTINUE        reduce using rule 34 (valor -> mapa .)


state 93

    (35) valor -> refer .

    $end            reduce using rule 35 (valor -> refer .)
    RETURN          reduce using rule 35 (valor -> refer .)
    LLAVERIGHT      reduce using rule 35 (valor -> refer .)
    BREAK           reduce using rule 35 (valor -> refer .)
    CONTINUE        reduce using rule 35 (valor -> refer .)


state 94

    (27) booleano -> condicion .

    $end            reduce using rule 27 (booleano -> condicion .)
    RETURN          reduce using rule 27 (booleano -> condicion .)
    LLAVERIGHT      reduce using rule 27 (booleano -> condicion .)
    BREAK           reduce using rule 27 (booleano -> condicion .)
    CONTINUE        reduce using rule 27 (booleano -> condicion .)


state 95

    (28) booleano -> TRUE .

    $end            reduce using rule 28 (booleano -> TRUE .)
    RETURN          reduce using rule 28 (booleano -> TRUE .)
    LLAVERIGHT      reduce using rule 28 (booleano -> TRUE .)
    BREAK           reduce using rule 28 (booleano -> TRUE .)
    CONTINUE        reduce using rule 28 (booleano -> TRUE .)


state 96

    (29) booleano -> FALSE .

    $end            reduce using rule 29 (booleano -> FALSE .)
    RETURN          reduce using rule 29 (booleano -> FALSE .)
    LLAVERIGHT      reduce using rule 29 (booleano -> FALSE .)
    BREAK           reduce using rule 29 (booleano -> FALSE .)
    CONTINUE        reduce using rule 29 (booleano -> FALSE .)


state 97

    (65) refer -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 142


state 98

    (136) condicion -> AND .

    $end            reduce using rule 136 (condicion -> AND .)
    RETURN          reduce using rule 136 (condicion -> AND .)
    LLAVERIGHT      reduce using rule 136 (condicion -> AND .)
    BREAK           reduce using rule 136 (condicion -> AND .)
    CONTINUE        reduce using rule 136 (condicion -> AND .)
    NEGACION        reduce using rule 136 (condicion -> AND .)
    PARLEFT         reduce using rule 136 (condicion -> AND .)
    VARIABLE        reduce using rule 136 (condicion -> AND .)
    BOOL            reduce using rule 136 (condicion -> AND .)
    ENTERO          reduce using rule 136 (condicion -> AND .)
    FLOTANTE        reduce using rule 136 (condicion -> AND .)


state 99

    (137) condicion -> OR .

    $end            reduce using rule 137 (condicion -> OR .)
    RETURN          reduce using rule 137 (condicion -> OR .)
    LLAVERIGHT      reduce using rule 137 (condicion -> OR .)
    BREAK           reduce using rule 137 (condicion -> OR .)
    CONTINUE        reduce using rule 137 (condicion -> OR .)
    NEGACION        reduce using rule 137 (condicion -> OR .)
    PARLEFT         reduce using rule 137 (condicion -> OR .)
    VARIABLE        reduce using rule 137 (condicion -> OR .)
    BOOL            reduce using rule 137 (condicion -> OR .)
    ENTERO          reduce using rule 137 (condicion -> OR .)
    FLOTANTE        reduce using rule 137 (condicion -> OR .)


state 100

    (21) asignacion -> VARIABLE IGUAL valor .

    $end            reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    LLAVERIGHT      reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    BREAK           reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    CONTINUE        reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)


state 101

    (24) asignacion -> VARIABLE MASIGUAL VARIABLE .

    $end            reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)
    RETURN          reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)
    LLAVERIGHT      reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)
    BREAK           reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)
    CONTINUE        reduce using rule 24 (asignacion -> VARIABLE MASIGUAL VARIABLE .)


state 102

    (22) asignacion -> VARIABLE MASIGUAL expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    RETURN          reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    LLAVERIGHT      reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    BREAK           reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    CONTINUE        reduce using rule 22 (asignacion -> VARIABLE MASIGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 103

    (23) asignacion -> VARIABLE MASIGUAL CADENA .

    $end            reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)
    RETURN          reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)
    LLAVERIGHT      reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)
    BREAK           reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)
    CONTINUE        reduce using rule 23 (asignacion -> VARIABLE MASIGUAL CADENA .)


state 104

    (25) asignacion -> VARIABLE MENOSIGUAL expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    RETURN          reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    LLAVERIGHT      reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    BREAK           reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    CONTINUE        reduce using rule 25 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 105

    (26) asignacion -> derefer IGUAL valor .

    $end            reduce using rule 26 (asignacion -> derefer IGUAL valor .)
    RETURN          reduce using rule 26 (asignacion -> derefer IGUAL valor .)
    LLAVERIGHT      reduce using rule 26 (asignacion -> derefer IGUAL valor .)
    BREAK           reduce using rule 26 (asignacion -> derefer IGUAL valor .)
    CONTINUE        reduce using rule 26 (asignacion -> derefer IGUAL valor .)


state 106

    (127) condiciones -> factor MAYORQUE factor .

    $end            reduce using rule 127 (condiciones -> factor MAYORQUE factor .)
    AND             reduce using rule 127 (condiciones -> factor MAYORQUE factor .)
    OR              reduce using rule 127 (condiciones -> factor MAYORQUE factor .)
    LLAVELEFT       reduce using rule 127 (condiciones -> factor MAYORQUE factor .)
    PARRIGHT        reduce using rule 127 (condiciones -> factor MAYORQUE factor .)
    RETURN          reduce using rule 127 (condiciones -> factor MAYORQUE factor .)
    LLAVERIGHT      reduce using rule 127 (condiciones -> factor MAYORQUE factor .)
    PUNTOCOMA       reduce using rule 127 (condiciones -> factor MAYORQUE factor .)
    BREAK           reduce using rule 127 (condiciones -> factor MAYORQUE factor .)
    CONTINUE        reduce using rule 127 (condiciones -> factor MAYORQUE factor .)


state 107

    (128) condiciones -> factor MENORQUE factor .

    $end            reduce using rule 128 (condiciones -> factor MENORQUE factor .)
    AND             reduce using rule 128 (condiciones -> factor MENORQUE factor .)
    OR              reduce using rule 128 (condiciones -> factor MENORQUE factor .)
    LLAVELEFT       reduce using rule 128 (condiciones -> factor MENORQUE factor .)
    PARRIGHT        reduce using rule 128 (condiciones -> factor MENORQUE factor .)
    RETURN          reduce using rule 128 (condiciones -> factor MENORQUE factor .)
    LLAVERIGHT      reduce using rule 128 (condiciones -> factor MENORQUE factor .)
    PUNTOCOMA       reduce using rule 128 (condiciones -> factor MENORQUE factor .)
    BREAK           reduce using rule 128 (condiciones -> factor MENORQUE factor .)
    CONTINUE        reduce using rule 128 (condiciones -> factor MENORQUE factor .)


state 108

    (129) condiciones -> factor DIFERENTE factor .

    $end            reduce using rule 129 (condiciones -> factor DIFERENTE factor .)
    AND             reduce using rule 129 (condiciones -> factor DIFERENTE factor .)
    OR              reduce using rule 129 (condiciones -> factor DIFERENTE factor .)
    LLAVELEFT       reduce using rule 129 (condiciones -> factor DIFERENTE factor .)
    PARRIGHT        reduce using rule 129 (condiciones -> factor DIFERENTE factor .)
    RETURN          reduce using rule 129 (condiciones -> factor DIFERENTE factor .)
    LLAVERIGHT      reduce using rule 129 (condiciones -> factor DIFERENTE factor .)
    PUNTOCOMA       reduce using rule 129 (condiciones -> factor DIFERENTE factor .)
    BREAK           reduce using rule 129 (condiciones -> factor DIFERENTE factor .)
    CONTINUE        reduce using rule 129 (condiciones -> factor DIFERENTE factor .)


state 109

    (130) condiciones -> factor ESIGUAL factor .

    $end            reduce using rule 130 (condiciones -> factor ESIGUAL factor .)
    AND             reduce using rule 130 (condiciones -> factor ESIGUAL factor .)
    OR              reduce using rule 130 (condiciones -> factor ESIGUAL factor .)
    LLAVELEFT       reduce using rule 130 (condiciones -> factor ESIGUAL factor .)
    PARRIGHT        reduce using rule 130 (condiciones -> factor ESIGUAL factor .)
    RETURN          reduce using rule 130 (condiciones -> factor ESIGUAL factor .)
    LLAVERIGHT      reduce using rule 130 (condiciones -> factor ESIGUAL factor .)
    PUNTOCOMA       reduce using rule 130 (condiciones -> factor ESIGUAL factor .)
    BREAK           reduce using rule 130 (condiciones -> factor ESIGUAL factor .)
    CONTINUE        reduce using rule 130 (condiciones -> factor ESIGUAL factor .)


state 110

    (131) condiciones -> factor MENORIGUAL factor .

    $end            reduce using rule 131 (condiciones -> factor MENORIGUAL factor .)
    AND             reduce using rule 131 (condiciones -> factor MENORIGUAL factor .)
    OR              reduce using rule 131 (condiciones -> factor MENORIGUAL factor .)
    LLAVELEFT       reduce using rule 131 (condiciones -> factor MENORIGUAL factor .)
    PARRIGHT        reduce using rule 131 (condiciones -> factor MENORIGUAL factor .)
    RETURN          reduce using rule 131 (condiciones -> factor MENORIGUAL factor .)
    LLAVERIGHT      reduce using rule 131 (condiciones -> factor MENORIGUAL factor .)
    PUNTOCOMA       reduce using rule 131 (condiciones -> factor MENORIGUAL factor .)
    BREAK           reduce using rule 131 (condiciones -> factor MENORIGUAL factor .)
    CONTINUE        reduce using rule 131 (condiciones -> factor MENORIGUAL factor .)


state 111

    (132) condiciones -> factor MAYORIGUAL factor .

    $end            reduce using rule 132 (condiciones -> factor MAYORIGUAL factor .)
    AND             reduce using rule 132 (condiciones -> factor MAYORIGUAL factor .)
    OR              reduce using rule 132 (condiciones -> factor MAYORIGUAL factor .)
    LLAVELEFT       reduce using rule 132 (condiciones -> factor MAYORIGUAL factor .)
    PARRIGHT        reduce using rule 132 (condiciones -> factor MAYORIGUAL factor .)
    RETURN          reduce using rule 132 (condiciones -> factor MAYORIGUAL factor .)
    LLAVERIGHT      reduce using rule 132 (condiciones -> factor MAYORIGUAL factor .)
    PUNTOCOMA       reduce using rule 132 (condiciones -> factor MAYORIGUAL factor .)
    BREAK           reduce using rule 132 (condiciones -> factor MAYORIGUAL factor .)
    CONTINUE        reduce using rule 132 (condiciones -> factor MAYORIGUAL factor .)


state 112

    (36) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones LLAVERIGHT else
    (40) sentenciaIf -> IF comparaciones LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones LLAVELEFT . RETURN VARIABLE LLAVERIGHT else
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 144
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 143
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 113

    (134) comparaciones -> comparacion anado . comparaciones
    (133) comparaciones -> . comparacion
    (134) comparaciones -> . comparacion anado comparaciones
    (101) comparacion -> . condiciones
    (102) comparacion -> . NEGACION PARLEFT condiciones PARRIGHT
    (103) comparacion -> . PARLEFT condiciones PARRIGHT
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    NEGACION        shift and go to state 62
    PARLEFT         shift and go to state 63
    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35

    comparacion                    shift and go to state 60
    comparaciones                  shift and go to state 145
    condiciones                    shift and go to state 61
    factor                         shift and go to state 21
    numericos                      shift and go to state 64

state 114

    (135) anado -> condicion .

    NEGACION        reduce using rule 135 (anado -> condicion .)
    PARLEFT         reduce using rule 135 (anado -> condicion .)
    VARIABLE        reduce using rule 135 (anado -> condicion .)
    BOOL            reduce using rule 135 (anado -> condicion .)
    ENTERO          reduce using rule 135 (anado -> condicion .)
    FLOTANTE        reduce using rule 135 (anado -> condicion .)


state 115

    (102) comparacion -> NEGACION PARLEFT . condiciones PARRIGHT
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    condiciones                    shift and go to state 146
    factor                         shift and go to state 21
    numericos                      shift and go to state 64

state 116

    (103) comparacion -> PARLEFT condiciones . PARRIGHT

    PARRIGHT        shift and go to state 147


state 117

    (96) factor -> numericos .
    (95) term -> numericos .

    MAYORQUE        reduce using rule 96 (factor -> numericos .)
    MENORQUE        reduce using rule 96 (factor -> numericos .)
    DIFERENTE       reduce using rule 96 (factor -> numericos .)
    ESIGUAL         reduce using rule 96 (factor -> numericos .)
    MENORIGUAL      reduce using rule 96 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 96 (factor -> numericos .)
    PARRIGHT        reduce using rule 95 (term -> numericos .)
    SUMA            reduce using rule 95 (term -> numericos .)
    RESTA           reduce using rule 95 (term -> numericos .)
    PRODUCTO        reduce using rule 95 (term -> numericos .)
    DIVISION        reduce using rule 95 (term -> numericos .)
    MODULO          reduce using rule 95 (term -> numericos .)


state 118

    (67) sentenciaFor -> FOR inicio PUNTOCOMA . condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 59
    BOOL            shift and go to state 17
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    condiciones                    shift and go to state 148
    factor                         shift and go to state 21
    numericos                      shift and go to state 64

state 119

    (68) inicio -> VARIABLE DECLARADOR . ENTERO

    ENTERO          shift and go to state 149


state 120

    (76) print -> IMPRIMIR PARLEFT contPrint . PARRIGHT

    PARRIGHT        shift and go to state 150


state 121

    (77) contPrint -> contenido . masCont
    (78) contPrint -> contenido .
    (79) masCont -> . masCont COMA contenido
    (80) masCont -> . COMA contenido

    PARRIGHT        reduce using rule 78 (contPrint -> contenido .)
    COMA            shift and go to state 152

    masCont                        shift and go to state 151

state 122

    (81) contenido -> expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    COMA            reduce using rule 81 (contenido -> expresion .)
    PARRIGHT        reduce using rule 81 (contenido -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 123

    (82) contenido -> CADENA .

    COMA            reduce using rule 82 (contenido -> CADENA .)
    PARRIGHT        reduce using rule 82 (contenido -> CADENA .)


state 124

    (83) contenido -> VARIABLE .

    COMA            reduce using rule 83 (contenido -> VARIABLE .)
    PARRIGHT        reduce using rule 83 (contenido -> VARIABLE .)


state 125

    (100) numericos -> PARLEFT expresion PARRIGHT .

    SUMA            reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    RESTA           reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    PRODUCTO        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    DIVISION        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    MODULO          reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    $end            reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORQUE        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORQUE        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    DIFERENTE       reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    ESIGUAL         reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORIGUAL      reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORIGUAL      reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    PARRIGHT        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    RETURN          reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVERIGHT      reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    BREAK           reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    CONTINUE        reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    COMA            reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    DOSPUNTOS       reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    AND             reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    OR              reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVELEFT       reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)
    PUNTOCOMA       reduce using rule 100 (numericos -> PARLEFT expresion PARRIGHT .)


state 126

    (46) mapa -> MAP CORCHLEFT tipo . CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT tipo . CORCHRIGHT tipo LLAVELEFT LLAVERIGHT

    CORCHRIGHT      shift and go to state 153


state 127

    (52) tipo -> BOOL .

    CORCHRIGHT      reduce using rule 52 (tipo -> BOOL .)
    LLAVELEFT       reduce using rule 52 (tipo -> BOOL .)


state 128

    (53) tipo -> INT .

    CORCHRIGHT      reduce using rule 53 (tipo -> INT .)
    LLAVELEFT       reduce using rule 53 (tipo -> INT .)


state 129

    (54) tipo -> FLOAT .

    CORCHRIGHT      reduce using rule 54 (tipo -> FLOAT .)
    LLAVELEFT       reduce using rule 54 (tipo -> FLOAT .)


state 130

    (55) tipo -> STRING .

    CORCHRIGHT      reduce using rule 55 (tipo -> STRING .)
    LLAVELEFT       reduce using rule 55 (tipo -> STRING .)


state 131

    (85) lectura -> SCAN PARLEFT contScan . PARRIGHT

    PARRIGHT        shift and go to state 154


state 132

    (86) contScan -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 155


state 133

    (118) switch -> SWITCH VARIABLE LLAVELEFT . bloque_switch LLAVERIGHT
    (119) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK
    (120) bloque_switch -> . CASE caso DOSPUNTOS instrucciones CONTINUE
    (121) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK bloque_switch
    (122) bloque_switch -> . switch_default
    (126) switch_default -> . DEFAULT DOSPUNTOS instrucciones

    CASE            shift and go to state 157
    DEFAULT         shift and go to state 159

    bloque_switch                  shift and go to state 156
    switch_default                 shift and go to state 158

state 134

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (114) parametros -> . VARIABLE
    (115) parametros -> . VARIABLE COMA parametros
    (116) parametros -> . typeData VARIABLE
    (117) parametros -> . typeData VARIABLE COMA parametros
    (70) typeData -> . BOOL
    (71) typeData -> . INT
    (72) typeData -> . FLOAT
    (73) typeData -> . STRING

    PARRIGHT        shift and go to state 161
    VARIABLE        shift and go to state 160
    BOOL            shift and go to state 164
    INT             shift and go to state 165
    FLOAT           shift and go to state 166
    STRING          shift and go to state 167

    parametros                     shift and go to state 162
    typeData                       shift and go to state 163

state 135

    (14) asignacion -> VAR VARIABLE BOOL IGUAL . booleano
    (27) booleano -> . condicion
    (28) booleano -> . TRUE
    (29) booleano -> . FALSE
    (136) condicion -> . AND
    (137) condicion -> . OR

    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    AND             shift and go to state 98
    OR              shift and go to state 99

    booleano                       shift and go to state 168
    condicion                      shift and go to state 94

state 136

    (15) asignacion -> VAR VARIABLE INT IGUAL . expresion
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    expresion                      shift and go to state 169
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 137

    (16) asignacion -> VAR VARIABLE FLOAT IGUAL . expresion
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    expresion                      shift and go to state 170
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 138

    (17) asignacion -> VAR VARIABLE STRING IGUAL . CADENA

    CADENA          shift and go to state 171


state 139

    (18) asignacion -> VAR VARIABLE puntero IGUAL . refer
    (65) refer -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 97

    refer                          shift and go to state 172

state 140

    (75) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO . CORCHRIGHT typeData

    CORCHRIGHT      shift and go to state 173


state 141

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO . CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    CORCHRIGHT      shift and go to state 174


state 142

    (65) refer -> AMPERSAND VARIABLE .

    $end            reduce using rule 65 (refer -> AMPERSAND VARIABLE .)
    RETURN          reduce using rule 65 (refer -> AMPERSAND VARIABLE .)
    LLAVERIGHT      reduce using rule 65 (refer -> AMPERSAND VARIABLE .)
    BREAK           reduce using rule 65 (refer -> AMPERSAND VARIABLE .)
    CONTINUE        reduce using rule 65 (refer -> AMPERSAND VARIABLE .)


state 143

    (36) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . LLAVERIGHT else

    RETURN          shift and go to state 175
    LLAVERIGHT      shift and go to state 176


state 144

    (40) sentenciaIf -> IF comparaciones LLAVELEFT RETURN . VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 177


state 145

    (134) comparaciones -> comparacion anado comparaciones .

    LLAVELEFT       reduce using rule 134 (comparaciones -> comparacion anado comparaciones .)


state 146

    (102) comparacion -> NEGACION PARLEFT condiciones . PARRIGHT

    PARRIGHT        shift and go to state 178


state 147

    (103) comparacion -> PARLEFT condiciones PARRIGHT .

    AND             reduce using rule 103 (comparacion -> PARLEFT condiciones PARRIGHT .)
    OR              reduce using rule 103 (comparacion -> PARLEFT condiciones PARRIGHT .)
    LLAVELEFT       reduce using rule 103 (comparacion -> PARLEFT condiciones PARRIGHT .)


state 148

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones . PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 179


state 149

    (68) inicio -> VARIABLE DECLARADOR ENTERO .

    PUNTOCOMA       reduce using rule 68 (inicio -> VARIABLE DECLARADOR ENTERO .)


state 150

    (76) print -> IMPRIMIR PARLEFT contPrint PARRIGHT .

    $end            reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    RETURN          reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    LLAVERIGHT      reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    BREAK           reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    CONTINUE        reduce using rule 76 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)


state 151

    (77) contPrint -> contenido masCont .
    (79) masCont -> masCont . COMA contenido

    PARRIGHT        reduce using rule 77 (contPrint -> contenido masCont .)
    COMA            shift and go to state 180


state 152

    (80) masCont -> COMA . contenido
    (81) contenido -> . expresion
    (82) contenido -> . CADENA
    (83) contenido -> . VARIABLE
    (84) contenido -> .
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 123
    VARIABLE        shift and go to state 124
    COMA            reduce using rule 84 (contenido -> .)
    PARRIGHT        reduce using rule 84 (contenido -> .)
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    contenido                      shift and go to state 181
    expresion                      shift and go to state 122
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 153

    (46) mapa -> MAP CORCHLEFT tipo CORCHRIGHT . tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT tipo CORCHRIGHT . tipo LLAVELEFT LLAVERIGHT
    (52) tipo -> . BOOL
    (53) tipo -> . INT
    (54) tipo -> . FLOAT
    (55) tipo -> . STRING

    BOOL            shift and go to state 127
    INT             shift and go to state 128
    FLOAT           shift and go to state 129
    STRING          shift and go to state 130

    tipo                           shift and go to state 182

state 154

    (85) lectura -> SCAN PARLEFT contScan PARRIGHT .

    $end            reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    RETURN          reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    LLAVERIGHT      reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    BREAK           reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    CONTINUE        reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)


state 155

    (86) contScan -> AMPERSAND VARIABLE .

    PARRIGHT        reduce using rule 86 (contScan -> AMPERSAND VARIABLE .)


state 156

    (118) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch . LLAVERIGHT

    LLAVERIGHT      shift and go to state 183


state 157

    (119) bloque_switch -> CASE . caso DOSPUNTOS instrucciones BREAK
    (120) bloque_switch -> CASE . caso DOSPUNTOS instrucciones CONTINUE
    (121) bloque_switch -> CASE . caso DOSPUNTOS instrucciones BREAK bloque_switch
    (123) caso -> . VARIABLE
    (124) caso -> . CADENA
    (125) caso -> . ENTERO

    VARIABLE        shift and go to state 185
    CADENA          shift and go to state 186
    ENTERO          shift and go to state 187

    caso                           shift and go to state 184

state 158

    (122) bloque_switch -> switch_default .

    LLAVERIGHT      reduce using rule 122 (bloque_switch -> switch_default .)


state 159

    (126) switch_default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 188


state 160

    (114) parametros -> VARIABLE .
    (115) parametros -> VARIABLE . COMA parametros

    PARRIGHT        reduce using rule 114 (parametros -> VARIABLE .)
    COMA            shift and go to state 189


state 161

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    LLAVELEFT       shift and go to state 190


state 162

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT RETURN LLAVERIGHT

    PARRIGHT        shift and go to state 191


state 163

    (116) parametros -> typeData . VARIABLE
    (117) parametros -> typeData . VARIABLE COMA parametros

    VARIABLE        shift and go to state 192


state 164

    (70) typeData -> BOOL .

    VARIABLE        reduce using rule 70 (typeData -> BOOL .)
    $end            reduce using rule 70 (typeData -> BOOL .)
    RETURN          reduce using rule 70 (typeData -> BOOL .)
    LLAVERIGHT      reduce using rule 70 (typeData -> BOOL .)
    BREAK           reduce using rule 70 (typeData -> BOOL .)
    CONTINUE        reduce using rule 70 (typeData -> BOOL .)
    LLAVELEFT       reduce using rule 70 (typeData -> BOOL .)


state 165

    (71) typeData -> INT .

    VARIABLE        reduce using rule 71 (typeData -> INT .)
    $end            reduce using rule 71 (typeData -> INT .)
    RETURN          reduce using rule 71 (typeData -> INT .)
    LLAVERIGHT      reduce using rule 71 (typeData -> INT .)
    BREAK           reduce using rule 71 (typeData -> INT .)
    CONTINUE        reduce using rule 71 (typeData -> INT .)
    LLAVELEFT       reduce using rule 71 (typeData -> INT .)


state 166

    (72) typeData -> FLOAT .

    VARIABLE        reduce using rule 72 (typeData -> FLOAT .)
    $end            reduce using rule 72 (typeData -> FLOAT .)
    RETURN          reduce using rule 72 (typeData -> FLOAT .)
    LLAVERIGHT      reduce using rule 72 (typeData -> FLOAT .)
    BREAK           reduce using rule 72 (typeData -> FLOAT .)
    CONTINUE        reduce using rule 72 (typeData -> FLOAT .)
    LLAVELEFT       reduce using rule 72 (typeData -> FLOAT .)


state 167

    (73) typeData -> STRING .

    VARIABLE        reduce using rule 73 (typeData -> STRING .)
    $end            reduce using rule 73 (typeData -> STRING .)
    RETURN          reduce using rule 73 (typeData -> STRING .)
    LLAVERIGHT      reduce using rule 73 (typeData -> STRING .)
    BREAK           reduce using rule 73 (typeData -> STRING .)
    CONTINUE        reduce using rule 73 (typeData -> STRING .)
    LLAVELEFT       reduce using rule 73 (typeData -> STRING .)


state 168

    (14) asignacion -> VAR VARIABLE BOOL IGUAL booleano .

    $end            reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    RETURN          reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    LLAVERIGHT      reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    BREAK           reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    CONTINUE        reduce using rule 14 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)


state 169

    (15) asignacion -> VAR VARIABLE INT IGUAL expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    RETURN          reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    BREAK           reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    CONTINUE        reduce using rule 15 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 170

    (16) asignacion -> VAR VARIABLE FLOAT IGUAL expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    $end            reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    RETURN          reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    BREAK           reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    CONTINUE        reduce using rule 16 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 171

    (17) asignacion -> VAR VARIABLE STRING IGUAL CADENA .

    $end            reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    RETURN          reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    LLAVERIGHT      reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    BREAK           reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    CONTINUE        reduce using rule 17 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)


state 172

    (18) asignacion -> VAR VARIABLE puntero IGUAL refer .

    $end            reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    RETURN          reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    LLAVERIGHT      reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    BREAK           reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    CONTINUE        reduce using rule 18 (asignacion -> VAR VARIABLE puntero IGUAL refer .)


state 173

    (75) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT . typeData
    (70) typeData -> . BOOL
    (71) typeData -> . INT
    (72) typeData -> . FLOAT
    (73) typeData -> . STRING

    BOOL            shift and go to state 164
    INT             shift and go to state 165
    FLOAT           shift and go to state 166
    STRING          shift and go to state 167

    typeData                       shift and go to state 193

state 174

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT . typeData LLAVELEFT contArray LLAVERIGHT
    (70) typeData -> . BOOL
    (71) typeData -> . INT
    (72) typeData -> . FLOAT
    (73) typeData -> . STRING

    BOOL            shift and go to state 164
    INT             shift and go to state 165
    FLOAT           shift and go to state 166
    STRING          shift and go to state 167

    typeData                       shift and go to state 194

state 175

    (36) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 195


state 176

    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .
    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT . else
    (42) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE sentenciaIf

    $end            reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    ELSE            shift and go to state 197

    else                           shift and go to state 196

state 177

    (40) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE . LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 198


state 178

    (102) comparacion -> NEGACION PARLEFT condiciones PARRIGHT .

    AND             reduce using rule 102 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)
    OR              reduce using rule 102 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)
    LLAVELEFT       reduce using rule 102 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)


state 179

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA . incrementa LLAVELEFT instrucciones LLAVERIGHT
    (69) incrementa -> . VARIABLE INCREMENTO

    VARIABLE        shift and go to state 200

    incrementa                     shift and go to state 199

state 180

    (79) masCont -> masCont COMA . contenido
    (81) contenido -> . expresion
    (82) contenido -> . CADENA
    (83) contenido -> . VARIABLE
    (84) contenido -> .
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 123
    VARIABLE        shift and go to state 124
    COMA            reduce using rule 84 (contenido -> .)
    PARRIGHT        reduce using rule 84 (contenido -> .)
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    contenido                      shift and go to state 201
    expresion                      shift and go to state 122
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 181

    (80) masCont -> COMA contenido .

    COMA            reduce using rule 80 (masCont -> COMA contenido .)
    PARRIGHT        reduce using rule 80 (masCont -> COMA contenido .)


state 182

    (46) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo . LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo . LLAVELEFT LLAVERIGHT

    LLAVELEFT       shift and go to state 202


state 183

    (118) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .

    $end            reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    RETURN          reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    BREAK           reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    CONTINUE        reduce using rule 118 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)


state 184

    (119) bloque_switch -> CASE caso . DOSPUNTOS instrucciones BREAK
    (120) bloque_switch -> CASE caso . DOSPUNTOS instrucciones CONTINUE
    (121) bloque_switch -> CASE caso . DOSPUNTOS instrucciones BREAK bloque_switch

    DOSPUNTOS       shift and go to state 203


state 185

    (123) caso -> VARIABLE .

    DOSPUNTOS       reduce using rule 123 (caso -> VARIABLE .)


state 186

    (124) caso -> CADENA .

    DOSPUNTOS       reduce using rule 124 (caso -> CADENA .)


state 187

    (125) caso -> ENTERO .

    DOSPUNTOS       reduce using rule 125 (caso -> ENTERO .)


state 188

    (126) switch_default -> DEFAULT DOSPUNTOS . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 204
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 189

    (115) parametros -> VARIABLE COMA . parametros
    (114) parametros -> . VARIABLE
    (115) parametros -> . VARIABLE COMA parametros
    (116) parametros -> . typeData VARIABLE
    (117) parametros -> . typeData VARIABLE COMA parametros
    (70) typeData -> . BOOL
    (71) typeData -> . INT
    (72) typeData -> . FLOAT
    (73) typeData -> . STRING

    VARIABLE        shift and go to state 160
    BOOL            shift and go to state 164
    INT             shift and go to state 165
    FLOAT           shift and go to state 166
    STRING          shift and go to state 167

    parametros                     shift and go to state 205
    typeData                       shift and go to state 163

state 190

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 207
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 206
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 191

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT RETURN LLAVERIGHT

    LLAVELEFT       shift and go to state 208


state 192

    (116) parametros -> typeData VARIABLE .
    (117) parametros -> typeData VARIABLE . COMA parametros

    PARRIGHT        reduce using rule 116 (parametros -> typeData VARIABLE .)
    COMA            shift and go to state 209


state 193

    (75) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .

    $end            reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    RETURN          reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    BREAK           reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 75 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)


state 194

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData . LLAVELEFT contArray LLAVERIGHT

    LLAVELEFT       shift and go to state 210


state 195

    (36) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT
    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 211


state 196

    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .

    $end            reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    RETURN          reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    BREAK           reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    CONTINUE        reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)


state 197

    (42) else -> ELSE . LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> ELSE . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> ELSE . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> ELSE . sentenciaIf
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 212
    IF              shift and go to state 22

    sentenciaIf                    shift and go to state 213

state 198

    (40) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .
    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT . else
    (42) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE sentenciaIf

    $end            reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 197

    else                           shift and go to state 214

state 199

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa . LLAVELEFT instrucciones LLAVERIGHT

    LLAVELEFT       shift and go to state 215


state 200

    (69) incrementa -> VARIABLE . INCREMENTO

    INCREMENTO      shift and go to state 216


state 201

    (79) masCont -> masCont COMA contenido .

    COMA            reduce using rule 79 (masCont -> masCont COMA contenido .)
    PARRIGHT        reduce using rule 79 (masCont -> masCont COMA contenido .)


state 202

    (46) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT . par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT . LLAVERIGHT
    (48) par -> . dato DOSPUNTOS dato mas
    (49) par -> . dato DOSPUNTOS dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    LLAVERIGHT      shift and go to state 218
    VARIABLE        shift and go to state 220
    CADENA          shift and go to state 222
    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    par                            shift and go to state 217
    dato                           shift and go to state 219
    expresion                      shift and go to state 221
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 203

    (119) bloque_switch -> CASE caso DOSPUNTOS . instrucciones BREAK
    (120) bloque_switch -> CASE caso DOSPUNTOS . instrucciones CONTINUE
    (121) bloque_switch -> CASE caso DOSPUNTOS . instrucciones BREAK bloque_switch
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 225
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 204

    (126) switch_default -> DEFAULT DOSPUNTOS instrucciones .

    LLAVERIGHT      reduce using rule 126 (switch_default -> DEFAULT DOSPUNTOS instrucciones .)


state 205

    (115) parametros -> VARIABLE COMA parametros .

    PARRIGHT        reduce using rule 115 (parametros -> VARIABLE COMA parametros .)


state 206

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . LLAVERIGHT
    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 226
    RETURN          shift and go to state 227


state 207

    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 228


state 208

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . instrucciones LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . RETURN LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 230
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 229
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 209

    (117) parametros -> typeData VARIABLE COMA . parametros
    (114) parametros -> . VARIABLE
    (115) parametros -> . VARIABLE COMA parametros
    (116) parametros -> . typeData VARIABLE
    (117) parametros -> . typeData VARIABLE COMA parametros
    (70) typeData -> . BOOL
    (71) typeData -> . INT
    (72) typeData -> . FLOAT
    (73) typeData -> . STRING

    VARIABLE        shift and go to state 160
    BOOL            shift and go to state 164
    INT             shift and go to state 165
    FLOAT           shift and go to state 166
    STRING          shift and go to state 167

    typeData                       shift and go to state 163
    parametros                     shift and go to state 231

state 210

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT . contArray LLAVERIGHT
    (87) contArray -> . contArray COMA numericos
    (94) contArray -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    contArray                      shift and go to state 232
    numericos                      shift and go to state 69
    term                           shift and go to state 233

state 211

    (36) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .
    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT . else
    (42) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE sentenciaIf

    $end            reduce using rule 36 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 36 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 36 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 36 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 36 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 197

    else                           shift and go to state 234

state 212

    (42) else -> ELSE LLAVELEFT . instrucciones LLAVERIGHT
    (43) else -> ELSE LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> ELSE LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 236
    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    instrucciones                  shift and go to state 235
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 213

    (45) else -> ELSE sentenciaIf .

    $end            reduce using rule 45 (else -> ELSE sentenciaIf .)
    RETURN          reduce using rule 45 (else -> ELSE sentenciaIf .)
    LLAVERIGHT      reduce using rule 45 (else -> ELSE sentenciaIf .)
    BREAK           reduce using rule 45 (else -> ELSE sentenciaIf .)
    CONTINUE        reduce using rule 45 (else -> ELSE sentenciaIf .)


state 214

    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    BREAK           reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    CONTINUE        reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)


state 215

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT . instrucciones LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . arrayAsig
    (13) instrucciones -> . funcion
    (14) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (15) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (18) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (19) asignacion -> . VAR VARIABLE puntero
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL expresion
    (23) asignacion -> . VARIABLE MASIGUAL CADENA
    (24) asignacion -> . VARIABLE MASIGUAL VARIABLE
    (25) asignacion -> . VARIABLE MENOSIGUAL expresion
    (26) asignacion -> . derefer IGUAL valor
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (127) condiciones -> . factor MAYORQUE factor
    (128) condiciones -> . factor MENORQUE factor
    (129) condiciones -> . factor DIFERENTE factor
    (130) condiciones -> . factor ESIGUAL factor
    (131) condiciones -> . factor MENORIGUAL factor
    (132) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (67) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (76) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (61) puntero -> . PRODUCTO BOOL
    (62) puntero -> . PRODUCTO INT
    (63) puntero -> . PRODUCTO FLOAT
    (64) puntero -> . PRODUCTO STRING
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (74) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (118) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (75) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (104) funcion -> . funcion_sin_parametro
    (105) funcion -> . funcion_parametro
    (106) funcion -> . funcion_sin_parametro_return
    (66) derefer -> . PRODUCTO VARIABLE
    (95) term -> . numericos
    (96) factor -> . numericos
    (97) factor -> . VARIABLE
    (138) factor -> . BOOL
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (113) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (110) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 15
    VARIABLE        shift and go to state 16
    IF              shift and go to state 22
    FOR             shift and go to state 23
    IMPRIMIR        shift and go to state 24
    MAP             shift and go to state 26
    PRODUCTO        shift and go to state 20
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 17
    FUNC            shift and go to state 34
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    condiciones                    shift and go to state 4
    instrucciones                  shift and go to state 237
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    arrayAsig                      shift and go to state 13
    funcion                        shift and go to state 14
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 21
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    numericos                      shift and go to state 33

state 216

    (69) incrementa -> VARIABLE INCREMENTO .

    LLAVELEFT       reduce using rule 69 (incrementa -> VARIABLE INCREMENTO .)


state 217

    (46) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par . LLAVERIGHT

    LLAVERIGHT      shift and go to state 238


state 218

    (47) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .

    $end            reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    RETURN          reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    BREAK           reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    CONTINUE        reduce using rule 47 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)


state 219

    (48) par -> dato . DOSPUNTOS dato mas
    (49) par -> dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 239


state 220

    (56) dato -> VARIABLE .

    DOSPUNTOS       reduce using rule 56 (dato -> VARIABLE .)
    COMA            reduce using rule 56 (dato -> VARIABLE .)
    LLAVERIGHT      reduce using rule 56 (dato -> VARIABLE .)


state 221

    (57) dato -> expresion .
    (88) expresion -> expresion . SUMA term
    (89) expresion -> expresion . RESTA term
    (90) expresion -> expresion . PRODUCTO term
    (91) expresion -> expresion . DIVISION term
    (92) expresion -> expresion . MODULO term

    DOSPUNTOS       reduce using rule 57 (dato -> expresion .)
    COMA            reduce using rule 57 (dato -> expresion .)
    LLAVERIGHT      reduce using rule 57 (dato -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40


state 222

    (58) dato -> CADENA .

    DOSPUNTOS       reduce using rule 58 (dato -> CADENA .)
    COMA            reduce using rule 58 (dato -> CADENA .)
    LLAVERIGHT      reduce using rule 58 (dato -> CADENA .)


state 223

    (59) dato -> TRUE .

    DOSPUNTOS       reduce using rule 59 (dato -> TRUE .)
    COMA            reduce using rule 59 (dato -> TRUE .)
    LLAVERIGHT      reduce using rule 59 (dato -> TRUE .)


state 224

    (60) dato -> FALSE .

    DOSPUNTOS       reduce using rule 60 (dato -> FALSE .)
    COMA            reduce using rule 60 (dato -> FALSE .)
    LLAVERIGHT      reduce using rule 60 (dato -> FALSE .)


state 225

    (119) bloque_switch -> CASE caso DOSPUNTOS instrucciones . BREAK
    (120) bloque_switch -> CASE caso DOSPUNTOS instrucciones . CONTINUE
    (121) bloque_switch -> CASE caso DOSPUNTOS instrucciones . BREAK bloque_switch

    BREAK           shift and go to state 240
    CONTINUE        shift and go to state 241


state 226

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)


state 227

    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN . LLAVERIGHT
    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 243
    VARIABLE        shift and go to state 242


state 228

    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .

    $end            reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    RETURN          reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    BREAK           reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)


state 229

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones . LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones . RETURN LLAVERIGHT

    LLAVERIGHT      shift and go to state 244
    RETURN          shift and go to state 245


state 230

    (113) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 246


state 231

    (117) parametros -> typeData VARIABLE COMA parametros .

    PARRIGHT        reduce using rule 117 (parametros -> typeData VARIABLE COMA parametros .)


state 232

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray . LLAVERIGHT
    (87) contArray -> contArray . COMA numericos

    LLAVERIGHT      shift and go to state 247
    COMA            shift and go to state 248


state 233

    (94) contArray -> term .

    LLAVERIGHT      reduce using rule 94 (contArray -> term .)
    COMA            reduce using rule 94 (contArray -> term .)


state 234

    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    BREAK           reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    CONTINUE        reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)


state 235

    (42) else -> ELSE LLAVELEFT instrucciones . LLAVERIGHT
    (43) else -> ELSE LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 249
    RETURN          shift and go to state 250


state 236

    (44) else -> ELSE LLAVELEFT RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 251


state 237

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones . LLAVERIGHT

    LLAVERIGHT      shift and go to state 252


state 238

    (46) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .

    $end            reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    RETURN          reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    BREAK           reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    CONTINUE        reduce using rule 46 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)


state 239

    (48) par -> dato DOSPUNTOS . dato mas
    (49) par -> dato DOSPUNTOS . dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 220
    CADENA          shift and go to state 222
    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    dato                           shift and go to state 253
    expresion                      shift and go to state 221
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 240

    (119) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK .
    (121) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK . bloque_switch
    (119) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK
    (120) bloque_switch -> . CASE caso DOSPUNTOS instrucciones CONTINUE
    (121) bloque_switch -> . CASE caso DOSPUNTOS instrucciones BREAK bloque_switch
    (122) bloque_switch -> . switch_default
    (126) switch_default -> . DEFAULT DOSPUNTOS instrucciones

    LLAVERIGHT      reduce using rule 119 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK .)
    CASE            shift and go to state 157
    DEFAULT         shift and go to state 159

    bloque_switch                  shift and go to state 254
    switch_default                 shift and go to state 158

state 241

    (120) bloque_switch -> CASE caso DOSPUNTOS instrucciones CONTINUE .

    LLAVERIGHT      reduce using rule 120 (bloque_switch -> CASE caso DOSPUNTOS instrucciones CONTINUE .)


state 242

    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 255


state 243

    (109) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .

    $end            reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    RETURN          reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    BREAK           reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 109 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)


state 244

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)


state 245

    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 256


state 246

    (113) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .

    $end            reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    RETURN          reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    BREAK           reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 113 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)


state 247

    (74) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .

    $end            reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    RETURN          reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    BREAK           reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    CONTINUE        reduce using rule 74 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)


state 248

    (87) contArray -> contArray COMA . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    numericos                      shift and go to state 257

state 249

    (42) else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)


state 250

    (43) else -> ELSE LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 258


state 251

    (44) else -> ELSE LLAVELEFT RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 259


state 252

    (67) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 67 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)


state 253

    (48) par -> dato DOSPUNTOS dato . mas
    (49) par -> dato DOSPUNTOS dato .
    (50) mas -> . mas COMA dato DOSPUNTOS dato
    (51) mas -> . COMA dato DOSPUNTOS dato

    LLAVERIGHT      reduce using rule 49 (par -> dato DOSPUNTOS dato .)
    COMA            shift and go to state 261

    mas                            shift and go to state 260

state 254

    (121) bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch .

    LLAVERIGHT      reduce using rule 121 (bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch .)


state 255

    (110) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 110 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 256

    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .

    $end            reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    RETURN          reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    BREAK           reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)


state 257

    (87) contArray -> contArray COMA numericos .

    LLAVERIGHT      reduce using rule 87 (contArray -> contArray COMA numericos .)
    COMA            reduce using rule 87 (contArray -> contArray COMA numericos .)


state 258

    (43) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 262


state 259

    (44) else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)


state 260

    (48) par -> dato DOSPUNTOS dato mas .
    (50) mas -> mas . COMA dato DOSPUNTOS dato

    LLAVERIGHT      reduce using rule 48 (par -> dato DOSPUNTOS dato mas .)
    COMA            shift and go to state 263


state 261

    (51) mas -> COMA . dato DOSPUNTOS dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 220
    CADENA          shift and go to state 222
    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    dato                           shift and go to state 264
    expresion                      shift and go to state 221
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 262

    (43) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 263

    (50) mas -> mas COMA . dato DOSPUNTOS dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 220
    CADENA          shift and go to state 222
    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    dato                           shift and go to state 265
    expresion                      shift and go to state 221
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 264

    (51) mas -> COMA dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 266


state 265

    (50) mas -> mas COMA dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 267


state 266

    (51) mas -> COMA dato DOSPUNTOS . dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 220
    CADENA          shift and go to state 222
    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    dato                           shift and go to state 268
    expresion                      shift and go to state 221
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 267

    (50) mas -> mas COMA dato DOSPUNTOS . dato
    (56) dato -> . VARIABLE
    (57) dato -> . expresion
    (58) dato -> . CADENA
    (59) dato -> . TRUE
    (60) dato -> . FALSE
    (88) expresion -> . expresion SUMA term
    (89) expresion -> . expresion RESTA term
    (90) expresion -> . expresion PRODUCTO term
    (91) expresion -> . expresion DIVISION term
    (92) expresion -> . expresion MODULO term
    (93) expresion -> . term
    (95) term -> . numericos
    (98) numericos -> . ENTERO
    (99) numericos -> . FLOTANTE
    (100) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 220
    CADENA          shift and go to state 222
    TRUE            shift and go to state 223
    FALSE           shift and go to state 224
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 35
    PARLEFT         shift and go to state 25

    dato                           shift and go to state 269
    expresion                      shift and go to state 221
    term                           shift and go to state 19
    numericos                      shift and go to state 69

state 268

    (51) mas -> COMA dato DOSPUNTOS dato .

    COMA            reduce using rule 51 (mas -> COMA dato DOSPUNTOS dato .)
    LLAVERIGHT      reduce using rule 51 (mas -> COMA dato DOSPUNTOS dato .)


state 269

    (50) mas -> mas COMA dato DOSPUNTOS dato .

    COMA            reduce using rule 50 (mas -> mas COMA dato DOSPUNTOS dato .)
    LLAVERIGHT      reduce using rule 50 (mas -> mas COMA dato DOSPUNTOS dato .)

