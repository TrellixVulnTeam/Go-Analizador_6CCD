Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> expresion
Rule 3     instrucciones -> condiciones
Rule 4     instrucciones -> sentenciaIf
Rule 5     instrucciones -> sentenciaFor
Rule 6     instrucciones -> print
Rule 7     instrucciones -> mapa
Rule 8     instrucciones -> puntero
Rule 9     instrucciones -> lectura
Rule 10    instrucciones -> array
Rule 11    instrucciones -> switch
Rule 12    instrucciones -> funcion
Rule 13    asignacion -> VAR VARIABLE BOOL IGUAL booleano
Rule 14    asignacion -> VAR VARIABLE INT IGUAL expresion
Rule 15    asignacion -> VAR VARIABLE FLOAT IGUAL expresion
Rule 16    asignacion -> VAR VARIABLE STRING IGUAL CADENA
Rule 17    asignacion -> VAR VARIABLE puntero IGUAL refer
Rule 18    asignacion -> VAR VARIABLE puntero
Rule 19    asignacion -> slices
Rule 20    asignacion -> VARIABLE DECLARADOR valor
Rule 21    asignacion -> VARIABLE IGUAL valor
Rule 22    asignacion -> VARIABLE MASIGUAL acumular
Rule 23    asignacion -> VARIABLE MENOSIGUAL expresion
Rule 24    asignacion -> derefer IGUAL valor
Rule 25    booleano -> condicion
Rule 26    booleano -> TRUE
Rule 27    booleano -> FALSE
Rule 28    valor -> booleano
Rule 29    valor -> expresion
Rule 30    valor -> CADENA
Rule 31    valor -> VARIABLE
Rule 32    valor -> mapa
Rule 33    valor -> refer
Rule 34    acumular -> expresion
Rule 35    acumular -> CADENA
Rule 36    acumular -> VARIABLE
Rule 37    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 38    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
Rule 39    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
Rule 40    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
Rule 41    sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 42    sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
Rule 43    else -> ELSE LLAVELEFT instrucciones LLAVERIGHT
Rule 44    else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 45    else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 46    else -> ELSE sentenciaIf
Rule 47    mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
Rule 48    mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
Rule 49    par -> dato DOSPUNTOS dato mas
Rule 50    par -> dato DOSPUNTOS dato
Rule 51    mas -> mas COMA dato DOSPUNTOS dato
Rule 52    mas -> COMA dato DOSPUNTOS dato
Rule 53    dato -> VARIABLE
Rule 54    dato -> expresion
Rule 55    dato -> CADENA
Rule 56    dato -> TRUE
Rule 57    dato -> FALSE
Rule 58    puntero -> PRODUCTO typeData
Rule 59    refer -> AMPERSAND VARIABLE
Rule 60    derefer -> PRODUCTO VARIABLE
Rule 61    sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
Rule 62    inicio -> VARIABLE DECLARADOR ENTERO
Rule 63    incrementa -> VARIABLE INCREMENTO
Rule 64    typeData -> BOOL
Rule 65    typeData -> INT
Rule 66    typeData -> FLOAT
Rule 67    typeData -> STRING
Rule 68    array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
Rule 69    contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT
Rule 70    contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT
Rule 71    contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT
Rule 72    contArrayEnteros -> ENTERO COMA ENTERO
Rule 73    contArrayEnteros -> contArrayEnteros COMA ENTERO
Rule 74    contArrayCadenas -> CADENA COMA CADENA
Rule 75    contArrayCadenas -> contArrayCadenas COMA CADENA
Rule 76    contArrayFloat -> FLOTANTE COMA FLOTANTE
Rule 77    contArrayFloat -> contArrayFloat COMA FLOTANTE
Rule 78    method -> methodArray
Rule 79    methodArray -> namemetodoArr PARLEFT VARIABLE PARRIGHT
Rule 80    namemetodoArr -> LEN
Rule 81    namemetodoArr -> CAP
Rule 82    print -> IMPRIMIR PARLEFT contPrint PARRIGHT
Rule 83    contPrint -> contenido masCont
Rule 84    contPrint -> contenido
Rule 85    masCont -> masCont COMA contenido
Rule 86    masCont -> COMA contenido
Rule 87    contenido -> CADENA
Rule 88    contenido -> VARIABLE
Rule 89    contenido -> method
Rule 90    contenido -> <empty>
Rule 91    lectura -> SCAN PARLEFT contScan PARRIGHT
Rule 92    contScan -> AMPERSAND VARIABLE
Rule 93    expresion -> expresion operadorArit term
Rule 94    operadorArit -> SUMA
Rule 95    operadorArit -> RESTA
Rule 96    operadorArit -> PRODUCTO
Rule 97    operadorArit -> DIVISION
Rule 98    operadorArit -> MODULO
Rule 99    expresion -> term
Rule 100   term -> numericos
Rule 101   factor -> numericos
Rule 102   factor -> VARIABLE
Rule 103   numericos -> ENTERO
Rule 104   numericos -> FLOTANTE
Rule 105   numericos -> PARLEFT expresion PARRIGHT
Rule 106   slices -> declaracion_slices
Rule 107   slices -> declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT
Rule 108   slices -> declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT
Rule 109   slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
Rule 110   slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
Rule 111   metodos_slices -> MAKE
Rule 112   declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
Rule 113   declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
Rule 114   declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
Rule 115   declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
Rule 116   declaracion_slices -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData
Rule 117   comparacion -> condiciones
Rule 118   comparacion -> NEGACION PARLEFT condiciones PARRIGHT
Rule 119   comparacion -> PARLEFT condiciones PARRIGHT
Rule 120   funcion -> funcion_sin_parametro
Rule 121   funcion -> funcion_parametro
Rule 122   funcion -> funcion_sin_parametro_return
Rule 123   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
Rule 124   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
Rule 125   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
Rule 126   funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 127   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
Rule 128   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
Rule 129   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
Rule 130   parametros -> VARIABLE
Rule 131   parametros -> VARIABLE COMA parametros
Rule 132   parametros -> typeData VARIABLE
Rule 133   parametros -> typeData VARIABLE COMA parametros
Rule 134   switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
Rule 135   bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK
Rule 136   bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones CONTINUE
Rule 137   bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
Rule 138   bloque_switch -> switch_default
Rule 139   caso_switch -> VARIABLE
Rule 140   caso_switch -> CADENA
Rule 141   caso_switch -> ENTERO
Rule 142   switch_default -> DEFAULT DOSPUNTOS instrucciones
Rule 143   condiciones -> factor MAYORQUE factor
Rule 144   condiciones -> factor MENORQUE factor
Rule 145   condiciones -> factor DIFERENTE factor
Rule 146   condiciones -> factor ESIGUAL factor
Rule 147   condiciones -> factor MENORIGUAL factor
Rule 148   condiciones -> factor MAYORIGUAL factor
Rule 149   comparaciones -> comparacion
Rule 150   comparaciones -> comparacion anado comparaciones
Rule 151   anado -> condicion
Rule 152   condicion -> AND
Rule 153   condicion -> OR
Rule 154   factor -> BOOL

Terminals, with rules where they appear

AMPERSAND            : 59 92
AND                  : 152
BOOL                 : 13 64 154
BREAK                : 135 137
CADENA               : 16 30 35 55 74 74 75 87 140
CAP                  : 81
CASE                 : 135 136 137
COMA                 : 51 52 72 73 74 75 76 77 85 86 109 110 110 131 133
CONTINUE             : 136
CORCHLEFT            : 47 48 68 109 110 112 113 114 115 116
CORCHRIGHT           : 47 48 68 109 110 112 113 114 115 116
DECLARADOR           : 20 62 68 109 110 116
DEFAULT              : 142
DIFERENTE            : 145
DIVISION             : 97
DOSPUNTOS            : 49 50 51 52 135 136 137 142
ELSE                 : 43 44 45 46
ENTERO               : 62 68 72 72 73 103 109 110 110 112 114 141
ESIGUAL              : 146
FALSE                : 27 57
FLOAT                : 15 66 71
FLOTANTE             : 76 76 77 104
FOR                  : 61
FUNC                 : 123 124 125 126 127 128 129
IF                   : 37 38 39 40 41 42
IGUAL                : 13 14 15 16 17 21 24 112 113 114 115
IMPRIMIR             : 82
INCREMENTO           : 63
INT                  : 14 65 69
LEN                  : 80
LLAVELEFT            : 37 38 39 40 41 42 43 44 45 47 48 61 69 70 71 107 108 123 124 125 126 127 128 129 134
LLAVERIGHT           : 37 38 39 40 41 42 43 44 45 47 48 61 69 70 71 107 108 123 124 125 126 127 128 129 134
MAKE                 : 111
MAP                  : 47 48
MASIGUAL             : 22
MAYORIGUAL           : 148
MAYORQUE             : 143
MENORIGUAL           : 147
MENORQUE             : 144
MENOSIGUAL           : 23
MODULO               : 98
NEGACION             : 118
OR                   : 153
PARLEFT              : 79 82 91 105 109 110 118 119 123 124 125 126 127 128 129
PARRIGHT             : 79 82 91 105 109 110 118 119 123 124 125 126 127 128 129
PRODUCTO             : 58 60 96
PUNTOCOMA            : 61 61
RESTA                : 95
RETURN               : 37 38 41 42 44 45 124 125 126 128 129
SCAN                 : 91
STRING               : 16 67 70
SUMA                 : 94
SWITCH               : 134
TRUE                 : 26 56
VAR                  : 13 14 15 16 17 18 112 113
VARIABLE             : 13 14 15 16 17 18 20 21 22 23 31 36 37 38 41 42 44 45 53 59 60 62 63 68 79 88 92 102 109 110 112 113 114 115 116 123 124 125 126 126 127 128 129 130 131 132 133 134 139
error                : 

Nonterminals, with rules where they appear

acumular             : 22
anado                : 150
array                : 10
asignacion           : 1
bloque_switch        : 134 137
booleano             : 13 28
caso_switch          : 135 136 137
comparacion          : 149 150
comparaciones        : 37 38 39 40 41 42 150
condicion            : 25 151
condiciones          : 3 61 117 118 119
contArray            : 68
contArrayCadenas     : 70 75 108
contArrayEnteros     : 69 73 107
contArrayFloat       : 71 77
contPrint            : 82
contScan             : 91
contenido            : 83 84 85 86
dato                 : 49 49 50 50 51 51 52 52
declaracion_slices   : 106 107 108
derefer              : 24
else                 : 38 40 42
expresion            : 2 14 15 23 29 34 54 93 105
factor               : 143 143 144 144 145 145 146 146 147 147 148 148
funcion              : 12
funcion_parametro    : 121
funcion_sin_parametro : 120
funcion_sin_parametro_return : 122
incrementa           : 61
inicio               : 61
instrucciones        : 37 38 39 40 43 44 61 123 125 126 127 128 135 136 137 142 0
lectura              : 9
mapa                 : 7 32
mas                  : 49 51
masCont              : 83 85
method               : 89
methodArray          : 78
metodos_slices       : 109 110
namemetodoArr        : 79
numericos            : 100 101
operadorArit         : 93
par                  : 47
parametros           : 127 128 129 131 133
print                : 6
puntero              : 8 17 18
refer                : 17 33
sentenciaFor         : 5
sentenciaIf          : 4 46
slices               : 19
switch               : 11
switch_default       : 138
term                 : 93 99
typeData             : 47 47 48 48 58 109 110 112 113 114 115 116 132 133
valor                : 20 21 24

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . slices
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL acumular
    (23) asignacion -> . VARIABLE MENOSIGUAL expresion
    (24) asignacion -> . derefer IGUAL valor
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (82) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO typeData
    (91) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (134) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (120) funcion -> . funcion_sin_parametro
    (121) funcion -> . funcion_parametro
    (122) funcion -> . funcion_sin_parametro_return
    (106) slices -> . declaracion_slices
    (107) slices -> . declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT
    (108) slices -> . declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT
    (109) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
    (60) derefer -> . PRODUCTO VARIABLE
    (100) term -> . numericos
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (123) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (112) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (114) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (116) declaracion_slices -> . VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 25
    PRODUCTO        shift and go to state 26
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 16
    FUNC            shift and go to state 35
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    slices                         shift and go to state 17
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 20
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    declaracion_slices             shift and go to state 33
    numericos                      shift and go to state 34

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    RETURN          reduce using rule 1 (instrucciones -> asignacion .)
    LLAVERIGHT      reduce using rule 1 (instrucciones -> asignacion .)
    BREAK           reduce using rule 1 (instrucciones -> asignacion .)
    CONTINUE        reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> expresion .
    (93) expresion -> expresion . operadorArit term
    (94) operadorArit -> . SUMA
    (95) operadorArit -> . RESTA
    (96) operadorArit -> . PRODUCTO
    (97) operadorArit -> . DIVISION
    (98) operadorArit -> . MODULO

    $end            reduce using rule 2 (instrucciones -> expresion .)
    RETURN          reduce using rule 2 (instrucciones -> expresion .)
    LLAVERIGHT      reduce using rule 2 (instrucciones -> expresion .)
    BREAK           reduce using rule 2 (instrucciones -> expresion .)
    CONTINUE        reduce using rule 2 (instrucciones -> expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42

    operadorArit                   shift and go to state 37

state 4

    (3) instrucciones -> condiciones .

    $end            reduce using rule 3 (instrucciones -> condiciones .)
    RETURN          reduce using rule 3 (instrucciones -> condiciones .)
    LLAVERIGHT      reduce using rule 3 (instrucciones -> condiciones .)
    BREAK           reduce using rule 3 (instrucciones -> condiciones .)
    CONTINUE        reduce using rule 3 (instrucciones -> condiciones .)


state 5

    (4) instrucciones -> sentenciaIf .

    $end            reduce using rule 4 (instrucciones -> sentenciaIf .)
    RETURN          reduce using rule 4 (instrucciones -> sentenciaIf .)
    LLAVERIGHT      reduce using rule 4 (instrucciones -> sentenciaIf .)
    BREAK           reduce using rule 4 (instrucciones -> sentenciaIf .)
    CONTINUE        reduce using rule 4 (instrucciones -> sentenciaIf .)


state 6

    (5) instrucciones -> sentenciaFor .

    $end            reduce using rule 5 (instrucciones -> sentenciaFor .)
    RETURN          reduce using rule 5 (instrucciones -> sentenciaFor .)
    LLAVERIGHT      reduce using rule 5 (instrucciones -> sentenciaFor .)
    BREAK           reduce using rule 5 (instrucciones -> sentenciaFor .)
    CONTINUE        reduce using rule 5 (instrucciones -> sentenciaFor .)


state 7

    (6) instrucciones -> print .

    $end            reduce using rule 6 (instrucciones -> print .)
    RETURN          reduce using rule 6 (instrucciones -> print .)
    LLAVERIGHT      reduce using rule 6 (instrucciones -> print .)
    BREAK           reduce using rule 6 (instrucciones -> print .)
    CONTINUE        reduce using rule 6 (instrucciones -> print .)


state 8

    (7) instrucciones -> mapa .

    $end            reduce using rule 7 (instrucciones -> mapa .)
    RETURN          reduce using rule 7 (instrucciones -> mapa .)
    LLAVERIGHT      reduce using rule 7 (instrucciones -> mapa .)
    BREAK           reduce using rule 7 (instrucciones -> mapa .)
    CONTINUE        reduce using rule 7 (instrucciones -> mapa .)


state 9

    (8) instrucciones -> puntero .

    $end            reduce using rule 8 (instrucciones -> puntero .)
    RETURN          reduce using rule 8 (instrucciones -> puntero .)
    LLAVERIGHT      reduce using rule 8 (instrucciones -> puntero .)
    BREAK           reduce using rule 8 (instrucciones -> puntero .)
    CONTINUE        reduce using rule 8 (instrucciones -> puntero .)


state 10

    (9) instrucciones -> lectura .

    $end            reduce using rule 9 (instrucciones -> lectura .)
    RETURN          reduce using rule 9 (instrucciones -> lectura .)
    LLAVERIGHT      reduce using rule 9 (instrucciones -> lectura .)
    BREAK           reduce using rule 9 (instrucciones -> lectura .)
    CONTINUE        reduce using rule 9 (instrucciones -> lectura .)


state 11

    (10) instrucciones -> array .

    $end            reduce using rule 10 (instrucciones -> array .)
    RETURN          reduce using rule 10 (instrucciones -> array .)
    LLAVERIGHT      reduce using rule 10 (instrucciones -> array .)
    BREAK           reduce using rule 10 (instrucciones -> array .)
    CONTINUE        reduce using rule 10 (instrucciones -> array .)


state 12

    (11) instrucciones -> switch .

    $end            reduce using rule 11 (instrucciones -> switch .)
    RETURN          reduce using rule 11 (instrucciones -> switch .)
    LLAVERIGHT      reduce using rule 11 (instrucciones -> switch .)
    BREAK           reduce using rule 11 (instrucciones -> switch .)
    CONTINUE        reduce using rule 11 (instrucciones -> switch .)


state 13

    (12) instrucciones -> funcion .

    $end            reduce using rule 12 (instrucciones -> funcion .)
    RETURN          reduce using rule 12 (instrucciones -> funcion .)
    LLAVERIGHT      reduce using rule 12 (instrucciones -> funcion .)
    BREAK           reduce using rule 12 (instrucciones -> funcion .)
    CONTINUE        reduce using rule 12 (instrucciones -> funcion .)


state 14

    (13) asignacion -> VAR . VARIABLE BOOL IGUAL booleano
    (14) asignacion -> VAR . VARIABLE INT IGUAL expresion
    (15) asignacion -> VAR . VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> VAR . VARIABLE STRING IGUAL CADENA
    (17) asignacion -> VAR . VARIABLE puntero IGUAL refer
    (18) asignacion -> VAR . VARIABLE puntero
    (112) declaracion_slices -> VAR . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> VAR . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData

    VARIABLE        shift and go to state 43


state 15

    (20) asignacion -> VARIABLE . DECLARADOR valor
    (21) asignacion -> VARIABLE . IGUAL valor
    (22) asignacion -> VARIABLE . MASIGUAL acumular
    (23) asignacion -> VARIABLE . MENOSIGUAL expresion
    (68) array -> VARIABLE . DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (109) slices -> VARIABLE . DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> VARIABLE . DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
    (102) factor -> VARIABLE .
    (114) declaracion_slices -> VARIABLE . IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> VARIABLE . IGUAL CORCHLEFT CORCHRIGHT typeData
    (116) declaracion_slices -> VARIABLE . DECLARADOR CORCHLEFT CORCHRIGHT typeData

    DECLARADOR      shift and go to state 44
    IGUAL           shift and go to state 45
    MASIGUAL        shift and go to state 46
    MENOSIGUAL      shift and go to state 47
    MAYORQUE        reduce using rule 102 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 102 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 102 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 102 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 102 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 102 (factor -> VARIABLE .)


state 16

    (154) factor -> BOOL .

    MAYORQUE        reduce using rule 154 (factor -> BOOL .)
    MENORQUE        reduce using rule 154 (factor -> BOOL .)
    DIFERENTE       reduce using rule 154 (factor -> BOOL .)
    ESIGUAL         reduce using rule 154 (factor -> BOOL .)
    MENORIGUAL      reduce using rule 154 (factor -> BOOL .)
    MAYORIGUAL      reduce using rule 154 (factor -> BOOL .)
    $end            reduce using rule 154 (factor -> BOOL .)
    AND             reduce using rule 154 (factor -> BOOL .)
    OR              reduce using rule 154 (factor -> BOOL .)
    LLAVELEFT       reduce using rule 154 (factor -> BOOL .)
    PARRIGHT        reduce using rule 154 (factor -> BOOL .)
    RETURN          reduce using rule 154 (factor -> BOOL .)
    LLAVERIGHT      reduce using rule 154 (factor -> BOOL .)
    PUNTOCOMA       reduce using rule 154 (factor -> BOOL .)
    BREAK           reduce using rule 154 (factor -> BOOL .)
    CONTINUE        reduce using rule 154 (factor -> BOOL .)


state 17

    (19) asignacion -> slices .

    $end            reduce using rule 19 (asignacion -> slices .)
    RETURN          reduce using rule 19 (asignacion -> slices .)
    LLAVERIGHT      reduce using rule 19 (asignacion -> slices .)
    BREAK           reduce using rule 19 (asignacion -> slices .)
    CONTINUE        reduce using rule 19 (asignacion -> slices .)


state 18

    (24) asignacion -> derefer . IGUAL valor

    IGUAL           shift and go to state 48


state 19

    (99) expresion -> term .

    SUMA            reduce using rule 99 (expresion -> term .)
    RESTA           reduce using rule 99 (expresion -> term .)
    PRODUCTO        reduce using rule 99 (expresion -> term .)
    DIVISION        reduce using rule 99 (expresion -> term .)
    MODULO          reduce using rule 99 (expresion -> term .)
    $end            reduce using rule 99 (expresion -> term .)
    PARRIGHT        reduce using rule 99 (expresion -> term .)
    RETURN          reduce using rule 99 (expresion -> term .)
    LLAVERIGHT      reduce using rule 99 (expresion -> term .)
    BREAK           reduce using rule 99 (expresion -> term .)
    CONTINUE        reduce using rule 99 (expresion -> term .)
    DOSPUNTOS       reduce using rule 99 (expresion -> term .)
    COMA            reduce using rule 99 (expresion -> term .)


state 20

    (143) condiciones -> factor . MAYORQUE factor
    (144) condiciones -> factor . MENORQUE factor
    (145) condiciones -> factor . DIFERENTE factor
    (146) condiciones -> factor . ESIGUAL factor
    (147) condiciones -> factor . MENORIGUAL factor
    (148) condiciones -> factor . MAYORIGUAL factor

    MAYORQUE        shift and go to state 49
    MENORQUE        shift and go to state 50
    DIFERENTE       shift and go to state 51
    ESIGUAL         shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54


state 21

    (37) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> IF . comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> IF . comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (149) comparaciones -> . comparacion
    (150) comparaciones -> . comparacion anado comparaciones
    (117) comparacion -> . condiciones
    (118) comparacion -> . NEGACION PARLEFT condiciones PARRIGHT
    (119) comparacion -> . PARLEFT condiciones PARRIGHT
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    NEGACION        shift and go to state 59
    PARLEFT         shift and go to state 60
    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36

    comparaciones                  shift and go to state 55
    comparacion                    shift and go to state 57
    condiciones                    shift and go to state 58
    factor                         shift and go to state 20
    numericos                      shift and go to state 61

state 22

    (61) sentenciaFor -> FOR . inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (62) inicio -> . VARIABLE DECLARADOR ENTERO

    VARIABLE        shift and go to state 63

    inicio                         shift and go to state 62

state 23

    (82) print -> IMPRIMIR . PARLEFT contPrint PARRIGHT

    PARLEFT         shift and go to state 64


state 24

    (105) numericos -> PARLEFT . expresion PARRIGHT
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    expresion                      shift and go to state 65
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 25

    (47) mapa -> MAP . CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> MAP . CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT

    CORCHLEFT       shift and go to state 67


state 26

    (58) puntero -> PRODUCTO . typeData
    (60) derefer -> PRODUCTO . VARIABLE
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    VARIABLE        shift and go to state 69
    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 68

state 27

    (91) lectura -> SCAN . PARLEFT contScan PARRIGHT

    PARLEFT         shift and go to state 74


state 28

    (103) numericos -> ENTERO .

    SUMA            reduce using rule 103 (numericos -> ENTERO .)
    RESTA           reduce using rule 103 (numericos -> ENTERO .)
    PRODUCTO        reduce using rule 103 (numericos -> ENTERO .)
    DIVISION        reduce using rule 103 (numericos -> ENTERO .)
    MODULO          reduce using rule 103 (numericos -> ENTERO .)
    $end            reduce using rule 103 (numericos -> ENTERO .)
    MAYORQUE        reduce using rule 103 (numericos -> ENTERO .)
    MENORQUE        reduce using rule 103 (numericos -> ENTERO .)
    DIFERENTE       reduce using rule 103 (numericos -> ENTERO .)
    ESIGUAL         reduce using rule 103 (numericos -> ENTERO .)
    MENORIGUAL      reduce using rule 103 (numericos -> ENTERO .)
    MAYORIGUAL      reduce using rule 103 (numericos -> ENTERO .)
    PARRIGHT        reduce using rule 103 (numericos -> ENTERO .)
    RETURN          reduce using rule 103 (numericos -> ENTERO .)
    LLAVERIGHT      reduce using rule 103 (numericos -> ENTERO .)
    BREAK           reduce using rule 103 (numericos -> ENTERO .)
    CONTINUE        reduce using rule 103 (numericos -> ENTERO .)
    DOSPUNTOS       reduce using rule 103 (numericos -> ENTERO .)
    COMA            reduce using rule 103 (numericos -> ENTERO .)
    AND             reduce using rule 103 (numericos -> ENTERO .)
    OR              reduce using rule 103 (numericos -> ENTERO .)
    LLAVELEFT       reduce using rule 103 (numericos -> ENTERO .)
    PUNTOCOMA       reduce using rule 103 (numericos -> ENTERO .)


state 29

    (134) switch -> SWITCH . VARIABLE LLAVELEFT bloque_switch LLAVERIGHT

    VARIABLE        shift and go to state 75


state 30

    (120) funcion -> funcion_sin_parametro .

    $end            reduce using rule 120 (funcion -> funcion_sin_parametro .)
    RETURN          reduce using rule 120 (funcion -> funcion_sin_parametro .)
    LLAVERIGHT      reduce using rule 120 (funcion -> funcion_sin_parametro .)
    BREAK           reduce using rule 120 (funcion -> funcion_sin_parametro .)
    CONTINUE        reduce using rule 120 (funcion -> funcion_sin_parametro .)


state 31

    (121) funcion -> funcion_parametro .

    $end            reduce using rule 121 (funcion -> funcion_parametro .)
    RETURN          reduce using rule 121 (funcion -> funcion_parametro .)
    LLAVERIGHT      reduce using rule 121 (funcion -> funcion_parametro .)
    BREAK           reduce using rule 121 (funcion -> funcion_parametro .)
    CONTINUE        reduce using rule 121 (funcion -> funcion_parametro .)


state 32

    (122) funcion -> funcion_sin_parametro_return .

    $end            reduce using rule 122 (funcion -> funcion_sin_parametro_return .)
    RETURN          reduce using rule 122 (funcion -> funcion_sin_parametro_return .)
    LLAVERIGHT      reduce using rule 122 (funcion -> funcion_sin_parametro_return .)
    BREAK           reduce using rule 122 (funcion -> funcion_sin_parametro_return .)
    CONTINUE        reduce using rule 122 (funcion -> funcion_sin_parametro_return .)


state 33

    (106) slices -> declaracion_slices .
    (107) slices -> declaracion_slices . LLAVELEFT contArrayEnteros LLAVERIGHT
    (108) slices -> declaracion_slices . LLAVELEFT contArrayCadenas LLAVERIGHT

    $end            reduce using rule 106 (slices -> declaracion_slices .)
    RETURN          reduce using rule 106 (slices -> declaracion_slices .)
    LLAVERIGHT      reduce using rule 106 (slices -> declaracion_slices .)
    BREAK           reduce using rule 106 (slices -> declaracion_slices .)
    CONTINUE        reduce using rule 106 (slices -> declaracion_slices .)
    LLAVELEFT       shift and go to state 76


state 34

    (100) term -> numericos .
    (101) factor -> numericos .

    SUMA            reduce using rule 100 (term -> numericos .)
    RESTA           reduce using rule 100 (term -> numericos .)
    PRODUCTO        reduce using rule 100 (term -> numericos .)
    DIVISION        reduce using rule 100 (term -> numericos .)
    MODULO          reduce using rule 100 (term -> numericos .)
    $end            reduce using rule 100 (term -> numericos .)
    RETURN          reduce using rule 100 (term -> numericos .)
    LLAVERIGHT      reduce using rule 100 (term -> numericos .)
    BREAK           reduce using rule 100 (term -> numericos .)
    CONTINUE        reduce using rule 100 (term -> numericos .)
    MAYORQUE        reduce using rule 101 (factor -> numericos .)
    MENORQUE        reduce using rule 101 (factor -> numericos .)
    DIFERENTE       reduce using rule 101 (factor -> numericos .)
    ESIGUAL         reduce using rule 101 (factor -> numericos .)
    MENORIGUAL      reduce using rule 101 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 101 (factor -> numericos .)


state 35

    (123) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 77


state 36

    (104) numericos -> FLOTANTE .

    SUMA            reduce using rule 104 (numericos -> FLOTANTE .)
    RESTA           reduce using rule 104 (numericos -> FLOTANTE .)
    PRODUCTO        reduce using rule 104 (numericos -> FLOTANTE .)
    DIVISION        reduce using rule 104 (numericos -> FLOTANTE .)
    MODULO          reduce using rule 104 (numericos -> FLOTANTE .)
    $end            reduce using rule 104 (numericos -> FLOTANTE .)
    MAYORQUE        reduce using rule 104 (numericos -> FLOTANTE .)
    MENORQUE        reduce using rule 104 (numericos -> FLOTANTE .)
    DIFERENTE       reduce using rule 104 (numericos -> FLOTANTE .)
    ESIGUAL         reduce using rule 104 (numericos -> FLOTANTE .)
    MENORIGUAL      reduce using rule 104 (numericos -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 104 (numericos -> FLOTANTE .)
    PARRIGHT        reduce using rule 104 (numericos -> FLOTANTE .)
    RETURN          reduce using rule 104 (numericos -> FLOTANTE .)
    LLAVERIGHT      reduce using rule 104 (numericos -> FLOTANTE .)
    BREAK           reduce using rule 104 (numericos -> FLOTANTE .)
    CONTINUE        reduce using rule 104 (numericos -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 104 (numericos -> FLOTANTE .)
    COMA            reduce using rule 104 (numericos -> FLOTANTE .)
    AND             reduce using rule 104 (numericos -> FLOTANTE .)
    OR              reduce using rule 104 (numericos -> FLOTANTE .)
    LLAVELEFT       reduce using rule 104 (numericos -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 104 (numericos -> FLOTANTE .)


state 37

    (93) expresion -> expresion operadorArit . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    term                           shift and go to state 78
    numericos                      shift and go to state 66

state 38

    (94) operadorArit -> SUMA .

    ENTERO          reduce using rule 94 (operadorArit -> SUMA .)
    FLOTANTE        reduce using rule 94 (operadorArit -> SUMA .)
    PARLEFT         reduce using rule 94 (operadorArit -> SUMA .)


state 39

    (95) operadorArit -> RESTA .

    ENTERO          reduce using rule 95 (operadorArit -> RESTA .)
    FLOTANTE        reduce using rule 95 (operadorArit -> RESTA .)
    PARLEFT         reduce using rule 95 (operadorArit -> RESTA .)


state 40

    (96) operadorArit -> PRODUCTO .

    ENTERO          reduce using rule 96 (operadorArit -> PRODUCTO .)
    FLOTANTE        reduce using rule 96 (operadorArit -> PRODUCTO .)
    PARLEFT         reduce using rule 96 (operadorArit -> PRODUCTO .)


state 41

    (97) operadorArit -> DIVISION .

    ENTERO          reduce using rule 97 (operadorArit -> DIVISION .)
    FLOTANTE        reduce using rule 97 (operadorArit -> DIVISION .)
    PARLEFT         reduce using rule 97 (operadorArit -> DIVISION .)


state 42

    (98) operadorArit -> MODULO .

    ENTERO          reduce using rule 98 (operadorArit -> MODULO .)
    FLOTANTE        reduce using rule 98 (operadorArit -> MODULO .)
    PARLEFT         reduce using rule 98 (operadorArit -> MODULO .)


state 43

    (13) asignacion -> VAR VARIABLE . BOOL IGUAL booleano
    (14) asignacion -> VAR VARIABLE . INT IGUAL expresion
    (15) asignacion -> VAR VARIABLE . FLOAT IGUAL expresion
    (16) asignacion -> VAR VARIABLE . STRING IGUAL CADENA
    (17) asignacion -> VAR VARIABLE . puntero IGUAL refer
    (18) asignacion -> VAR VARIABLE . puntero
    (112) declaracion_slices -> VAR VARIABLE . IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> VAR VARIABLE . IGUAL CORCHLEFT CORCHRIGHT typeData
    (58) puntero -> . PRODUCTO typeData

    BOOL            shift and go to state 79
    INT             shift and go to state 81
    FLOAT           shift and go to state 82
    STRING          shift and go to state 83
    IGUAL           shift and go to state 80
    PRODUCTO        shift and go to state 85

    puntero                        shift and go to state 84

state 44

    (20) asignacion -> VARIABLE DECLARADOR . valor
    (68) array -> VARIABLE DECLARADOR . CORCHLEFT ENTERO CORCHRIGHT contArray
    (109) slices -> VARIABLE DECLARADOR . metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> VARIABLE DECLARADOR . metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
    (116) declaracion_slices -> VARIABLE DECLARADOR . CORCHLEFT CORCHRIGHT typeData
    (28) valor -> . booleano
    (29) valor -> . expresion
    (30) valor -> . CADENA
    (31) valor -> . VARIABLE
    (32) valor -> . mapa
    (33) valor -> . refer
    (111) metodos_slices -> . MAKE
    (25) booleano -> . condicion
    (26) booleano -> . TRUE
    (27) booleano -> . FALSE
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) refer -> . AMPERSAND VARIABLE
    (152) condicion -> . AND
    (153) condicion -> . OR
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    CORCHLEFT       shift and go to state 88
    CADENA          shift and go to state 92
    VARIABLE        shift and go to state 86
    MAKE            shift and go to state 95
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98
    MAP             shift and go to state 25
    AMPERSAND       shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    valor                          shift and go to state 87
    metodos_slices                 shift and go to state 89
    booleano                       shift and go to state 90
    expresion                      shift and go to state 91
    mapa                           shift and go to state 93
    refer                          shift and go to state 94
    condicion                      shift and go to state 96
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 45

    (21) asignacion -> VARIABLE IGUAL . valor
    (114) declaracion_slices -> VARIABLE IGUAL . CORCHLEFT ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> VARIABLE IGUAL . CORCHLEFT CORCHRIGHT typeData
    (28) valor -> . booleano
    (29) valor -> . expresion
    (30) valor -> . CADENA
    (31) valor -> . VARIABLE
    (32) valor -> . mapa
    (33) valor -> . refer
    (25) booleano -> . condicion
    (26) booleano -> . TRUE
    (27) booleano -> . FALSE
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) refer -> . AMPERSAND VARIABLE
    (152) condicion -> . AND
    (153) condicion -> . OR
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    CORCHLEFT       shift and go to state 103
    CADENA          shift and go to state 92
    VARIABLE        shift and go to state 86
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98
    MAP             shift and go to state 25
    AMPERSAND       shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    valor                          shift and go to state 102
    booleano                       shift and go to state 90
    expresion                      shift and go to state 91
    mapa                           shift and go to state 93
    refer                          shift and go to state 94
    condicion                      shift and go to state 96
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 46

    (22) asignacion -> VARIABLE MASIGUAL . acumular
    (34) acumular -> . expresion
    (35) acumular -> . CADENA
    (36) acumular -> . VARIABLE
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 107
    VARIABLE        shift and go to state 104
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    acumular                       shift and go to state 105
    expresion                      shift and go to state 106
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 47

    (23) asignacion -> VARIABLE MENOSIGUAL . expresion
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    expresion                      shift and go to state 108
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 48

    (24) asignacion -> derefer IGUAL . valor
    (28) valor -> . booleano
    (29) valor -> . expresion
    (30) valor -> . CADENA
    (31) valor -> . VARIABLE
    (32) valor -> . mapa
    (33) valor -> . refer
    (25) booleano -> . condicion
    (26) booleano -> . TRUE
    (27) booleano -> . FALSE
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (59) refer -> . AMPERSAND VARIABLE
    (152) condicion -> . AND
    (153) condicion -> . OR
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 92
    VARIABLE        shift and go to state 86
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98
    MAP             shift and go to state 25
    AMPERSAND       shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    valor                          shift and go to state 109
    booleano                       shift and go to state 90
    expresion                      shift and go to state 91
    mapa                           shift and go to state 93
    refer                          shift and go to state 94
    condicion                      shift and go to state 96
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 49

    (143) condiciones -> factor MAYORQUE . factor
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    factor                         shift and go to state 110
    numericos                      shift and go to state 61

state 50

    (144) condiciones -> factor MENORQUE . factor
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    factor                         shift and go to state 111
    numericos                      shift and go to state 61

state 51

    (145) condiciones -> factor DIFERENTE . factor
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    factor                         shift and go to state 112
    numericos                      shift and go to state 61

state 52

    (146) condiciones -> factor ESIGUAL . factor
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    factor                         shift and go to state 113
    numericos                      shift and go to state 61

state 53

    (147) condiciones -> factor MENORIGUAL . factor
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    factor                         shift and go to state 114
    numericos                      shift and go to state 61

state 54

    (148) condiciones -> factor MAYORIGUAL . factor
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    factor                         shift and go to state 115
    numericos                      shift and go to state 61

state 55

    (37) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> IF comparaciones . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> IF comparaciones . LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 116


state 56

    (102) factor -> VARIABLE .

    MAYORQUE        reduce using rule 102 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 102 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 102 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 102 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 102 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 102 (factor -> VARIABLE .)
    $end            reduce using rule 102 (factor -> VARIABLE .)
    AND             reduce using rule 102 (factor -> VARIABLE .)
    OR              reduce using rule 102 (factor -> VARIABLE .)
    LLAVELEFT       reduce using rule 102 (factor -> VARIABLE .)
    PARRIGHT        reduce using rule 102 (factor -> VARIABLE .)
    RETURN          reduce using rule 102 (factor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 102 (factor -> VARIABLE .)
    PUNTOCOMA       reduce using rule 102 (factor -> VARIABLE .)
    BREAK           reduce using rule 102 (factor -> VARIABLE .)
    CONTINUE        reduce using rule 102 (factor -> VARIABLE .)


state 57

    (149) comparaciones -> comparacion .
    (150) comparaciones -> comparacion . anado comparaciones
    (151) anado -> . condicion
    (152) condicion -> . AND
    (153) condicion -> . OR

    LLAVELEFT       reduce using rule 149 (comparaciones -> comparacion .)
    AND             shift and go to state 100
    OR              shift and go to state 101

    anado                          shift and go to state 117
    condicion                      shift and go to state 118

state 58

    (117) comparacion -> condiciones .

    AND             reduce using rule 117 (comparacion -> condiciones .)
    OR              reduce using rule 117 (comparacion -> condiciones .)
    LLAVELEFT       reduce using rule 117 (comparacion -> condiciones .)


state 59

    (118) comparacion -> NEGACION . PARLEFT condiciones PARRIGHT

    PARLEFT         shift and go to state 119


state 60

    (119) comparacion -> PARLEFT . condiciones PARRIGHT
    (105) numericos -> PARLEFT . expresion PARRIGHT
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    condiciones                    shift and go to state 120
    expresion                      shift and go to state 65
    factor                         shift and go to state 20
    term                           shift and go to state 19
    numericos                      shift and go to state 121

state 61

    (101) factor -> numericos .

    MAYORQUE        reduce using rule 101 (factor -> numericos .)
    MENORQUE        reduce using rule 101 (factor -> numericos .)
    DIFERENTE       reduce using rule 101 (factor -> numericos .)
    ESIGUAL         reduce using rule 101 (factor -> numericos .)
    MENORIGUAL      reduce using rule 101 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 101 (factor -> numericos .)
    $end            reduce using rule 101 (factor -> numericos .)
    AND             reduce using rule 101 (factor -> numericos .)
    OR              reduce using rule 101 (factor -> numericos .)
    LLAVELEFT       reduce using rule 101 (factor -> numericos .)
    PARRIGHT        reduce using rule 101 (factor -> numericos .)
    RETURN          reduce using rule 101 (factor -> numericos .)
    LLAVERIGHT      reduce using rule 101 (factor -> numericos .)
    PUNTOCOMA       reduce using rule 101 (factor -> numericos .)
    BREAK           reduce using rule 101 (factor -> numericos .)
    CONTINUE        reduce using rule 101 (factor -> numericos .)


state 62

    (61) sentenciaFor -> FOR inicio . PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 122


state 63

    (62) inicio -> VARIABLE . DECLARADOR ENTERO

    DECLARADOR      shift and go to state 123


state 64

    (82) print -> IMPRIMIR PARLEFT . contPrint PARRIGHT
    (83) contPrint -> . contenido masCont
    (84) contPrint -> . contenido
    (87) contenido -> . CADENA
    (88) contenido -> . VARIABLE
    (89) contenido -> . method
    (90) contenido -> .
    (78) method -> . methodArray
    (79) methodArray -> . namemetodoArr PARLEFT VARIABLE PARRIGHT
    (80) namemetodoArr -> . LEN
    (81) namemetodoArr -> . CAP

    CADENA          shift and go to state 126
    VARIABLE        shift and go to state 127
    COMA            reduce using rule 90 (contenido -> .)
    PARRIGHT        reduce using rule 90 (contenido -> .)
    LEN             shift and go to state 131
    CAP             shift and go to state 132

    contPrint                      shift and go to state 124
    contenido                      shift and go to state 125
    method                         shift and go to state 128
    methodArray                    shift and go to state 129
    namemetodoArr                  shift and go to state 130

state 65

    (105) numericos -> PARLEFT expresion . PARRIGHT
    (93) expresion -> expresion . operadorArit term
    (94) operadorArit -> . SUMA
    (95) operadorArit -> . RESTA
    (96) operadorArit -> . PRODUCTO
    (97) operadorArit -> . DIVISION
    (98) operadorArit -> . MODULO

    PARRIGHT        shift and go to state 133
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42

    operadorArit                   shift and go to state 37

state 66

    (100) term -> numericos .

    PARRIGHT        reduce using rule 100 (term -> numericos .)
    SUMA            reduce using rule 100 (term -> numericos .)
    RESTA           reduce using rule 100 (term -> numericos .)
    PRODUCTO        reduce using rule 100 (term -> numericos .)
    DIVISION        reduce using rule 100 (term -> numericos .)
    MODULO          reduce using rule 100 (term -> numericos .)
    $end            reduce using rule 100 (term -> numericos .)
    RETURN          reduce using rule 100 (term -> numericos .)
    LLAVERIGHT      reduce using rule 100 (term -> numericos .)
    BREAK           reduce using rule 100 (term -> numericos .)
    CONTINUE        reduce using rule 100 (term -> numericos .)
    DOSPUNTOS       reduce using rule 100 (term -> numericos .)
    COMA            reduce using rule 100 (term -> numericos .)


state 67

    (47) mapa -> MAP CORCHLEFT . typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> MAP CORCHLEFT . typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 134

state 68

    (58) puntero -> PRODUCTO typeData .

    $end            reduce using rule 58 (puntero -> PRODUCTO typeData .)
    IGUAL           reduce using rule 58 (puntero -> PRODUCTO typeData .)
    RETURN          reduce using rule 58 (puntero -> PRODUCTO typeData .)
    LLAVERIGHT      reduce using rule 58 (puntero -> PRODUCTO typeData .)
    BREAK           reduce using rule 58 (puntero -> PRODUCTO typeData .)
    CONTINUE        reduce using rule 58 (puntero -> PRODUCTO typeData .)


state 69

    (60) derefer -> PRODUCTO VARIABLE .

    IGUAL           reduce using rule 60 (derefer -> PRODUCTO VARIABLE .)


state 70

    (64) typeData -> BOOL .

    $end            reduce using rule 64 (typeData -> BOOL .)
    RETURN          reduce using rule 64 (typeData -> BOOL .)
    LLAVERIGHT      reduce using rule 64 (typeData -> BOOL .)
    BREAK           reduce using rule 64 (typeData -> BOOL .)
    CONTINUE        reduce using rule 64 (typeData -> BOOL .)
    CORCHRIGHT      reduce using rule 64 (typeData -> BOOL .)
    IGUAL           reduce using rule 64 (typeData -> BOOL .)
    VARIABLE        reduce using rule 64 (typeData -> BOOL .)
    LLAVELEFT       reduce using rule 64 (typeData -> BOOL .)
    COMA            reduce using rule 64 (typeData -> BOOL .)


state 71

    (65) typeData -> INT .

    $end            reduce using rule 65 (typeData -> INT .)
    RETURN          reduce using rule 65 (typeData -> INT .)
    LLAVERIGHT      reduce using rule 65 (typeData -> INT .)
    BREAK           reduce using rule 65 (typeData -> INT .)
    CONTINUE        reduce using rule 65 (typeData -> INT .)
    CORCHRIGHT      reduce using rule 65 (typeData -> INT .)
    IGUAL           reduce using rule 65 (typeData -> INT .)
    VARIABLE        reduce using rule 65 (typeData -> INT .)
    LLAVELEFT       reduce using rule 65 (typeData -> INT .)
    COMA            reduce using rule 65 (typeData -> INT .)


state 72

    (66) typeData -> FLOAT .

    $end            reduce using rule 66 (typeData -> FLOAT .)
    RETURN          reduce using rule 66 (typeData -> FLOAT .)
    LLAVERIGHT      reduce using rule 66 (typeData -> FLOAT .)
    BREAK           reduce using rule 66 (typeData -> FLOAT .)
    CONTINUE        reduce using rule 66 (typeData -> FLOAT .)
    CORCHRIGHT      reduce using rule 66 (typeData -> FLOAT .)
    IGUAL           reduce using rule 66 (typeData -> FLOAT .)
    VARIABLE        reduce using rule 66 (typeData -> FLOAT .)
    LLAVELEFT       reduce using rule 66 (typeData -> FLOAT .)
    COMA            reduce using rule 66 (typeData -> FLOAT .)


state 73

    (67) typeData -> STRING .

    $end            reduce using rule 67 (typeData -> STRING .)
    RETURN          reduce using rule 67 (typeData -> STRING .)
    LLAVERIGHT      reduce using rule 67 (typeData -> STRING .)
    BREAK           reduce using rule 67 (typeData -> STRING .)
    CONTINUE        reduce using rule 67 (typeData -> STRING .)
    CORCHRIGHT      reduce using rule 67 (typeData -> STRING .)
    IGUAL           reduce using rule 67 (typeData -> STRING .)
    VARIABLE        reduce using rule 67 (typeData -> STRING .)
    LLAVELEFT       reduce using rule 67 (typeData -> STRING .)
    COMA            reduce using rule 67 (typeData -> STRING .)


state 74

    (91) lectura -> SCAN PARLEFT . contScan PARRIGHT
    (92) contScan -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 136

    contScan                       shift and go to state 135

state 75

    (134) switch -> SWITCH VARIABLE . LLAVELEFT bloque_switch LLAVERIGHT

    LLAVELEFT       shift and go to state 137


state 76

    (107) slices -> declaracion_slices LLAVELEFT . contArrayEnteros LLAVERIGHT
    (108) slices -> declaracion_slices LLAVELEFT . contArrayCadenas LLAVERIGHT
    (72) contArrayEnteros -> . ENTERO COMA ENTERO
    (73) contArrayEnteros -> . contArrayEnteros COMA ENTERO
    (74) contArrayCadenas -> . CADENA COMA CADENA
    (75) contArrayCadenas -> . contArrayCadenas COMA CADENA

    ENTERO          shift and go to state 140
    CADENA          shift and go to state 141

    contArrayEnteros               shift and go to state 138
    contArrayCadenas               shift and go to state 139

state 77

    (123) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    PARLEFT         shift and go to state 142


state 78

    (93) expresion -> expresion operadorArit term .

    SUMA            reduce using rule 93 (expresion -> expresion operadorArit term .)
    RESTA           reduce using rule 93 (expresion -> expresion operadorArit term .)
    PRODUCTO        reduce using rule 93 (expresion -> expresion operadorArit term .)
    DIVISION        reduce using rule 93 (expresion -> expresion operadorArit term .)
    MODULO          reduce using rule 93 (expresion -> expresion operadorArit term .)
    $end            reduce using rule 93 (expresion -> expresion operadorArit term .)
    PARRIGHT        reduce using rule 93 (expresion -> expresion operadorArit term .)
    RETURN          reduce using rule 93 (expresion -> expresion operadorArit term .)
    LLAVERIGHT      reduce using rule 93 (expresion -> expresion operadorArit term .)
    BREAK           reduce using rule 93 (expresion -> expresion operadorArit term .)
    CONTINUE        reduce using rule 93 (expresion -> expresion operadorArit term .)
    DOSPUNTOS       reduce using rule 93 (expresion -> expresion operadorArit term .)
    COMA            reduce using rule 93 (expresion -> expresion operadorArit term .)


state 79

    (13) asignacion -> VAR VARIABLE BOOL . IGUAL booleano

    IGUAL           shift and go to state 143


state 80

    (112) declaracion_slices -> VAR VARIABLE IGUAL . CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> VAR VARIABLE IGUAL . CORCHLEFT CORCHRIGHT typeData

    CORCHLEFT       shift and go to state 144


state 81

    (14) asignacion -> VAR VARIABLE INT . IGUAL expresion

    IGUAL           shift and go to state 145


state 82

    (15) asignacion -> VAR VARIABLE FLOAT . IGUAL expresion

    IGUAL           shift and go to state 146


state 83

    (16) asignacion -> VAR VARIABLE STRING . IGUAL CADENA

    IGUAL           shift and go to state 147


state 84

    (17) asignacion -> VAR VARIABLE puntero . IGUAL refer
    (18) asignacion -> VAR VARIABLE puntero .

    IGUAL           shift and go to state 148
    $end            reduce using rule 18 (asignacion -> VAR VARIABLE puntero .)
    RETURN          reduce using rule 18 (asignacion -> VAR VARIABLE puntero .)
    LLAVERIGHT      reduce using rule 18 (asignacion -> VAR VARIABLE puntero .)
    BREAK           reduce using rule 18 (asignacion -> VAR VARIABLE puntero .)
    CONTINUE        reduce using rule 18 (asignacion -> VAR VARIABLE puntero .)


state 85

    (58) puntero -> PRODUCTO . typeData
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 68

state 86

    (31) valor -> VARIABLE .

    $end            reduce using rule 31 (valor -> VARIABLE .)
    RETURN          reduce using rule 31 (valor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 31 (valor -> VARIABLE .)
    BREAK           reduce using rule 31 (valor -> VARIABLE .)
    CONTINUE        reduce using rule 31 (valor -> VARIABLE .)


state 87

    (20) asignacion -> VARIABLE DECLARADOR valor .

    $end            reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    RETURN          reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    LLAVERIGHT      reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    BREAK           reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)
    CONTINUE        reduce using rule 20 (asignacion -> VARIABLE DECLARADOR valor .)


state 88

    (68) array -> VARIABLE DECLARADOR CORCHLEFT . ENTERO CORCHRIGHT contArray
    (116) declaracion_slices -> VARIABLE DECLARADOR CORCHLEFT . CORCHRIGHT typeData

    ENTERO          shift and go to state 149
    CORCHRIGHT      shift and go to state 150


state 89

    (109) slices -> VARIABLE DECLARADOR metodos_slices . PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> VARIABLE DECLARADOR metodos_slices . PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT

    PARLEFT         shift and go to state 151


state 90

    (28) valor -> booleano .

    $end            reduce using rule 28 (valor -> booleano .)
    RETURN          reduce using rule 28 (valor -> booleano .)
    LLAVERIGHT      reduce using rule 28 (valor -> booleano .)
    BREAK           reduce using rule 28 (valor -> booleano .)
    CONTINUE        reduce using rule 28 (valor -> booleano .)


state 91

    (29) valor -> expresion .
    (93) expresion -> expresion . operadorArit term
    (94) operadorArit -> . SUMA
    (95) operadorArit -> . RESTA
    (96) operadorArit -> . PRODUCTO
    (97) operadorArit -> . DIVISION
    (98) operadorArit -> . MODULO

    $end            reduce using rule 29 (valor -> expresion .)
    RETURN          reduce using rule 29 (valor -> expresion .)
    LLAVERIGHT      reduce using rule 29 (valor -> expresion .)
    BREAK           reduce using rule 29 (valor -> expresion .)
    CONTINUE        reduce using rule 29 (valor -> expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42

    operadorArit                   shift and go to state 37

state 92

    (30) valor -> CADENA .

    $end            reduce using rule 30 (valor -> CADENA .)
    RETURN          reduce using rule 30 (valor -> CADENA .)
    LLAVERIGHT      reduce using rule 30 (valor -> CADENA .)
    BREAK           reduce using rule 30 (valor -> CADENA .)
    CONTINUE        reduce using rule 30 (valor -> CADENA .)


state 93

    (32) valor -> mapa .

    $end            reduce using rule 32 (valor -> mapa .)
    RETURN          reduce using rule 32 (valor -> mapa .)
    LLAVERIGHT      reduce using rule 32 (valor -> mapa .)
    BREAK           reduce using rule 32 (valor -> mapa .)
    CONTINUE        reduce using rule 32 (valor -> mapa .)


state 94

    (33) valor -> refer .

    $end            reduce using rule 33 (valor -> refer .)
    RETURN          reduce using rule 33 (valor -> refer .)
    LLAVERIGHT      reduce using rule 33 (valor -> refer .)
    BREAK           reduce using rule 33 (valor -> refer .)
    CONTINUE        reduce using rule 33 (valor -> refer .)


state 95

    (111) metodos_slices -> MAKE .

    PARLEFT         reduce using rule 111 (metodos_slices -> MAKE .)


state 96

    (25) booleano -> condicion .

    $end            reduce using rule 25 (booleano -> condicion .)
    RETURN          reduce using rule 25 (booleano -> condicion .)
    LLAVERIGHT      reduce using rule 25 (booleano -> condicion .)
    BREAK           reduce using rule 25 (booleano -> condicion .)
    CONTINUE        reduce using rule 25 (booleano -> condicion .)


state 97

    (26) booleano -> TRUE .

    $end            reduce using rule 26 (booleano -> TRUE .)
    RETURN          reduce using rule 26 (booleano -> TRUE .)
    LLAVERIGHT      reduce using rule 26 (booleano -> TRUE .)
    BREAK           reduce using rule 26 (booleano -> TRUE .)
    CONTINUE        reduce using rule 26 (booleano -> TRUE .)


state 98

    (27) booleano -> FALSE .

    $end            reduce using rule 27 (booleano -> FALSE .)
    RETURN          reduce using rule 27 (booleano -> FALSE .)
    LLAVERIGHT      reduce using rule 27 (booleano -> FALSE .)
    BREAK           reduce using rule 27 (booleano -> FALSE .)
    CONTINUE        reduce using rule 27 (booleano -> FALSE .)


state 99

    (59) refer -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 152


state 100

    (152) condicion -> AND .

    $end            reduce using rule 152 (condicion -> AND .)
    RETURN          reduce using rule 152 (condicion -> AND .)
    LLAVERIGHT      reduce using rule 152 (condicion -> AND .)
    BREAK           reduce using rule 152 (condicion -> AND .)
    CONTINUE        reduce using rule 152 (condicion -> AND .)
    NEGACION        reduce using rule 152 (condicion -> AND .)
    PARLEFT         reduce using rule 152 (condicion -> AND .)
    VARIABLE        reduce using rule 152 (condicion -> AND .)
    BOOL            reduce using rule 152 (condicion -> AND .)
    ENTERO          reduce using rule 152 (condicion -> AND .)
    FLOTANTE        reduce using rule 152 (condicion -> AND .)


state 101

    (153) condicion -> OR .

    $end            reduce using rule 153 (condicion -> OR .)
    RETURN          reduce using rule 153 (condicion -> OR .)
    LLAVERIGHT      reduce using rule 153 (condicion -> OR .)
    BREAK           reduce using rule 153 (condicion -> OR .)
    CONTINUE        reduce using rule 153 (condicion -> OR .)
    NEGACION        reduce using rule 153 (condicion -> OR .)
    PARLEFT         reduce using rule 153 (condicion -> OR .)
    VARIABLE        reduce using rule 153 (condicion -> OR .)
    BOOL            reduce using rule 153 (condicion -> OR .)
    ENTERO          reduce using rule 153 (condicion -> OR .)
    FLOTANTE        reduce using rule 153 (condicion -> OR .)


state 102

    (21) asignacion -> VARIABLE IGUAL valor .

    $end            reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    LLAVERIGHT      reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    BREAK           reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)
    CONTINUE        reduce using rule 21 (asignacion -> VARIABLE IGUAL valor .)


state 103

    (114) declaracion_slices -> VARIABLE IGUAL CORCHLEFT . ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> VARIABLE IGUAL CORCHLEFT . CORCHRIGHT typeData

    ENTERO          shift and go to state 153
    CORCHRIGHT      shift and go to state 154


state 104

    (36) acumular -> VARIABLE .

    $end            reduce using rule 36 (acumular -> VARIABLE .)
    RETURN          reduce using rule 36 (acumular -> VARIABLE .)
    LLAVERIGHT      reduce using rule 36 (acumular -> VARIABLE .)
    BREAK           reduce using rule 36 (acumular -> VARIABLE .)
    CONTINUE        reduce using rule 36 (acumular -> VARIABLE .)


state 105

    (22) asignacion -> VARIABLE MASIGUAL acumular .

    $end            reduce using rule 22 (asignacion -> VARIABLE MASIGUAL acumular .)
    RETURN          reduce using rule 22 (asignacion -> VARIABLE MASIGUAL acumular .)
    LLAVERIGHT      reduce using rule 22 (asignacion -> VARIABLE MASIGUAL acumular .)
    BREAK           reduce using rule 22 (asignacion -> VARIABLE MASIGUAL acumular .)
    CONTINUE        reduce using rule 22 (asignacion -> VARIABLE MASIGUAL acumular .)


state 106

    (34) acumular -> expresion .
    (93) expresion -> expresion . operadorArit term
    (94) operadorArit -> . SUMA
    (95) operadorArit -> . RESTA
    (96) operadorArit -> . PRODUCTO
    (97) operadorArit -> . DIVISION
    (98) operadorArit -> . MODULO

    $end            reduce using rule 34 (acumular -> expresion .)
    RETURN          reduce using rule 34 (acumular -> expresion .)
    LLAVERIGHT      reduce using rule 34 (acumular -> expresion .)
    BREAK           reduce using rule 34 (acumular -> expresion .)
    CONTINUE        reduce using rule 34 (acumular -> expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42

    operadorArit                   shift and go to state 37

state 107

    (35) acumular -> CADENA .

    $end            reduce using rule 35 (acumular -> CADENA .)
    RETURN          reduce using rule 35 (acumular -> CADENA .)
    LLAVERIGHT      reduce using rule 35 (acumular -> CADENA .)
    BREAK           reduce using rule 35 (acumular -> CADENA .)
    CONTINUE        reduce using rule 35 (acumular -> CADENA .)


state 108

    (23) asignacion -> VARIABLE MENOSIGUAL expresion .
    (93) expresion -> expresion . operadorArit term
    (94) operadorArit -> . SUMA
    (95) operadorArit -> . RESTA
    (96) operadorArit -> . PRODUCTO
    (97) operadorArit -> . DIVISION
    (98) operadorArit -> . MODULO

    $end            reduce using rule 23 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    RETURN          reduce using rule 23 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    LLAVERIGHT      reduce using rule 23 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    BREAK           reduce using rule 23 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    CONTINUE        reduce using rule 23 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42

    operadorArit                   shift and go to state 37

state 109

    (24) asignacion -> derefer IGUAL valor .

    $end            reduce using rule 24 (asignacion -> derefer IGUAL valor .)
    RETURN          reduce using rule 24 (asignacion -> derefer IGUAL valor .)
    LLAVERIGHT      reduce using rule 24 (asignacion -> derefer IGUAL valor .)
    BREAK           reduce using rule 24 (asignacion -> derefer IGUAL valor .)
    CONTINUE        reduce using rule 24 (asignacion -> derefer IGUAL valor .)


state 110

    (143) condiciones -> factor MAYORQUE factor .

    $end            reduce using rule 143 (condiciones -> factor MAYORQUE factor .)
    AND             reduce using rule 143 (condiciones -> factor MAYORQUE factor .)
    OR              reduce using rule 143 (condiciones -> factor MAYORQUE factor .)
    LLAVELEFT       reduce using rule 143 (condiciones -> factor MAYORQUE factor .)
    PARRIGHT        reduce using rule 143 (condiciones -> factor MAYORQUE factor .)
    RETURN          reduce using rule 143 (condiciones -> factor MAYORQUE factor .)
    LLAVERIGHT      reduce using rule 143 (condiciones -> factor MAYORQUE factor .)
    PUNTOCOMA       reduce using rule 143 (condiciones -> factor MAYORQUE factor .)
    BREAK           reduce using rule 143 (condiciones -> factor MAYORQUE factor .)
    CONTINUE        reduce using rule 143 (condiciones -> factor MAYORQUE factor .)


state 111

    (144) condiciones -> factor MENORQUE factor .

    $end            reduce using rule 144 (condiciones -> factor MENORQUE factor .)
    AND             reduce using rule 144 (condiciones -> factor MENORQUE factor .)
    OR              reduce using rule 144 (condiciones -> factor MENORQUE factor .)
    LLAVELEFT       reduce using rule 144 (condiciones -> factor MENORQUE factor .)
    PARRIGHT        reduce using rule 144 (condiciones -> factor MENORQUE factor .)
    RETURN          reduce using rule 144 (condiciones -> factor MENORQUE factor .)
    LLAVERIGHT      reduce using rule 144 (condiciones -> factor MENORQUE factor .)
    PUNTOCOMA       reduce using rule 144 (condiciones -> factor MENORQUE factor .)
    BREAK           reduce using rule 144 (condiciones -> factor MENORQUE factor .)
    CONTINUE        reduce using rule 144 (condiciones -> factor MENORQUE factor .)


state 112

    (145) condiciones -> factor DIFERENTE factor .

    $end            reduce using rule 145 (condiciones -> factor DIFERENTE factor .)
    AND             reduce using rule 145 (condiciones -> factor DIFERENTE factor .)
    OR              reduce using rule 145 (condiciones -> factor DIFERENTE factor .)
    LLAVELEFT       reduce using rule 145 (condiciones -> factor DIFERENTE factor .)
    PARRIGHT        reduce using rule 145 (condiciones -> factor DIFERENTE factor .)
    RETURN          reduce using rule 145 (condiciones -> factor DIFERENTE factor .)
    LLAVERIGHT      reduce using rule 145 (condiciones -> factor DIFERENTE factor .)
    PUNTOCOMA       reduce using rule 145 (condiciones -> factor DIFERENTE factor .)
    BREAK           reduce using rule 145 (condiciones -> factor DIFERENTE factor .)
    CONTINUE        reduce using rule 145 (condiciones -> factor DIFERENTE factor .)


state 113

    (146) condiciones -> factor ESIGUAL factor .

    $end            reduce using rule 146 (condiciones -> factor ESIGUAL factor .)
    AND             reduce using rule 146 (condiciones -> factor ESIGUAL factor .)
    OR              reduce using rule 146 (condiciones -> factor ESIGUAL factor .)
    LLAVELEFT       reduce using rule 146 (condiciones -> factor ESIGUAL factor .)
    PARRIGHT        reduce using rule 146 (condiciones -> factor ESIGUAL factor .)
    RETURN          reduce using rule 146 (condiciones -> factor ESIGUAL factor .)
    LLAVERIGHT      reduce using rule 146 (condiciones -> factor ESIGUAL factor .)
    PUNTOCOMA       reduce using rule 146 (condiciones -> factor ESIGUAL factor .)
    BREAK           reduce using rule 146 (condiciones -> factor ESIGUAL factor .)
    CONTINUE        reduce using rule 146 (condiciones -> factor ESIGUAL factor .)


state 114

    (147) condiciones -> factor MENORIGUAL factor .

    $end            reduce using rule 147 (condiciones -> factor MENORIGUAL factor .)
    AND             reduce using rule 147 (condiciones -> factor MENORIGUAL factor .)
    OR              reduce using rule 147 (condiciones -> factor MENORIGUAL factor .)
    LLAVELEFT       reduce using rule 147 (condiciones -> factor MENORIGUAL factor .)
    PARRIGHT        reduce using rule 147 (condiciones -> factor MENORIGUAL factor .)
    RETURN          reduce using rule 147 (condiciones -> factor MENORIGUAL factor .)
    LLAVERIGHT      reduce using rule 147 (condiciones -> factor MENORIGUAL factor .)
    PUNTOCOMA       reduce using rule 147 (condiciones -> factor MENORIGUAL factor .)
    BREAK           reduce using rule 147 (condiciones -> factor MENORIGUAL factor .)
    CONTINUE        reduce using rule 147 (condiciones -> factor MENORIGUAL factor .)


state 115

    (148) condiciones -> factor MAYORIGUAL factor .

    $end            reduce using rule 148 (condiciones -> factor MAYORIGUAL factor .)
    AND             reduce using rule 148 (condiciones -> factor MAYORIGUAL factor .)
    OR              reduce using rule 148 (condiciones -> factor MAYORIGUAL factor .)
    LLAVELEFT       reduce using rule 148 (condiciones -> factor MAYORIGUAL factor .)
    PARRIGHT        reduce using rule 148 (condiciones -> factor MAYORIGUAL factor .)
    RETURN          reduce using rule 148 (condiciones -> factor MAYORIGUAL factor .)
    LLAVERIGHT      reduce using rule 148 (condiciones -> factor MAYORIGUAL factor .)
    PUNTOCOMA       reduce using rule 148 (condiciones -> factor MAYORIGUAL factor .)
    BREAK           reduce using rule 148 (condiciones -> factor MAYORIGUAL factor .)
    CONTINUE        reduce using rule 148 (condiciones -> factor MAYORIGUAL factor .)


state 116

    (37) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones LLAVERIGHT
    (40) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones LLAVERIGHT else
    (41) sentenciaIf -> IF comparaciones LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> IF comparaciones LLAVELEFT . RETURN VARIABLE LLAVERIGHT else
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . slices
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL acumular
    (23) asignacion -> . VARIABLE MENOSIGUAL expresion
    (24) asignacion -> . derefer IGUAL valor
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (82) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO typeData
    (91) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (134) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (120) funcion -> . funcion_sin_parametro
    (121) funcion -> . funcion_parametro
    (122) funcion -> . funcion_sin_parametro_return
    (106) slices -> . declaracion_slices
    (107) slices -> . declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT
    (108) slices -> . declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT
    (109) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
    (60) derefer -> . PRODUCTO VARIABLE
    (100) term -> . numericos
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (123) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (112) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (114) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (116) declaracion_slices -> . VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 156
    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 25
    PRODUCTO        shift and go to state 26
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 16
    FUNC            shift and go to state 35
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    instrucciones                  shift and go to state 155
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    slices                         shift and go to state 17
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 20
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    declaracion_slices             shift and go to state 33
    numericos                      shift and go to state 34

state 117

    (150) comparaciones -> comparacion anado . comparaciones
    (149) comparaciones -> . comparacion
    (150) comparaciones -> . comparacion anado comparaciones
    (117) comparacion -> . condiciones
    (118) comparacion -> . NEGACION PARLEFT condiciones PARRIGHT
    (119) comparacion -> . PARLEFT condiciones PARRIGHT
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    NEGACION        shift and go to state 59
    PARLEFT         shift and go to state 60
    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36

    comparacion                    shift and go to state 57
    comparaciones                  shift and go to state 157
    condiciones                    shift and go to state 58
    factor                         shift and go to state 20
    numericos                      shift and go to state 61

state 118

    (151) anado -> condicion .

    NEGACION        reduce using rule 151 (anado -> condicion .)
    PARLEFT         reduce using rule 151 (anado -> condicion .)
    VARIABLE        reduce using rule 151 (anado -> condicion .)
    BOOL            reduce using rule 151 (anado -> condicion .)
    ENTERO          reduce using rule 151 (anado -> condicion .)
    FLOTANTE        reduce using rule 151 (anado -> condicion .)


state 119

    (118) comparacion -> NEGACION PARLEFT . condiciones PARRIGHT
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    condiciones                    shift and go to state 158
    factor                         shift and go to state 20
    numericos                      shift and go to state 61

state 120

    (119) comparacion -> PARLEFT condiciones . PARRIGHT

    PARRIGHT        shift and go to state 159


state 121

    (101) factor -> numericos .
    (100) term -> numericos .

    MAYORQUE        reduce using rule 101 (factor -> numericos .)
    MENORQUE        reduce using rule 101 (factor -> numericos .)
    DIFERENTE       reduce using rule 101 (factor -> numericos .)
    ESIGUAL         reduce using rule 101 (factor -> numericos .)
    MENORIGUAL      reduce using rule 101 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 101 (factor -> numericos .)
    PARRIGHT        reduce using rule 100 (term -> numericos .)
    SUMA            reduce using rule 100 (term -> numericos .)
    RESTA           reduce using rule 100 (term -> numericos .)
    PRODUCTO        reduce using rule 100 (term -> numericos .)
    DIVISION        reduce using rule 100 (term -> numericos .)
    MODULO          reduce using rule 100 (term -> numericos .)


state 122

    (61) sentenciaFor -> FOR inicio PUNTOCOMA . condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 56
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    condiciones                    shift and go to state 160
    factor                         shift and go to state 20
    numericos                      shift and go to state 61

state 123

    (62) inicio -> VARIABLE DECLARADOR . ENTERO

    ENTERO          shift and go to state 161


state 124

    (82) print -> IMPRIMIR PARLEFT contPrint . PARRIGHT

    PARRIGHT        shift and go to state 162


state 125

    (83) contPrint -> contenido . masCont
    (84) contPrint -> contenido .
    (85) masCont -> . masCont COMA contenido
    (86) masCont -> . COMA contenido

    PARRIGHT        reduce using rule 84 (contPrint -> contenido .)
    COMA            shift and go to state 164

    masCont                        shift and go to state 163

state 126

    (87) contenido -> CADENA .

    COMA            reduce using rule 87 (contenido -> CADENA .)
    PARRIGHT        reduce using rule 87 (contenido -> CADENA .)


state 127

    (88) contenido -> VARIABLE .

    COMA            reduce using rule 88 (contenido -> VARIABLE .)
    PARRIGHT        reduce using rule 88 (contenido -> VARIABLE .)


state 128

    (89) contenido -> method .

    COMA            reduce using rule 89 (contenido -> method .)
    PARRIGHT        reduce using rule 89 (contenido -> method .)


state 129

    (78) method -> methodArray .

    COMA            reduce using rule 78 (method -> methodArray .)
    PARRIGHT        reduce using rule 78 (method -> methodArray .)


state 130

    (79) methodArray -> namemetodoArr . PARLEFT VARIABLE PARRIGHT

    PARLEFT         shift and go to state 165


state 131

    (80) namemetodoArr -> LEN .

    PARLEFT         reduce using rule 80 (namemetodoArr -> LEN .)


state 132

    (81) namemetodoArr -> CAP .

    PARLEFT         reduce using rule 81 (namemetodoArr -> CAP .)


state 133

    (105) numericos -> PARLEFT expresion PARRIGHT .

    SUMA            reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    RESTA           reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    PRODUCTO        reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    DIVISION        reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    MODULO          reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    $end            reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORQUE        reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORQUE        reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    DIFERENTE       reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    ESIGUAL         reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORIGUAL      reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORIGUAL      reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    PARRIGHT        reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    RETURN          reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVERIGHT      reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    BREAK           reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    CONTINUE        reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    DOSPUNTOS       reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    COMA            reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    AND             reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    OR              reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVELEFT       reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)
    PUNTOCOMA       reduce using rule 105 (numericos -> PARLEFT expresion PARRIGHT .)


state 134

    (47) mapa -> MAP CORCHLEFT typeData . CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> MAP CORCHLEFT typeData . CORCHRIGHT typeData LLAVELEFT LLAVERIGHT

    CORCHRIGHT      shift and go to state 166


state 135

    (91) lectura -> SCAN PARLEFT contScan . PARRIGHT

    PARRIGHT        shift and go to state 167


state 136

    (92) contScan -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 168


state 137

    (134) switch -> SWITCH VARIABLE LLAVELEFT . bloque_switch LLAVERIGHT
    (135) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK
    (136) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones CONTINUE
    (137) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
    (138) bloque_switch -> . switch_default
    (142) switch_default -> . DEFAULT DOSPUNTOS instrucciones

    CASE            shift and go to state 170
    DEFAULT         shift and go to state 172

    bloque_switch                  shift and go to state 169
    switch_default                 shift and go to state 171

state 138

    (107) slices -> declaracion_slices LLAVELEFT contArrayEnteros . LLAVERIGHT
    (73) contArrayEnteros -> contArrayEnteros . COMA ENTERO

    LLAVERIGHT      shift and go to state 173
    COMA            shift and go to state 174


state 139

    (108) slices -> declaracion_slices LLAVELEFT contArrayCadenas . LLAVERIGHT
    (75) contArrayCadenas -> contArrayCadenas . COMA CADENA

    LLAVERIGHT      shift and go to state 175
    COMA            shift and go to state 176


state 140

    (72) contArrayEnteros -> ENTERO . COMA ENTERO

    COMA            shift and go to state 177


state 141

    (74) contArrayCadenas -> CADENA . COMA CADENA

    COMA            shift and go to state 178


state 142

    (123) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (130) parametros -> . VARIABLE
    (131) parametros -> . VARIABLE COMA parametros
    (132) parametros -> . typeData VARIABLE
    (133) parametros -> . typeData VARIABLE COMA parametros
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    PARRIGHT        shift and go to state 180
    VARIABLE        shift and go to state 179
    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    parametros                     shift and go to state 181
    typeData                       shift and go to state 182

state 143

    (13) asignacion -> VAR VARIABLE BOOL IGUAL . booleano
    (25) booleano -> . condicion
    (26) booleano -> . TRUE
    (27) booleano -> . FALSE
    (152) condicion -> . AND
    (153) condicion -> . OR

    TRUE            shift and go to state 97
    FALSE           shift and go to state 98
    AND             shift and go to state 100
    OR              shift and go to state 101

    booleano                       shift and go to state 183
    condicion                      shift and go to state 96

state 144

    (112) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT . ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT . CORCHRIGHT typeData

    ENTERO          shift and go to state 184
    CORCHRIGHT      shift and go to state 185


state 145

    (14) asignacion -> VAR VARIABLE INT IGUAL . expresion
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    expresion                      shift and go to state 186
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 146

    (15) asignacion -> VAR VARIABLE FLOAT IGUAL . expresion
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    expresion                      shift and go to state 187
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 147

    (16) asignacion -> VAR VARIABLE STRING IGUAL . CADENA

    CADENA          shift and go to state 188


state 148

    (17) asignacion -> VAR VARIABLE puntero IGUAL . refer
    (59) refer -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 99

    refer                          shift and go to state 189

state 149

    (68) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO . CORCHRIGHT contArray

    CORCHRIGHT      shift and go to state 190


state 150

    (116) declaracion_slices -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT . typeData
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 191

state 151

    (109) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT . CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT . CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT

    CORCHLEFT       shift and go to state 192


state 152

    (59) refer -> AMPERSAND VARIABLE .

    $end            reduce using rule 59 (refer -> AMPERSAND VARIABLE .)
    RETURN          reduce using rule 59 (refer -> AMPERSAND VARIABLE .)
    LLAVERIGHT      reduce using rule 59 (refer -> AMPERSAND VARIABLE .)
    BREAK           reduce using rule 59 (refer -> AMPERSAND VARIABLE .)
    CONTINUE        reduce using rule 59 (refer -> AMPERSAND VARIABLE .)


state 153

    (114) declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO . CORCHRIGHT typeData

    CORCHRIGHT      shift and go to state 193


state 154

    (115) declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT . typeData
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 194

state 155

    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . LLAVERIGHT
    (40) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . LLAVERIGHT else

    RETURN          shift and go to state 195
    LLAVERIGHT      shift and go to state 196


state 156

    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN . VARIABLE LLAVERIGHT
    (42) sentenciaIf -> IF comparaciones LLAVELEFT RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 197


state 157

    (150) comparaciones -> comparacion anado comparaciones .

    LLAVELEFT       reduce using rule 150 (comparaciones -> comparacion anado comparaciones .)


state 158

    (118) comparacion -> NEGACION PARLEFT condiciones . PARRIGHT

    PARRIGHT        shift and go to state 198


state 159

    (119) comparacion -> PARLEFT condiciones PARRIGHT .

    AND             reduce using rule 119 (comparacion -> PARLEFT condiciones PARRIGHT .)
    OR              reduce using rule 119 (comparacion -> PARLEFT condiciones PARRIGHT .)
    LLAVELEFT       reduce using rule 119 (comparacion -> PARLEFT condiciones PARRIGHT .)


state 160

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones . PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 199


state 161

    (62) inicio -> VARIABLE DECLARADOR ENTERO .

    PUNTOCOMA       reduce using rule 62 (inicio -> VARIABLE DECLARADOR ENTERO .)


state 162

    (82) print -> IMPRIMIR PARLEFT contPrint PARRIGHT .

    $end            reduce using rule 82 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    RETURN          reduce using rule 82 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    LLAVERIGHT      reduce using rule 82 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    BREAK           reduce using rule 82 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    CONTINUE        reduce using rule 82 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)


state 163

    (83) contPrint -> contenido masCont .
    (85) masCont -> masCont . COMA contenido

    PARRIGHT        reduce using rule 83 (contPrint -> contenido masCont .)
    COMA            shift and go to state 200


state 164

    (86) masCont -> COMA . contenido
    (87) contenido -> . CADENA
    (88) contenido -> . VARIABLE
    (89) contenido -> . method
    (90) contenido -> .
    (78) method -> . methodArray
    (79) methodArray -> . namemetodoArr PARLEFT VARIABLE PARRIGHT
    (80) namemetodoArr -> . LEN
    (81) namemetodoArr -> . CAP

    CADENA          shift and go to state 126
    VARIABLE        shift and go to state 127
    COMA            reduce using rule 90 (contenido -> .)
    PARRIGHT        reduce using rule 90 (contenido -> .)
    LEN             shift and go to state 131
    CAP             shift and go to state 132

    contenido                      shift and go to state 201
    method                         shift and go to state 128
    methodArray                    shift and go to state 129
    namemetodoArr                  shift and go to state 130

state 165

    (79) methodArray -> namemetodoArr PARLEFT . VARIABLE PARRIGHT

    VARIABLE        shift and go to state 202


state 166

    (47) mapa -> MAP CORCHLEFT typeData CORCHRIGHT . typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> MAP CORCHLEFT typeData CORCHRIGHT . typeData LLAVELEFT LLAVERIGHT
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 203

state 167

    (91) lectura -> SCAN PARLEFT contScan PARRIGHT .

    $end            reduce using rule 91 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    RETURN          reduce using rule 91 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    LLAVERIGHT      reduce using rule 91 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    BREAK           reduce using rule 91 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    CONTINUE        reduce using rule 91 (lectura -> SCAN PARLEFT contScan PARRIGHT .)


state 168

    (92) contScan -> AMPERSAND VARIABLE .

    PARRIGHT        reduce using rule 92 (contScan -> AMPERSAND VARIABLE .)


state 169

    (134) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch . LLAVERIGHT

    LLAVERIGHT      shift and go to state 204


state 170

    (135) bloque_switch -> CASE . caso_switch DOSPUNTOS instrucciones BREAK
    (136) bloque_switch -> CASE . caso_switch DOSPUNTOS instrucciones CONTINUE
    (137) bloque_switch -> CASE . caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
    (139) caso_switch -> . VARIABLE
    (140) caso_switch -> . CADENA
    (141) caso_switch -> . ENTERO

    VARIABLE        shift and go to state 206
    CADENA          shift and go to state 207
    ENTERO          shift and go to state 208

    caso_switch                    shift and go to state 205

state 171

    (138) bloque_switch -> switch_default .

    LLAVERIGHT      reduce using rule 138 (bloque_switch -> switch_default .)


state 172

    (142) switch_default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 209


state 173

    (107) slices -> declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT .

    $end            reduce using rule 107 (slices -> declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT .)
    RETURN          reduce using rule 107 (slices -> declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 107 (slices -> declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT .)
    BREAK           reduce using rule 107 (slices -> declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT .)
    CONTINUE        reduce using rule 107 (slices -> declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT .)


state 174

    (73) contArrayEnteros -> contArrayEnteros COMA . ENTERO

    ENTERO          shift and go to state 210


state 175

    (108) slices -> declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT .

    $end            reduce using rule 108 (slices -> declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT .)
    RETURN          reduce using rule 108 (slices -> declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 108 (slices -> declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT .)
    BREAK           reduce using rule 108 (slices -> declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT .)
    CONTINUE        reduce using rule 108 (slices -> declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT .)


state 176

    (75) contArrayCadenas -> contArrayCadenas COMA . CADENA

    CADENA          shift and go to state 211


state 177

    (72) contArrayEnteros -> ENTERO COMA . ENTERO

    ENTERO          shift and go to state 212


state 178

    (74) contArrayCadenas -> CADENA COMA . CADENA

    CADENA          shift and go to state 213


state 179

    (130) parametros -> VARIABLE .
    (131) parametros -> VARIABLE . COMA parametros

    PARRIGHT        reduce using rule 130 (parametros -> VARIABLE .)
    COMA            shift and go to state 214


state 180

    (123) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    LLAVELEFT       shift and go to state 215


state 181

    (127) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT RETURN LLAVERIGHT

    PARRIGHT        shift and go to state 216


state 182

    (132) parametros -> typeData . VARIABLE
    (133) parametros -> typeData . VARIABLE COMA parametros

    VARIABLE        shift and go to state 217


state 183

    (13) asignacion -> VAR VARIABLE BOOL IGUAL booleano .

    $end            reduce using rule 13 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    RETURN          reduce using rule 13 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    LLAVERIGHT      reduce using rule 13 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    BREAK           reduce using rule 13 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    CONTINUE        reduce using rule 13 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)


state 184

    (112) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO . CORCHRIGHT typeData

    CORCHRIGHT      shift and go to state 218


state 185

    (113) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT . typeData
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 219

state 186

    (14) asignacion -> VAR VARIABLE INT IGUAL expresion .
    (93) expresion -> expresion . operadorArit term
    (94) operadorArit -> . SUMA
    (95) operadorArit -> . RESTA
    (96) operadorArit -> . PRODUCTO
    (97) operadorArit -> . DIVISION
    (98) operadorArit -> . MODULO

    $end            reduce using rule 14 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    RETURN          reduce using rule 14 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 14 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    BREAK           reduce using rule 14 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    CONTINUE        reduce using rule 14 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42

    operadorArit                   shift and go to state 37

state 187

    (15) asignacion -> VAR VARIABLE FLOAT IGUAL expresion .
    (93) expresion -> expresion . operadorArit term
    (94) operadorArit -> . SUMA
    (95) operadorArit -> . RESTA
    (96) operadorArit -> . PRODUCTO
    (97) operadorArit -> . DIVISION
    (98) operadorArit -> . MODULO

    $end            reduce using rule 15 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    RETURN          reduce using rule 15 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 15 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    BREAK           reduce using rule 15 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    CONTINUE        reduce using rule 15 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42

    operadorArit                   shift and go to state 37

state 188

    (16) asignacion -> VAR VARIABLE STRING IGUAL CADENA .

    $end            reduce using rule 16 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    RETURN          reduce using rule 16 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    LLAVERIGHT      reduce using rule 16 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    BREAK           reduce using rule 16 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    CONTINUE        reduce using rule 16 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)


state 189

    (17) asignacion -> VAR VARIABLE puntero IGUAL refer .

    $end            reduce using rule 17 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    RETURN          reduce using rule 17 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    LLAVERIGHT      reduce using rule 17 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    BREAK           reduce using rule 17 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    CONTINUE        reduce using rule 17 (asignacion -> VAR VARIABLE puntero IGUAL refer .)


state 190

    (68) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT . contArray
    (69) contArray -> . INT LLAVELEFT contArrayEnteros LLAVERIGHT
    (70) contArray -> . STRING LLAVELEFT contArrayCadenas LLAVERIGHT
    (71) contArray -> . FLOAT LLAVELEFT contArrayFloat LLAVERIGHT

    INT             shift and go to state 221
    STRING          shift and go to state 222
    FLOAT           shift and go to state 223

    contArray                      shift and go to state 220

state 191

    (116) declaracion_slices -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData .

    LLAVELEFT       reduce using rule 116 (declaracion_slices -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData .)
    $end            reduce using rule 116 (declaracion_slices -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData .)
    RETURN          reduce using rule 116 (declaracion_slices -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 116 (declaracion_slices -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData .)
    BREAK           reduce using rule 116 (declaracion_slices -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 116 (declaracion_slices -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData .)


state 192

    (109) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT . CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT . CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT

    CORCHRIGHT      shift and go to state 224


state 193

    (114) declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT . typeData
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 225

state 194

    (115) declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .

    LLAVELEFT       reduce using rule 115 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    $end            reduce using rule 115 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    RETURN          reduce using rule 115 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 115 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    BREAK           reduce using rule 115 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 115 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)


state 195

    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT
    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 226


state 196

    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .
    (40) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT . else
    (43) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (46) else -> . ELSE sentenciaIf

    $end            reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    ELSE            shift and go to state 228

    else                           shift and go to state 227

state 197

    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE . LLAVERIGHT
    (42) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 229


state 198

    (118) comparacion -> NEGACION PARLEFT condiciones PARRIGHT .

    AND             reduce using rule 118 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)
    OR              reduce using rule 118 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)
    LLAVELEFT       reduce using rule 118 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)


state 199

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA . incrementa LLAVELEFT instrucciones LLAVERIGHT
    (63) incrementa -> . VARIABLE INCREMENTO

    VARIABLE        shift and go to state 231

    incrementa                     shift and go to state 230

state 200

    (85) masCont -> masCont COMA . contenido
    (87) contenido -> . CADENA
    (88) contenido -> . VARIABLE
    (89) contenido -> . method
    (90) contenido -> .
    (78) method -> . methodArray
    (79) methodArray -> . namemetodoArr PARLEFT VARIABLE PARRIGHT
    (80) namemetodoArr -> . LEN
    (81) namemetodoArr -> . CAP

    CADENA          shift and go to state 126
    VARIABLE        shift and go to state 127
    COMA            reduce using rule 90 (contenido -> .)
    PARRIGHT        reduce using rule 90 (contenido -> .)
    LEN             shift and go to state 131
    CAP             shift and go to state 132

    contenido                      shift and go to state 232
    method                         shift and go to state 128
    methodArray                    shift and go to state 129
    namemetodoArr                  shift and go to state 130

state 201

    (86) masCont -> COMA contenido .

    COMA            reduce using rule 86 (masCont -> COMA contenido .)
    PARRIGHT        reduce using rule 86 (masCont -> COMA contenido .)


state 202

    (79) methodArray -> namemetodoArr PARLEFT VARIABLE . PARRIGHT

    PARRIGHT        shift and go to state 233


state 203

    (47) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData . LLAVELEFT par LLAVERIGHT
    (48) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData . LLAVELEFT LLAVERIGHT

    LLAVELEFT       shift and go to state 234


state 204

    (134) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .

    $end            reduce using rule 134 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    RETURN          reduce using rule 134 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 134 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    BREAK           reduce using rule 134 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    CONTINUE        reduce using rule 134 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)


state 205

    (135) bloque_switch -> CASE caso_switch . DOSPUNTOS instrucciones BREAK
    (136) bloque_switch -> CASE caso_switch . DOSPUNTOS instrucciones CONTINUE
    (137) bloque_switch -> CASE caso_switch . DOSPUNTOS instrucciones BREAK bloque_switch

    DOSPUNTOS       shift and go to state 235


state 206

    (139) caso_switch -> VARIABLE .

    DOSPUNTOS       reduce using rule 139 (caso_switch -> VARIABLE .)


state 207

    (140) caso_switch -> CADENA .

    DOSPUNTOS       reduce using rule 140 (caso_switch -> CADENA .)


state 208

    (141) caso_switch -> ENTERO .

    DOSPUNTOS       reduce using rule 141 (caso_switch -> ENTERO .)


state 209

    (142) switch_default -> DEFAULT DOSPUNTOS . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . slices
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL acumular
    (23) asignacion -> . VARIABLE MENOSIGUAL expresion
    (24) asignacion -> . derefer IGUAL valor
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (82) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO typeData
    (91) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (134) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (120) funcion -> . funcion_sin_parametro
    (121) funcion -> . funcion_parametro
    (122) funcion -> . funcion_sin_parametro_return
    (106) slices -> . declaracion_slices
    (107) slices -> . declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT
    (108) slices -> . declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT
    (109) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
    (60) derefer -> . PRODUCTO VARIABLE
    (100) term -> . numericos
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (123) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (112) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (114) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (116) declaracion_slices -> . VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 25
    PRODUCTO        shift and go to state 26
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 16
    FUNC            shift and go to state 35
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    instrucciones                  shift and go to state 236
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    slices                         shift and go to state 17
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 20
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    declaracion_slices             shift and go to state 33
    numericos                      shift and go to state 34

state 210

    (73) contArrayEnteros -> contArrayEnteros COMA ENTERO .

    LLAVERIGHT      reduce using rule 73 (contArrayEnteros -> contArrayEnteros COMA ENTERO .)
    COMA            reduce using rule 73 (contArrayEnteros -> contArrayEnteros COMA ENTERO .)


state 211

    (75) contArrayCadenas -> contArrayCadenas COMA CADENA .

    LLAVERIGHT      reduce using rule 75 (contArrayCadenas -> contArrayCadenas COMA CADENA .)
    COMA            reduce using rule 75 (contArrayCadenas -> contArrayCadenas COMA CADENA .)


state 212

    (72) contArrayEnteros -> ENTERO COMA ENTERO .

    LLAVERIGHT      reduce using rule 72 (contArrayEnteros -> ENTERO COMA ENTERO .)
    COMA            reduce using rule 72 (contArrayEnteros -> ENTERO COMA ENTERO .)


state 213

    (74) contArrayCadenas -> CADENA COMA CADENA .

    LLAVERIGHT      reduce using rule 74 (contArrayCadenas -> CADENA COMA CADENA .)
    COMA            reduce using rule 74 (contArrayCadenas -> CADENA COMA CADENA .)


state 214

    (131) parametros -> VARIABLE COMA . parametros
    (130) parametros -> . VARIABLE
    (131) parametros -> . VARIABLE COMA parametros
    (132) parametros -> . typeData VARIABLE
    (133) parametros -> . typeData VARIABLE COMA parametros
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    VARIABLE        shift and go to state 179
    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    parametros                     shift and go to state 237
    typeData                       shift and go to state 182

state 215

    (123) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . slices
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL acumular
    (23) asignacion -> . VARIABLE MENOSIGUAL expresion
    (24) asignacion -> . derefer IGUAL valor
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (82) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO typeData
    (91) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (134) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (120) funcion -> . funcion_sin_parametro
    (121) funcion -> . funcion_parametro
    (122) funcion -> . funcion_sin_parametro_return
    (106) slices -> . declaracion_slices
    (107) slices -> . declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT
    (108) slices -> . declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT
    (109) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
    (60) derefer -> . PRODUCTO VARIABLE
    (100) term -> . numericos
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (123) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (112) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (114) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (116) declaracion_slices -> . VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 239
    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 25
    PRODUCTO        shift and go to state 26
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 16
    FUNC            shift and go to state 35
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    instrucciones                  shift and go to state 238
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    slices                         shift and go to state 17
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 20
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    declaracion_slices             shift and go to state 33
    numericos                      shift and go to state 34

state 216

    (127) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT RETURN LLAVERIGHT

    LLAVELEFT       shift and go to state 240


state 217

    (132) parametros -> typeData VARIABLE .
    (133) parametros -> typeData VARIABLE . COMA parametros

    PARRIGHT        reduce using rule 132 (parametros -> typeData VARIABLE .)
    COMA            shift and go to state 241


state 218

    (112) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT . typeData
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 242

state 219

    (113) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .

    LLAVELEFT       reduce using rule 113 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    $end            reduce using rule 113 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    RETURN          reduce using rule 113 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 113 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    BREAK           reduce using rule 113 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 113 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData .)


state 220

    (68) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .

    $end            reduce using rule 68 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .)
    RETURN          reduce using rule 68 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .)
    LLAVERIGHT      reduce using rule 68 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .)
    BREAK           reduce using rule 68 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .)
    CONTINUE        reduce using rule 68 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .)


state 221

    (69) contArray -> INT . LLAVELEFT contArrayEnteros LLAVERIGHT

    LLAVELEFT       shift and go to state 243


state 222

    (70) contArray -> STRING . LLAVELEFT contArrayCadenas LLAVERIGHT

    LLAVELEFT       shift and go to state 244


state 223

    (71) contArray -> FLOAT . LLAVELEFT contArrayFloat LLAVERIGHT

    LLAVELEFT       shift and go to state 245


state 224

    (109) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT . typeData COMA ENTERO PARRIGHT
    (110) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT . typeData COMA ENTERO COMA ENTERO PARRIGHT
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 246

state 225

    (114) declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .

    LLAVELEFT       reduce using rule 114 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    $end            reduce using rule 114 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    RETURN          reduce using rule 114 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 114 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    BREAK           reduce using rule 114 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 114 (declaracion_slices -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)


state 226

    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT
    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 247


state 227

    (40) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .

    $end            reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    RETURN          reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    BREAK           reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    CONTINUE        reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)


state 228

    (43) else -> ELSE . LLAVELEFT instrucciones LLAVERIGHT
    (44) else -> ELSE . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (45) else -> ELSE . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (46) else -> ELSE . sentenciaIf
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 248
    IF              shift and go to state 21

    sentenciaIf                    shift and go to state 249

state 229

    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .
    (42) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT . else
    (43) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (46) else -> . ELSE sentenciaIf

    $end            reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 228

    else                           shift and go to state 250

state 230

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa . LLAVELEFT instrucciones LLAVERIGHT

    LLAVELEFT       shift and go to state 251


state 231

    (63) incrementa -> VARIABLE . INCREMENTO

    INCREMENTO      shift and go to state 252


state 232

    (85) masCont -> masCont COMA contenido .

    COMA            reduce using rule 85 (masCont -> masCont COMA contenido .)
    PARRIGHT        reduce using rule 85 (masCont -> masCont COMA contenido .)


state 233

    (79) methodArray -> namemetodoArr PARLEFT VARIABLE PARRIGHT .

    COMA            reduce using rule 79 (methodArray -> namemetodoArr PARLEFT VARIABLE PARRIGHT .)
    PARRIGHT        reduce using rule 79 (methodArray -> namemetodoArr PARLEFT VARIABLE PARRIGHT .)


state 234

    (47) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT . par LLAVERIGHT
    (48) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT . LLAVERIGHT
    (49) par -> . dato DOSPUNTOS dato mas
    (50) par -> . dato DOSPUNTOS dato
    (53) dato -> . VARIABLE
    (54) dato -> . expresion
    (55) dato -> . CADENA
    (56) dato -> . TRUE
    (57) dato -> . FALSE
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    LLAVERIGHT      shift and go to state 254
    VARIABLE        shift and go to state 256
    CADENA          shift and go to state 258
    TRUE            shift and go to state 259
    FALSE           shift and go to state 260
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    par                            shift and go to state 253
    dato                           shift and go to state 255
    expresion                      shift and go to state 257
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 235

    (135) bloque_switch -> CASE caso_switch DOSPUNTOS . instrucciones BREAK
    (136) bloque_switch -> CASE caso_switch DOSPUNTOS . instrucciones CONTINUE
    (137) bloque_switch -> CASE caso_switch DOSPUNTOS . instrucciones BREAK bloque_switch
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . slices
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL acumular
    (23) asignacion -> . VARIABLE MENOSIGUAL expresion
    (24) asignacion -> . derefer IGUAL valor
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (82) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO typeData
    (91) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (134) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (120) funcion -> . funcion_sin_parametro
    (121) funcion -> . funcion_parametro
    (122) funcion -> . funcion_sin_parametro_return
    (106) slices -> . declaracion_slices
    (107) slices -> . declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT
    (108) slices -> . declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT
    (109) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
    (60) derefer -> . PRODUCTO VARIABLE
    (100) term -> . numericos
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (123) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (112) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (114) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (116) declaracion_slices -> . VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 25
    PRODUCTO        shift and go to state 26
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 16
    FUNC            shift and go to state 35
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    instrucciones                  shift and go to state 261
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    slices                         shift and go to state 17
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 20
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    declaracion_slices             shift and go to state 33
    numericos                      shift and go to state 34

state 236

    (142) switch_default -> DEFAULT DOSPUNTOS instrucciones .

    LLAVERIGHT      reduce using rule 142 (switch_default -> DEFAULT DOSPUNTOS instrucciones .)


state 237

    (131) parametros -> VARIABLE COMA parametros .

    PARRIGHT        reduce using rule 131 (parametros -> VARIABLE COMA parametros .)


state 238

    (123) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . LLAVERIGHT
    (125) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 262
    RETURN          shift and go to state 263


state 239

    (124) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 264


state 240

    (127) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . instrucciones LLAVERIGHT
    (128) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . RETURN LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . slices
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL acumular
    (23) asignacion -> . VARIABLE MENOSIGUAL expresion
    (24) asignacion -> . derefer IGUAL valor
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (82) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO typeData
    (91) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (134) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (120) funcion -> . funcion_sin_parametro
    (121) funcion -> . funcion_parametro
    (122) funcion -> . funcion_sin_parametro_return
    (106) slices -> . declaracion_slices
    (107) slices -> . declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT
    (108) slices -> . declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT
    (109) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
    (60) derefer -> . PRODUCTO VARIABLE
    (100) term -> . numericos
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (123) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (112) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (114) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (116) declaracion_slices -> . VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 266
    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 25
    PRODUCTO        shift and go to state 26
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 16
    FUNC            shift and go to state 35
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    instrucciones                  shift and go to state 265
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    slices                         shift and go to state 17
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 20
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    declaracion_slices             shift and go to state 33
    numericos                      shift and go to state 34

state 241

    (133) parametros -> typeData VARIABLE COMA . parametros
    (130) parametros -> . VARIABLE
    (131) parametros -> . VARIABLE COMA parametros
    (132) parametros -> . typeData VARIABLE
    (133) parametros -> . typeData VARIABLE COMA parametros
    (64) typeData -> . BOOL
    (65) typeData -> . INT
    (66) typeData -> . FLOAT
    (67) typeData -> . STRING

    VARIABLE        shift and go to state 179
    BOOL            shift and go to state 70
    INT             shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73

    typeData                       shift and go to state 182
    parametros                     shift and go to state 267

state 242

    (112) declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .

    LLAVELEFT       reduce using rule 112 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    $end            reduce using rule 112 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    RETURN          reduce using rule 112 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 112 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    BREAK           reduce using rule 112 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)
    CONTINUE        reduce using rule 112 (declaracion_slices -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData .)


state 243

    (69) contArray -> INT LLAVELEFT . contArrayEnteros LLAVERIGHT
    (72) contArrayEnteros -> . ENTERO COMA ENTERO
    (73) contArrayEnteros -> . contArrayEnteros COMA ENTERO

    ENTERO          shift and go to state 140

    contArrayEnteros               shift and go to state 268

state 244

    (70) contArray -> STRING LLAVELEFT . contArrayCadenas LLAVERIGHT
    (74) contArrayCadenas -> . CADENA COMA CADENA
    (75) contArrayCadenas -> . contArrayCadenas COMA CADENA

    CADENA          shift and go to state 141

    contArrayCadenas               shift and go to state 269

state 245

    (71) contArray -> FLOAT LLAVELEFT . contArrayFloat LLAVERIGHT
    (76) contArrayFloat -> . FLOTANTE COMA FLOTANTE
    (77) contArrayFloat -> . contArrayFloat COMA FLOTANTE

    FLOTANTE        shift and go to state 271

    contArrayFloat                 shift and go to state 270

state 246

    (109) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData . COMA ENTERO PARRIGHT
    (110) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData . COMA ENTERO COMA ENTERO PARRIGHT

    COMA            shift and go to state 272


state 247

    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .
    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT . else
    (43) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (46) else -> . ELSE sentenciaIf

    $end            reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 228

    else                           shift and go to state 273

state 248

    (43) else -> ELSE LLAVELEFT . instrucciones LLAVERIGHT
    (44) else -> ELSE LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (45) else -> ELSE LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . slices
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL acumular
    (23) asignacion -> . VARIABLE MENOSIGUAL expresion
    (24) asignacion -> . derefer IGUAL valor
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (82) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO typeData
    (91) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (134) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (120) funcion -> . funcion_sin_parametro
    (121) funcion -> . funcion_parametro
    (122) funcion -> . funcion_sin_parametro_return
    (106) slices -> . declaracion_slices
    (107) slices -> . declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT
    (108) slices -> . declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT
    (109) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
    (60) derefer -> . PRODUCTO VARIABLE
    (100) term -> . numericos
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (123) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (112) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (114) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (116) declaracion_slices -> . VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 275
    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 25
    PRODUCTO        shift and go to state 26
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 16
    FUNC            shift and go to state 35
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    instrucciones                  shift and go to state 274
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    slices                         shift and go to state 17
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 20
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    declaracion_slices             shift and go to state 33
    numericos                      shift and go to state 34

state 249

    (46) else -> ELSE sentenciaIf .

    $end            reduce using rule 46 (else -> ELSE sentenciaIf .)
    RETURN          reduce using rule 46 (else -> ELSE sentenciaIf .)
    LLAVERIGHT      reduce using rule 46 (else -> ELSE sentenciaIf .)
    BREAK           reduce using rule 46 (else -> ELSE sentenciaIf .)
    CONTINUE        reduce using rule 46 (else -> ELSE sentenciaIf .)


state 250

    (42) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 42 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 42 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 42 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    BREAK           reduce using rule 42 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    CONTINUE        reduce using rule 42 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)


state 251

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT . instrucciones LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . slices
    (20) asignacion -> . VARIABLE DECLARADOR valor
    (21) asignacion -> . VARIABLE IGUAL valor
    (22) asignacion -> . VARIABLE MASIGUAL acumular
    (23) asignacion -> . VARIABLE MENOSIGUAL expresion
    (24) asignacion -> . derefer IGUAL valor
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (143) condiciones -> . factor MAYORQUE factor
    (144) condiciones -> . factor MENORQUE factor
    (145) condiciones -> . factor DIFERENTE factor
    (146) condiciones -> . factor ESIGUAL factor
    (147) condiciones -> . factor MENORIGUAL factor
    (148) condiciones -> . factor MAYORIGUAL factor
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (61) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (82) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (48) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO typeData
    (91) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (68) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (134) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (120) funcion -> . funcion_sin_parametro
    (121) funcion -> . funcion_parametro
    (122) funcion -> . funcion_sin_parametro_return
    (106) slices -> . declaracion_slices
    (107) slices -> . declaracion_slices LLAVELEFT contArrayEnteros LLAVERIGHT
    (108) slices -> . declaracion_slices LLAVELEFT contArrayCadenas LLAVERIGHT
    (109) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT
    (110) slices -> . VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT
    (60) derefer -> . PRODUCTO VARIABLE
    (100) term -> . numericos
    (101) factor -> . numericos
    (102) factor -> . VARIABLE
    (154) factor -> . BOOL
    (123) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (124) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (125) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (127) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (128) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (129) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (126) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (112) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (113) declaracion_slices -> . VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (114) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT typeData
    (115) declaracion_slices -> . VARIABLE IGUAL CORCHLEFT CORCHRIGHT typeData
    (116) declaracion_slices -> . VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT typeData
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 21
    FOR             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    MAP             shift and go to state 25
    PRODUCTO        shift and go to state 26
    SCAN            shift and go to state 27
    SWITCH          shift and go to state 29
    BOOL            shift and go to state 16
    FUNC            shift and go to state 35
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    condiciones                    shift and go to state 4
    instrucciones                  shift and go to state 276
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    slices                         shift and go to state 17
    derefer                        shift and go to state 18
    term                           shift and go to state 19
    factor                         shift and go to state 20
    funcion_sin_parametro          shift and go to state 30
    funcion_parametro              shift and go to state 31
    funcion_sin_parametro_return   shift and go to state 32
    declaracion_slices             shift and go to state 33
    numericos                      shift and go to state 34

state 252

    (63) incrementa -> VARIABLE INCREMENTO .

    LLAVELEFT       reduce using rule 63 (incrementa -> VARIABLE INCREMENTO .)


state 253

    (47) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par . LLAVERIGHT

    LLAVERIGHT      shift and go to state 277


state 254

    (48) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .

    $end            reduce using rule 48 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    RETURN          reduce using rule 48 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 48 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    BREAK           reduce using rule 48 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    CONTINUE        reduce using rule 48 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)


state 255

    (49) par -> dato . DOSPUNTOS dato mas
    (50) par -> dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 278


state 256

    (53) dato -> VARIABLE .

    DOSPUNTOS       reduce using rule 53 (dato -> VARIABLE .)
    COMA            reduce using rule 53 (dato -> VARIABLE .)
    LLAVERIGHT      reduce using rule 53 (dato -> VARIABLE .)


state 257

    (54) dato -> expresion .
    (93) expresion -> expresion . operadorArit term
    (94) operadorArit -> . SUMA
    (95) operadorArit -> . RESTA
    (96) operadorArit -> . PRODUCTO
    (97) operadorArit -> . DIVISION
    (98) operadorArit -> . MODULO

    DOSPUNTOS       reduce using rule 54 (dato -> expresion .)
    COMA            reduce using rule 54 (dato -> expresion .)
    LLAVERIGHT      reduce using rule 54 (dato -> expresion .)
    SUMA            shift and go to state 38
    RESTA           shift and go to state 39
    PRODUCTO        shift and go to state 40
    DIVISION        shift and go to state 41
    MODULO          shift and go to state 42

    operadorArit                   shift and go to state 37

state 258

    (55) dato -> CADENA .

    DOSPUNTOS       reduce using rule 55 (dato -> CADENA .)
    COMA            reduce using rule 55 (dato -> CADENA .)
    LLAVERIGHT      reduce using rule 55 (dato -> CADENA .)


state 259

    (56) dato -> TRUE .

    DOSPUNTOS       reduce using rule 56 (dato -> TRUE .)
    COMA            reduce using rule 56 (dato -> TRUE .)
    LLAVERIGHT      reduce using rule 56 (dato -> TRUE .)


state 260

    (57) dato -> FALSE .

    DOSPUNTOS       reduce using rule 57 (dato -> FALSE .)
    COMA            reduce using rule 57 (dato -> FALSE .)
    LLAVERIGHT      reduce using rule 57 (dato -> FALSE .)


state 261

    (135) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones . BREAK
    (136) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones . CONTINUE
    (137) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones . BREAK bloque_switch

    BREAK           shift and go to state 279
    CONTINUE        shift and go to state 280


state 262

    (123) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 123 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 123 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 123 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 123 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 123 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)


state 263

    (125) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN . LLAVERIGHT
    (126) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 282
    VARIABLE        shift and go to state 281


state 264

    (124) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .

    $end            reduce using rule 124 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    RETURN          reduce using rule 124 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 124 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    BREAK           reduce using rule 124 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 124 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)


state 265

    (127) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones . LLAVERIGHT
    (128) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones . RETURN LLAVERIGHT

    LLAVERIGHT      shift and go to state 283
    RETURN          shift and go to state 284


state 266

    (129) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 285


state 267

    (133) parametros -> typeData VARIABLE COMA parametros .

    PARRIGHT        reduce using rule 133 (parametros -> typeData VARIABLE COMA parametros .)


state 268

    (69) contArray -> INT LLAVELEFT contArrayEnteros . LLAVERIGHT
    (73) contArrayEnteros -> contArrayEnteros . COMA ENTERO

    LLAVERIGHT      shift and go to state 286
    COMA            shift and go to state 174


state 269

    (70) contArray -> STRING LLAVELEFT contArrayCadenas . LLAVERIGHT
    (75) contArrayCadenas -> contArrayCadenas . COMA CADENA

    LLAVERIGHT      shift and go to state 287
    COMA            shift and go to state 176


state 270

    (71) contArray -> FLOAT LLAVELEFT contArrayFloat . LLAVERIGHT
    (77) contArrayFloat -> contArrayFloat . COMA FLOTANTE

    LLAVERIGHT      shift and go to state 288
    COMA            shift and go to state 289


state 271

    (76) contArrayFloat -> FLOTANTE . COMA FLOTANTE

    COMA            shift and go to state 290


state 272

    (109) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA . ENTERO PARRIGHT
    (110) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA . ENTERO COMA ENTERO PARRIGHT

    ENTERO          shift and go to state 291


state 273

    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    BREAK           reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    CONTINUE        reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)


state 274

    (43) else -> ELSE LLAVELEFT instrucciones . LLAVERIGHT
    (44) else -> ELSE LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 292
    RETURN          shift and go to state 293


state 275

    (45) else -> ELSE LLAVELEFT RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 294


state 276

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones . LLAVERIGHT

    LLAVERIGHT      shift and go to state 295


state 277

    (47) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .

    $end            reduce using rule 47 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    RETURN          reduce using rule 47 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 47 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    BREAK           reduce using rule 47 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    CONTINUE        reduce using rule 47 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)


state 278

    (49) par -> dato DOSPUNTOS . dato mas
    (50) par -> dato DOSPUNTOS . dato
    (53) dato -> . VARIABLE
    (54) dato -> . expresion
    (55) dato -> . CADENA
    (56) dato -> . TRUE
    (57) dato -> . FALSE
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 256
    CADENA          shift and go to state 258
    TRUE            shift and go to state 259
    FALSE           shift and go to state 260
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    dato                           shift and go to state 296
    expresion                      shift and go to state 257
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 279

    (135) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK .
    (137) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK . bloque_switch
    (135) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK
    (136) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones CONTINUE
    (137) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
    (138) bloque_switch -> . switch_default
    (142) switch_default -> . DEFAULT DOSPUNTOS instrucciones

    LLAVERIGHT      reduce using rule 135 (bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK .)
    CASE            shift and go to state 170
    DEFAULT         shift and go to state 172

    bloque_switch                  shift and go to state 297
    switch_default                 shift and go to state 171

state 280

    (136) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones CONTINUE .

    LLAVERIGHT      reduce using rule 136 (bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones CONTINUE .)


state 281

    (126) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 298


state 282

    (125) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .

    $end            reduce using rule 125 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    RETURN          reduce using rule 125 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 125 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    BREAK           reduce using rule 125 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 125 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)


state 283

    (127) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 127 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 127 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 127 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 127 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 127 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)


state 284

    (128) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 299


state 285

    (129) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .

    $end            reduce using rule 129 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    RETURN          reduce using rule 129 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 129 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    BREAK           reduce using rule 129 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 129 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)


state 286

    (69) contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .

    $end            reduce using rule 69 (contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .)
    RETURN          reduce using rule 69 (contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 69 (contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .)
    BREAK           reduce using rule 69 (contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .)
    CONTINUE        reduce using rule 69 (contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .)


state 287

    (70) contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .

    $end            reduce using rule 70 (contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .)
    RETURN          reduce using rule 70 (contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 70 (contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .)
    BREAK           reduce using rule 70 (contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .)
    CONTINUE        reduce using rule 70 (contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .)


state 288

    (71) contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .

    $end            reduce using rule 71 (contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .)
    RETURN          reduce using rule 71 (contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 71 (contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .)
    BREAK           reduce using rule 71 (contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .)
    CONTINUE        reduce using rule 71 (contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .)


state 289

    (77) contArrayFloat -> contArrayFloat COMA . FLOTANTE

    FLOTANTE        shift and go to state 300


state 290

    (76) contArrayFloat -> FLOTANTE COMA . FLOTANTE

    FLOTANTE        shift and go to state 301


state 291

    (109) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO . PARRIGHT
    (110) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO . COMA ENTERO PARRIGHT

    PARRIGHT        shift and go to state 303
    COMA            shift and go to state 302


state 292

    (43) else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)


state 293

    (44) else -> ELSE LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 304


state 294

    (45) else -> ELSE LLAVELEFT RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 305


state 295

    (61) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 61 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 61 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 61 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 61 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 61 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)


state 296

    (49) par -> dato DOSPUNTOS dato . mas
    (50) par -> dato DOSPUNTOS dato .
    (51) mas -> . mas COMA dato DOSPUNTOS dato
    (52) mas -> . COMA dato DOSPUNTOS dato

    LLAVERIGHT      reduce using rule 50 (par -> dato DOSPUNTOS dato .)
    COMA            shift and go to state 307

    mas                            shift and go to state 306

state 297

    (137) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch .

    LLAVERIGHT      reduce using rule 137 (bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch .)


state 298

    (126) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 126 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 126 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 126 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 126 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 126 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 299

    (128) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .

    $end            reduce using rule 128 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    RETURN          reduce using rule 128 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 128 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    BREAK           reduce using rule 128 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 128 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)


state 300

    (77) contArrayFloat -> contArrayFloat COMA FLOTANTE .

    LLAVERIGHT      reduce using rule 77 (contArrayFloat -> contArrayFloat COMA FLOTANTE .)
    COMA            reduce using rule 77 (contArrayFloat -> contArrayFloat COMA FLOTANTE .)


state 301

    (76) contArrayFloat -> FLOTANTE COMA FLOTANTE .

    LLAVERIGHT      reduce using rule 76 (contArrayFloat -> FLOTANTE COMA FLOTANTE .)
    COMA            reduce using rule 76 (contArrayFloat -> FLOTANTE COMA FLOTANTE .)


state 302

    (110) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA . ENTERO PARRIGHT

    ENTERO          shift and go to state 308


state 303

    (109) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT .

    $end            reduce using rule 109 (slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT .)
    RETURN          reduce using rule 109 (slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT .)
    LLAVERIGHT      reduce using rule 109 (slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT .)
    BREAK           reduce using rule 109 (slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT .)
    CONTINUE        reduce using rule 109 (slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO PARRIGHT .)


state 304

    (44) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 309


state 305

    (45) else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 45 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 45 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 45 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 45 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 45 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)


state 306

    (49) par -> dato DOSPUNTOS dato mas .
    (51) mas -> mas . COMA dato DOSPUNTOS dato

    LLAVERIGHT      reduce using rule 49 (par -> dato DOSPUNTOS dato mas .)
    COMA            shift and go to state 310


state 307

    (52) mas -> COMA . dato DOSPUNTOS dato
    (53) dato -> . VARIABLE
    (54) dato -> . expresion
    (55) dato -> . CADENA
    (56) dato -> . TRUE
    (57) dato -> . FALSE
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 256
    CADENA          shift and go to state 258
    TRUE            shift and go to state 259
    FALSE           shift and go to state 260
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    dato                           shift and go to state 311
    expresion                      shift and go to state 257
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 308

    (110) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO . PARRIGHT

    PARRIGHT        shift and go to state 312


state 309

    (44) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 44 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 44 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 44 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 44 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 44 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 310

    (51) mas -> mas COMA . dato DOSPUNTOS dato
    (53) dato -> . VARIABLE
    (54) dato -> . expresion
    (55) dato -> . CADENA
    (56) dato -> . TRUE
    (57) dato -> . FALSE
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 256
    CADENA          shift and go to state 258
    TRUE            shift and go to state 259
    FALSE           shift and go to state 260
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    dato                           shift and go to state 313
    expresion                      shift and go to state 257
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 311

    (52) mas -> COMA dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 314


state 312

    (110) slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT .

    $end            reduce using rule 110 (slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT .)
    RETURN          reduce using rule 110 (slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT .)
    LLAVERIGHT      reduce using rule 110 (slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT .)
    BREAK           reduce using rule 110 (slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT .)
    CONTINUE        reduce using rule 110 (slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT typeData COMA ENTERO COMA ENTERO PARRIGHT .)


state 313

    (51) mas -> mas COMA dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 315


state 314

    (52) mas -> COMA dato DOSPUNTOS . dato
    (53) dato -> . VARIABLE
    (54) dato -> . expresion
    (55) dato -> . CADENA
    (56) dato -> . TRUE
    (57) dato -> . FALSE
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 256
    CADENA          shift and go to state 258
    TRUE            shift and go to state 259
    FALSE           shift and go to state 260
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    dato                           shift and go to state 316
    expresion                      shift and go to state 257
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 315

    (51) mas -> mas COMA dato DOSPUNTOS . dato
    (53) dato -> . VARIABLE
    (54) dato -> . expresion
    (55) dato -> . CADENA
    (56) dato -> . TRUE
    (57) dato -> . FALSE
    (93) expresion -> . expresion operadorArit term
    (99) expresion -> . term
    (100) term -> . numericos
    (103) numericos -> . ENTERO
    (104) numericos -> . FLOTANTE
    (105) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 256
    CADENA          shift and go to state 258
    TRUE            shift and go to state 259
    FALSE           shift and go to state 260
    ENTERO          shift and go to state 28
    FLOTANTE        shift and go to state 36
    PARLEFT         shift and go to state 24

    dato                           shift and go to state 317
    expresion                      shift and go to state 257
    term                           shift and go to state 19
    numericos                      shift and go to state 66

state 316

    (52) mas -> COMA dato DOSPUNTOS dato .

    COMA            reduce using rule 52 (mas -> COMA dato DOSPUNTOS dato .)
    LLAVERIGHT      reduce using rule 52 (mas -> COMA dato DOSPUNTOS dato .)


state 317

    (51) mas -> mas COMA dato DOSPUNTOS dato .

    COMA            reduce using rule 51 (mas -> mas COMA dato DOSPUNTOS dato .)
    LLAVERIGHT      reduce using rule 51 (mas -> mas COMA dato DOSPUNTOS dato .)

