Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> expresion
Rule 3     instrucciones -> condiciones
Rule 4     instrucciones -> sentenciaIf
Rule 5     instrucciones -> sentenciaFor
Rule 6     instrucciones -> print
Rule 7     instrucciones -> mapa
Rule 8     instrucciones -> puntero
Rule 9     instrucciones -> lectura
Rule 10    instrucciones -> array
Rule 11    instrucciones -> switch
Rule 12    instrucciones -> funcion
Rule 13    asignacion -> VAR VARIABLE BOOL IGUAL booleano
Rule 14    asignacion -> VAR VARIABLE INT IGUAL expresion
Rule 15    asignacion -> VAR VARIABLE FLOAT IGUAL expresion
Rule 16    asignacion -> VAR VARIABLE STRING IGUAL CADENA
Rule 17    asignacion -> VAR VARIABLE puntero IGUAL refer
Rule 18    asignacion -> VAR VARIABLE puntero
Rule 19    asignacion -> VARIABLE DECLARADOR valor
Rule 20    asignacion -> VARIABLE IGUAL valor
Rule 21    asignacion -> VARIABLE MASIGUAL acumular
Rule 22    asignacion -> VARIABLE MENOSIGUAL expresion
Rule 23    asignacion -> derefer IGUAL valor
Rule 24    booleano -> condicion
Rule 25    booleano -> TRUE
Rule 26    booleano -> FALSE
Rule 27    valor -> booleano
Rule 28    valor -> expresion
Rule 29    valor -> CADENA
Rule 30    valor -> VARIABLE
Rule 31    valor -> mapa
Rule 32    valor -> refer
Rule 33    acumular -> expresion
Rule 34    acumular -> CADENA
Rule 35    acumular -> VARIABLE
Rule 36    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 37    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
Rule 38    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
Rule 39    sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
Rule 40    sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 41    sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
Rule 42    else -> ELSE LLAVELEFT instrucciones LLAVERIGHT
Rule 43    else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 44    else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 45    else -> ELSE sentenciaIf
Rule 46    mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
Rule 47    mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
Rule 48    par -> dato DOSPUNTOS dato mas
Rule 49    par -> dato DOSPUNTOS dato
Rule 50    mas -> mas COMA dato DOSPUNTOS dato
Rule 51    mas -> COMA dato DOSPUNTOS dato
Rule 52    dato -> VARIABLE
Rule 53    dato -> expresion
Rule 54    dato -> CADENA
Rule 55    dato -> TRUE
Rule 56    dato -> FALSE
Rule 57    puntero -> PRODUCTO typeData
Rule 58    refer -> AMPERSAND VARIABLE
Rule 59    derefer -> PRODUCTO VARIABLE
Rule 60    sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
Rule 61    inicio -> VARIABLE DECLARADOR ENTERO
Rule 62    incrementa -> VARIABLE INCREMENTO
Rule 63    typeData -> BOOL
Rule 64    typeData -> INT
Rule 65    typeData -> FLOAT
Rule 66    typeData -> STRING
Rule 67    array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
Rule 68    contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT
Rule 69    contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT
Rule 70    contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT
Rule 71    contArrayEnteros -> ENTERO COMA ENTERO
Rule 72    contArrayEnteros -> contArrayEnteros COMA ENTERO
Rule 73    contArrayCadenas -> CADENA COMA CADENA
Rule 74    contArrayCadenas -> contArrayCadenas COMA CADENA
Rule 75    contArrayFloat -> FLOTANTE COMA FLOTANTE
Rule 76    contArrayFloat -> contArrayFloat COMA FLOTANTE
Rule 77    print -> IMPRIMIR PARLEFT contPrint PARRIGHT
Rule 78    contPrint -> contenido masCont
Rule 79    contPrint -> contenido
Rule 80    masCont -> masCont COMA contenido
Rule 81    masCont -> COMA contenido
Rule 82    contenido -> CADENA
Rule 83    contenido -> VARIABLE
Rule 84    contenido -> <empty>
Rule 85    lectura -> SCAN PARLEFT contScan PARRIGHT
Rule 86    contScan -> AMPERSAND VARIABLE
Rule 87    expresion -> expresion operadorArit term
Rule 88    operadorArit -> SUMA
Rule 89    operadorArit -> RESTA
Rule 90    operadorArit -> PRODUCTO
Rule 91    operadorArit -> DIVISION
Rule 92    operadorArit -> MODULO
Rule 93    expresion -> term
Rule 94    term -> numericos
Rule 95    factor -> numericos
Rule 96    factor -> VARIABLE
Rule 97    numericos -> ENTERO
Rule 98    numericos -> FLOTANTE
Rule 99    numericos -> PARLEFT expresion PARRIGHT
Rule 100   comparacion -> condiciones
Rule 101   comparacion -> NEGACION PARLEFT condiciones PARRIGHT
Rule 102   comparacion -> PARLEFT condiciones PARRIGHT
Rule 103   funcion -> funcion_sin_parametro
Rule 104   funcion -> funcion_parametro
Rule 105   funcion -> funcion_sin_parametro_return
Rule 106   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
Rule 107   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
Rule 108   funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
Rule 109   funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 110   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
Rule 111   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
Rule 112   funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
Rule 113   parametros -> VARIABLE
Rule 114   parametros -> VARIABLE COMA parametros
Rule 115   parametros -> typeData VARIABLE
Rule 116   parametros -> typeData VARIABLE COMA parametros
Rule 117   switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
Rule 118   bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK
Rule 119   bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones CONTINUE
Rule 120   bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
Rule 121   bloque_switch -> switch_default
Rule 122   caso_switch -> VARIABLE
Rule 123   caso_switch -> CADENA
Rule 124   caso_switch -> ENTERO
Rule 125   switch_default -> DEFAULT DOSPUNTOS instrucciones
Rule 126   condiciones -> factor MAYORQUE factor
Rule 127   condiciones -> factor MENORQUE factor
Rule 128   condiciones -> factor DIFERENTE factor
Rule 129   condiciones -> factor ESIGUAL factor
Rule 130   condiciones -> factor MENORIGUAL factor
Rule 131   condiciones -> factor MAYORIGUAL factor
Rule 132   comparaciones -> comparacion
Rule 133   comparaciones -> comparacion anado comparaciones
Rule 134   anado -> condicion
Rule 135   condicion -> AND
Rule 136   condicion -> OR
Rule 137   factor -> BOOL

Terminals, with rules where they appear

AMPERSAND            : 58 86
AND                  : 135
BOOL                 : 13 63 137
BREAK                : 118 120
CADENA               : 16 29 34 54 73 73 74 82 123
CASE                 : 118 119 120
COMA                 : 50 51 71 72 73 74 75 76 80 81 114 116
CONTINUE             : 119
CORCHLEFT            : 46 47 67
CORCHRIGHT           : 46 47 67
DECLARADOR           : 19 61 67
DEFAULT              : 125
DIFERENTE            : 128
DIVISION             : 91
DOSPUNTOS            : 48 49 50 51 118 119 120 125
ELSE                 : 42 43 44 45
ENTERO               : 61 67 71 71 72 97 124
ESIGUAL              : 129
FALSE                : 26 56
FLOAT                : 15 65 70
FLOTANTE             : 75 75 76 98
FOR                  : 60
FUNC                 : 106 107 108 109 110 111 112
IF                   : 36 37 38 39 40 41
IGUAL                : 13 14 15 16 17 20 23
IMPRIMIR             : 77
INCREMENTO           : 62
INT                  : 14 64 68
LLAVELEFT            : 36 37 38 39 40 41 42 43 44 46 47 60 68 69 70 106 107 108 109 110 111 112 117
LLAVERIGHT           : 36 37 38 39 40 41 42 43 44 46 47 60 68 69 70 106 107 108 109 110 111 112 117
MAP                  : 46 47
MASIGUAL             : 21
MAYORIGUAL           : 131
MAYORQUE             : 126
MENORIGUAL           : 130
MENORQUE             : 127
MENOSIGUAL           : 22
MODULO               : 92
NEGACION             : 101
OR                   : 136
PARLEFT              : 77 85 99 101 102 106 107 108 109 110 111 112
PARRIGHT             : 77 85 99 101 102 106 107 108 109 110 111 112
PRODUCTO             : 57 59 90
PUNTOCOMA            : 60 60
RESTA                : 89
RETURN               : 36 37 40 41 43 44 107 108 109 111 112
SCAN                 : 85
STRING               : 16 66 69
SUMA                 : 88
SWITCH               : 117
TRUE                 : 25 55
VAR                  : 13 14 15 16 17 18
VARIABLE             : 13 14 15 16 17 18 19 20 21 22 30 35 36 37 40 41 43 44 52 58 59 61 62 67 83 86 96 106 107 108 109 109 110 111 112 113 114 115 116 117 122
error                : 

Nonterminals, with rules where they appear

acumular             : 21
anado                : 133
array                : 10
asignacion           : 1
bloque_switch        : 117 120
booleano             : 13 27
caso_switch          : 118 119 120
comparacion          : 132 133
comparaciones        : 36 37 38 39 40 41 133
condicion            : 24 134
condiciones          : 3 60 100 101 102
contArray            : 67
contArrayCadenas     : 69 74
contArrayEnteros     : 68 72
contArrayFloat       : 70 76
contPrint            : 77
contScan             : 85
contenido            : 78 79 80 81
dato                 : 48 48 49 49 50 50 51 51
derefer              : 23
else                 : 37 39 41
expresion            : 2 14 15 22 28 33 53 87 99
factor               : 126 126 127 127 128 128 129 129 130 130 131 131
funcion              : 12
funcion_parametro    : 104
funcion_sin_parametro : 103
funcion_sin_parametro_return : 105
incrementa           : 60
inicio               : 60
instrucciones        : 36 37 38 39 42 43 60 106 108 109 110 111 118 119 120 125 0
lectura              : 9
mapa                 : 7 31
mas                  : 48 50
masCont              : 78 80
numericos            : 94 95
operadorArit         : 87
par                  : 46
parametros           : 110 111 112 114 116
print                : 6
puntero              : 8 17 18
refer                : 17 32
sentenciaFor         : 5
sentenciaIf          : 4 45
switch               : 11
switch_default       : 121
term                 : 87 93
typeData             : 46 46 47 47 57 115 116
valor                : 19 20 23

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . VARIABLE DECLARADOR valor
    (20) asignacion -> . VARIABLE IGUAL valor
    (21) asignacion -> . VARIABLE MASIGUAL acumular
    (22) asignacion -> . VARIABLE MENOSIGUAL expresion
    (23) asignacion -> . derefer IGUAL valor
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (60) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (77) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (57) puntero -> . PRODUCTO typeData
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (67) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (117) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (103) funcion -> . funcion_sin_parametro
    (104) funcion -> . funcion_parametro
    (105) funcion -> . funcion_sin_parametro_return
    (59) derefer -> . PRODUCTO VARIABLE
    (94) term -> . numericos
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (106) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 20
    FOR             shift and go to state 21
    IMPRIMIR        shift and go to state 22
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 25
    SCAN            shift and go to state 26
    SWITCH          shift and go to state 28
    BOOL            shift and go to state 16
    FUNC            shift and go to state 33
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    derefer                        shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19
    funcion_sin_parametro          shift and go to state 29
    funcion_parametro              shift and go to state 30
    funcion_sin_parametro_return   shift and go to state 31
    numericos                      shift and go to state 32

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    RETURN          reduce using rule 1 (instrucciones -> asignacion .)
    LLAVERIGHT      reduce using rule 1 (instrucciones -> asignacion .)
    BREAK           reduce using rule 1 (instrucciones -> asignacion .)
    CONTINUE        reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> expresion .
    (87) expresion -> expresion . operadorArit term
    (88) operadorArit -> . SUMA
    (89) operadorArit -> . RESTA
    (90) operadorArit -> . PRODUCTO
    (91) operadorArit -> . DIVISION
    (92) operadorArit -> . MODULO

    $end            reduce using rule 2 (instrucciones -> expresion .)
    RETURN          reduce using rule 2 (instrucciones -> expresion .)
    LLAVERIGHT      reduce using rule 2 (instrucciones -> expresion .)
    BREAK           reduce using rule 2 (instrucciones -> expresion .)
    CONTINUE        reduce using rule 2 (instrucciones -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

    operadorArit                   shift and go to state 35

state 4

    (3) instrucciones -> condiciones .

    $end            reduce using rule 3 (instrucciones -> condiciones .)
    RETURN          reduce using rule 3 (instrucciones -> condiciones .)
    LLAVERIGHT      reduce using rule 3 (instrucciones -> condiciones .)
    BREAK           reduce using rule 3 (instrucciones -> condiciones .)
    CONTINUE        reduce using rule 3 (instrucciones -> condiciones .)


state 5

    (4) instrucciones -> sentenciaIf .

    $end            reduce using rule 4 (instrucciones -> sentenciaIf .)
    RETURN          reduce using rule 4 (instrucciones -> sentenciaIf .)
    LLAVERIGHT      reduce using rule 4 (instrucciones -> sentenciaIf .)
    BREAK           reduce using rule 4 (instrucciones -> sentenciaIf .)
    CONTINUE        reduce using rule 4 (instrucciones -> sentenciaIf .)


state 6

    (5) instrucciones -> sentenciaFor .

    $end            reduce using rule 5 (instrucciones -> sentenciaFor .)
    RETURN          reduce using rule 5 (instrucciones -> sentenciaFor .)
    LLAVERIGHT      reduce using rule 5 (instrucciones -> sentenciaFor .)
    BREAK           reduce using rule 5 (instrucciones -> sentenciaFor .)
    CONTINUE        reduce using rule 5 (instrucciones -> sentenciaFor .)


state 7

    (6) instrucciones -> print .

    $end            reduce using rule 6 (instrucciones -> print .)
    RETURN          reduce using rule 6 (instrucciones -> print .)
    LLAVERIGHT      reduce using rule 6 (instrucciones -> print .)
    BREAK           reduce using rule 6 (instrucciones -> print .)
    CONTINUE        reduce using rule 6 (instrucciones -> print .)


state 8

    (7) instrucciones -> mapa .

    $end            reduce using rule 7 (instrucciones -> mapa .)
    RETURN          reduce using rule 7 (instrucciones -> mapa .)
    LLAVERIGHT      reduce using rule 7 (instrucciones -> mapa .)
    BREAK           reduce using rule 7 (instrucciones -> mapa .)
    CONTINUE        reduce using rule 7 (instrucciones -> mapa .)


state 9

    (8) instrucciones -> puntero .

    $end            reduce using rule 8 (instrucciones -> puntero .)
    RETURN          reduce using rule 8 (instrucciones -> puntero .)
    LLAVERIGHT      reduce using rule 8 (instrucciones -> puntero .)
    BREAK           reduce using rule 8 (instrucciones -> puntero .)
    CONTINUE        reduce using rule 8 (instrucciones -> puntero .)


state 10

    (9) instrucciones -> lectura .

    $end            reduce using rule 9 (instrucciones -> lectura .)
    RETURN          reduce using rule 9 (instrucciones -> lectura .)
    LLAVERIGHT      reduce using rule 9 (instrucciones -> lectura .)
    BREAK           reduce using rule 9 (instrucciones -> lectura .)
    CONTINUE        reduce using rule 9 (instrucciones -> lectura .)


state 11

    (10) instrucciones -> array .

    $end            reduce using rule 10 (instrucciones -> array .)
    RETURN          reduce using rule 10 (instrucciones -> array .)
    LLAVERIGHT      reduce using rule 10 (instrucciones -> array .)
    BREAK           reduce using rule 10 (instrucciones -> array .)
    CONTINUE        reduce using rule 10 (instrucciones -> array .)


state 12

    (11) instrucciones -> switch .

    $end            reduce using rule 11 (instrucciones -> switch .)
    RETURN          reduce using rule 11 (instrucciones -> switch .)
    LLAVERIGHT      reduce using rule 11 (instrucciones -> switch .)
    BREAK           reduce using rule 11 (instrucciones -> switch .)
    CONTINUE        reduce using rule 11 (instrucciones -> switch .)


state 13

    (12) instrucciones -> funcion .

    $end            reduce using rule 12 (instrucciones -> funcion .)
    RETURN          reduce using rule 12 (instrucciones -> funcion .)
    LLAVERIGHT      reduce using rule 12 (instrucciones -> funcion .)
    BREAK           reduce using rule 12 (instrucciones -> funcion .)
    CONTINUE        reduce using rule 12 (instrucciones -> funcion .)


state 14

    (13) asignacion -> VAR . VARIABLE BOOL IGUAL booleano
    (14) asignacion -> VAR . VARIABLE INT IGUAL expresion
    (15) asignacion -> VAR . VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> VAR . VARIABLE STRING IGUAL CADENA
    (17) asignacion -> VAR . VARIABLE puntero IGUAL refer
    (18) asignacion -> VAR . VARIABLE puntero

    VARIABLE        shift and go to state 41


state 15

    (19) asignacion -> VARIABLE . DECLARADOR valor
    (20) asignacion -> VARIABLE . IGUAL valor
    (21) asignacion -> VARIABLE . MASIGUAL acumular
    (22) asignacion -> VARIABLE . MENOSIGUAL expresion
    (67) array -> VARIABLE . DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (96) factor -> VARIABLE .

    DECLARADOR      shift and go to state 42
    IGUAL           shift and go to state 43
    MASIGUAL        shift and go to state 44
    MENOSIGUAL      shift and go to state 45
    MAYORQUE        reduce using rule 96 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 96 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 96 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 96 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 96 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 96 (factor -> VARIABLE .)


state 16

    (137) factor -> BOOL .

    MAYORQUE        reduce using rule 137 (factor -> BOOL .)
    MENORQUE        reduce using rule 137 (factor -> BOOL .)
    DIFERENTE       reduce using rule 137 (factor -> BOOL .)
    ESIGUAL         reduce using rule 137 (factor -> BOOL .)
    MENORIGUAL      reduce using rule 137 (factor -> BOOL .)
    MAYORIGUAL      reduce using rule 137 (factor -> BOOL .)
    $end            reduce using rule 137 (factor -> BOOL .)
    AND             reduce using rule 137 (factor -> BOOL .)
    OR              reduce using rule 137 (factor -> BOOL .)
    LLAVELEFT       reduce using rule 137 (factor -> BOOL .)
    PARRIGHT        reduce using rule 137 (factor -> BOOL .)
    RETURN          reduce using rule 137 (factor -> BOOL .)
    LLAVERIGHT      reduce using rule 137 (factor -> BOOL .)
    PUNTOCOMA       reduce using rule 137 (factor -> BOOL .)
    BREAK           reduce using rule 137 (factor -> BOOL .)
    CONTINUE        reduce using rule 137 (factor -> BOOL .)


state 17

    (23) asignacion -> derefer . IGUAL valor

    IGUAL           shift and go to state 46


state 18

    (93) expresion -> term .

    SUMA            reduce using rule 93 (expresion -> term .)
    RESTA           reduce using rule 93 (expresion -> term .)
    PRODUCTO        reduce using rule 93 (expresion -> term .)
    DIVISION        reduce using rule 93 (expresion -> term .)
    MODULO          reduce using rule 93 (expresion -> term .)
    $end            reduce using rule 93 (expresion -> term .)
    PARRIGHT        reduce using rule 93 (expresion -> term .)
    RETURN          reduce using rule 93 (expresion -> term .)
    LLAVERIGHT      reduce using rule 93 (expresion -> term .)
    BREAK           reduce using rule 93 (expresion -> term .)
    CONTINUE        reduce using rule 93 (expresion -> term .)
    DOSPUNTOS       reduce using rule 93 (expresion -> term .)
    COMA            reduce using rule 93 (expresion -> term .)


state 19

    (126) condiciones -> factor . MAYORQUE factor
    (127) condiciones -> factor . MENORQUE factor
    (128) condiciones -> factor . DIFERENTE factor
    (129) condiciones -> factor . ESIGUAL factor
    (130) condiciones -> factor . MENORIGUAL factor
    (131) condiciones -> factor . MAYORIGUAL factor

    MAYORQUE        shift and go to state 47
    MENORQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49
    ESIGUAL         shift and go to state 50
    MENORIGUAL      shift and go to state 51
    MAYORIGUAL      shift and go to state 52


state 20

    (36) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> IF . comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> IF . comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF . comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (132) comparaciones -> . comparacion
    (133) comparaciones -> . comparacion anado comparaciones
    (100) comparacion -> . condiciones
    (101) comparacion -> . NEGACION PARLEFT condiciones PARRIGHT
    (102) comparacion -> . PARLEFT condiciones PARRIGHT
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    NEGACION        shift and go to state 57
    PARLEFT         shift and go to state 58
    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34

    comparaciones                  shift and go to state 53
    comparacion                    shift and go to state 55
    condiciones                    shift and go to state 56
    factor                         shift and go to state 19
    numericos                      shift and go to state 59

state 21

    (60) sentenciaFor -> FOR . inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (61) inicio -> . VARIABLE DECLARADOR ENTERO

    VARIABLE        shift and go to state 61

    inicio                         shift and go to state 60

state 22

    (77) print -> IMPRIMIR . PARLEFT contPrint PARRIGHT

    PARLEFT         shift and go to state 62


state 23

    (99) numericos -> PARLEFT . expresion PARRIGHT
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    expresion                      shift and go to state 63
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 24

    (46) mapa -> MAP . CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP . CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT

    CORCHLEFT       shift and go to state 65


state 25

    (57) puntero -> PRODUCTO . typeData
    (59) derefer -> PRODUCTO . VARIABLE
    (63) typeData -> . BOOL
    (64) typeData -> . INT
    (65) typeData -> . FLOAT
    (66) typeData -> . STRING

    VARIABLE        shift and go to state 67
    BOOL            shift and go to state 68
    INT             shift and go to state 69
    FLOAT           shift and go to state 70
    STRING          shift and go to state 71

    typeData                       shift and go to state 66

state 26

    (85) lectura -> SCAN . PARLEFT contScan PARRIGHT

    PARLEFT         shift and go to state 72


state 27

    (97) numericos -> ENTERO .

    SUMA            reduce using rule 97 (numericos -> ENTERO .)
    RESTA           reduce using rule 97 (numericos -> ENTERO .)
    PRODUCTO        reduce using rule 97 (numericos -> ENTERO .)
    DIVISION        reduce using rule 97 (numericos -> ENTERO .)
    MODULO          reduce using rule 97 (numericos -> ENTERO .)
    $end            reduce using rule 97 (numericos -> ENTERO .)
    MAYORQUE        reduce using rule 97 (numericos -> ENTERO .)
    MENORQUE        reduce using rule 97 (numericos -> ENTERO .)
    DIFERENTE       reduce using rule 97 (numericos -> ENTERO .)
    ESIGUAL         reduce using rule 97 (numericos -> ENTERO .)
    MENORIGUAL      reduce using rule 97 (numericos -> ENTERO .)
    MAYORIGUAL      reduce using rule 97 (numericos -> ENTERO .)
    PARRIGHT        reduce using rule 97 (numericos -> ENTERO .)
    RETURN          reduce using rule 97 (numericos -> ENTERO .)
    LLAVERIGHT      reduce using rule 97 (numericos -> ENTERO .)
    BREAK           reduce using rule 97 (numericos -> ENTERO .)
    CONTINUE        reduce using rule 97 (numericos -> ENTERO .)
    DOSPUNTOS       reduce using rule 97 (numericos -> ENTERO .)
    COMA            reduce using rule 97 (numericos -> ENTERO .)
    AND             reduce using rule 97 (numericos -> ENTERO .)
    OR              reduce using rule 97 (numericos -> ENTERO .)
    LLAVELEFT       reduce using rule 97 (numericos -> ENTERO .)
    PUNTOCOMA       reduce using rule 97 (numericos -> ENTERO .)


state 28

    (117) switch -> SWITCH . VARIABLE LLAVELEFT bloque_switch LLAVERIGHT

    VARIABLE        shift and go to state 73


state 29

    (103) funcion -> funcion_sin_parametro .

    $end            reduce using rule 103 (funcion -> funcion_sin_parametro .)
    RETURN          reduce using rule 103 (funcion -> funcion_sin_parametro .)
    LLAVERIGHT      reduce using rule 103 (funcion -> funcion_sin_parametro .)
    BREAK           reduce using rule 103 (funcion -> funcion_sin_parametro .)
    CONTINUE        reduce using rule 103 (funcion -> funcion_sin_parametro .)


state 30

    (104) funcion -> funcion_parametro .

    $end            reduce using rule 104 (funcion -> funcion_parametro .)
    RETURN          reduce using rule 104 (funcion -> funcion_parametro .)
    LLAVERIGHT      reduce using rule 104 (funcion -> funcion_parametro .)
    BREAK           reduce using rule 104 (funcion -> funcion_parametro .)
    CONTINUE        reduce using rule 104 (funcion -> funcion_parametro .)


state 31

    (105) funcion -> funcion_sin_parametro_return .

    $end            reduce using rule 105 (funcion -> funcion_sin_parametro_return .)
    RETURN          reduce using rule 105 (funcion -> funcion_sin_parametro_return .)
    LLAVERIGHT      reduce using rule 105 (funcion -> funcion_sin_parametro_return .)
    BREAK           reduce using rule 105 (funcion -> funcion_sin_parametro_return .)
    CONTINUE        reduce using rule 105 (funcion -> funcion_sin_parametro_return .)


state 32

    (94) term -> numericos .
    (95) factor -> numericos .

    SUMA            reduce using rule 94 (term -> numericos .)
    RESTA           reduce using rule 94 (term -> numericos .)
    PRODUCTO        reduce using rule 94 (term -> numericos .)
    DIVISION        reduce using rule 94 (term -> numericos .)
    MODULO          reduce using rule 94 (term -> numericos .)
    $end            reduce using rule 94 (term -> numericos .)
    RETURN          reduce using rule 94 (term -> numericos .)
    LLAVERIGHT      reduce using rule 94 (term -> numericos .)
    BREAK           reduce using rule 94 (term -> numericos .)
    CONTINUE        reduce using rule 94 (term -> numericos .)
    MAYORQUE        reduce using rule 95 (factor -> numericos .)
    MENORQUE        reduce using rule 95 (factor -> numericos .)
    DIFERENTE       reduce using rule 95 (factor -> numericos .)
    ESIGUAL         reduce using rule 95 (factor -> numericos .)
    MENORIGUAL      reduce using rule 95 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 95 (factor -> numericos .)


state 33

    (106) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> FUNC . VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> FUNC . VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 74


state 34

    (98) numericos -> FLOTANTE .

    SUMA            reduce using rule 98 (numericos -> FLOTANTE .)
    RESTA           reduce using rule 98 (numericos -> FLOTANTE .)
    PRODUCTO        reduce using rule 98 (numericos -> FLOTANTE .)
    DIVISION        reduce using rule 98 (numericos -> FLOTANTE .)
    MODULO          reduce using rule 98 (numericos -> FLOTANTE .)
    $end            reduce using rule 98 (numericos -> FLOTANTE .)
    MAYORQUE        reduce using rule 98 (numericos -> FLOTANTE .)
    MENORQUE        reduce using rule 98 (numericos -> FLOTANTE .)
    DIFERENTE       reduce using rule 98 (numericos -> FLOTANTE .)
    ESIGUAL         reduce using rule 98 (numericos -> FLOTANTE .)
    MENORIGUAL      reduce using rule 98 (numericos -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 98 (numericos -> FLOTANTE .)
    PARRIGHT        reduce using rule 98 (numericos -> FLOTANTE .)
    RETURN          reduce using rule 98 (numericos -> FLOTANTE .)
    LLAVERIGHT      reduce using rule 98 (numericos -> FLOTANTE .)
    BREAK           reduce using rule 98 (numericos -> FLOTANTE .)
    CONTINUE        reduce using rule 98 (numericos -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 98 (numericos -> FLOTANTE .)
    COMA            reduce using rule 98 (numericos -> FLOTANTE .)
    AND             reduce using rule 98 (numericos -> FLOTANTE .)
    OR              reduce using rule 98 (numericos -> FLOTANTE .)
    LLAVELEFT       reduce using rule 98 (numericos -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 98 (numericos -> FLOTANTE .)


state 35

    (87) expresion -> expresion operadorArit . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    term                           shift and go to state 75
    numericos                      shift and go to state 64

state 36

    (88) operadorArit -> SUMA .

    ENTERO          reduce using rule 88 (operadorArit -> SUMA .)
    FLOTANTE        reduce using rule 88 (operadorArit -> SUMA .)
    PARLEFT         reduce using rule 88 (operadorArit -> SUMA .)


state 37

    (89) operadorArit -> RESTA .

    ENTERO          reduce using rule 89 (operadorArit -> RESTA .)
    FLOTANTE        reduce using rule 89 (operadorArit -> RESTA .)
    PARLEFT         reduce using rule 89 (operadorArit -> RESTA .)


state 38

    (90) operadorArit -> PRODUCTO .

    ENTERO          reduce using rule 90 (operadorArit -> PRODUCTO .)
    FLOTANTE        reduce using rule 90 (operadorArit -> PRODUCTO .)
    PARLEFT         reduce using rule 90 (operadorArit -> PRODUCTO .)


state 39

    (91) operadorArit -> DIVISION .

    ENTERO          reduce using rule 91 (operadorArit -> DIVISION .)
    FLOTANTE        reduce using rule 91 (operadorArit -> DIVISION .)
    PARLEFT         reduce using rule 91 (operadorArit -> DIVISION .)


state 40

    (92) operadorArit -> MODULO .

    ENTERO          reduce using rule 92 (operadorArit -> MODULO .)
    FLOTANTE        reduce using rule 92 (operadorArit -> MODULO .)
    PARLEFT         reduce using rule 92 (operadorArit -> MODULO .)


state 41

    (13) asignacion -> VAR VARIABLE . BOOL IGUAL booleano
    (14) asignacion -> VAR VARIABLE . INT IGUAL expresion
    (15) asignacion -> VAR VARIABLE . FLOAT IGUAL expresion
    (16) asignacion -> VAR VARIABLE . STRING IGUAL CADENA
    (17) asignacion -> VAR VARIABLE . puntero IGUAL refer
    (18) asignacion -> VAR VARIABLE . puntero
    (57) puntero -> . PRODUCTO typeData

    BOOL            shift and go to state 76
    INT             shift and go to state 77
    FLOAT           shift and go to state 78
    STRING          shift and go to state 79
    PRODUCTO        shift and go to state 81

    puntero                        shift and go to state 80

state 42

    (19) asignacion -> VARIABLE DECLARADOR . valor
    (67) array -> VARIABLE DECLARADOR . CORCHLEFT ENTERO CORCHRIGHT contArray
    (27) valor -> . booleano
    (28) valor -> . expresion
    (29) valor -> . CADENA
    (30) valor -> . VARIABLE
    (31) valor -> . mapa
    (32) valor -> . refer
    (24) booleano -> . condicion
    (25) booleano -> . TRUE
    (26) booleano -> . FALSE
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) refer -> . AMPERSAND VARIABLE
    (135) condicion -> . AND
    (136) condicion -> . OR
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    CORCHLEFT       shift and go to state 84
    CADENA          shift and go to state 87
    VARIABLE        shift and go to state 82
    TRUE            shift and go to state 91
    FALSE           shift and go to state 92
    MAP             shift and go to state 24
    AMPERSAND       shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    valor                          shift and go to state 83
    booleano                       shift and go to state 85
    expresion                      shift and go to state 86
    mapa                           shift and go to state 88
    refer                          shift and go to state 89
    condicion                      shift and go to state 90
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 43

    (20) asignacion -> VARIABLE IGUAL . valor
    (27) valor -> . booleano
    (28) valor -> . expresion
    (29) valor -> . CADENA
    (30) valor -> . VARIABLE
    (31) valor -> . mapa
    (32) valor -> . refer
    (24) booleano -> . condicion
    (25) booleano -> . TRUE
    (26) booleano -> . FALSE
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) refer -> . AMPERSAND VARIABLE
    (135) condicion -> . AND
    (136) condicion -> . OR
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 87
    VARIABLE        shift and go to state 82
    TRUE            shift and go to state 91
    FALSE           shift and go to state 92
    MAP             shift and go to state 24
    AMPERSAND       shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    valor                          shift and go to state 96
    booleano                       shift and go to state 85
    expresion                      shift and go to state 86
    mapa                           shift and go to state 88
    refer                          shift and go to state 89
    condicion                      shift and go to state 90
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 44

    (21) asignacion -> VARIABLE MASIGUAL . acumular
    (33) acumular -> . expresion
    (34) acumular -> . CADENA
    (35) acumular -> . VARIABLE
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 100
    VARIABLE        shift and go to state 97
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    acumular                       shift and go to state 98
    expresion                      shift and go to state 99
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 45

    (22) asignacion -> VARIABLE MENOSIGUAL . expresion
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    expresion                      shift and go to state 101
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 46

    (23) asignacion -> derefer IGUAL . valor
    (27) valor -> . booleano
    (28) valor -> . expresion
    (29) valor -> . CADENA
    (30) valor -> . VARIABLE
    (31) valor -> . mapa
    (32) valor -> . refer
    (24) booleano -> . condicion
    (25) booleano -> . TRUE
    (26) booleano -> . FALSE
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (58) refer -> . AMPERSAND VARIABLE
    (135) condicion -> . AND
    (136) condicion -> . OR
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 87
    VARIABLE        shift and go to state 82
    TRUE            shift and go to state 91
    FALSE           shift and go to state 92
    MAP             shift and go to state 24
    AMPERSAND       shift and go to state 93
    AND             shift and go to state 94
    OR              shift and go to state 95
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    valor                          shift and go to state 102
    booleano                       shift and go to state 85
    expresion                      shift and go to state 86
    mapa                           shift and go to state 88
    refer                          shift and go to state 89
    condicion                      shift and go to state 90
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 47

    (126) condiciones -> factor MAYORQUE . factor
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    factor                         shift and go to state 103
    numericos                      shift and go to state 59

state 48

    (127) condiciones -> factor MENORQUE . factor
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    factor                         shift and go to state 104
    numericos                      shift and go to state 59

state 49

    (128) condiciones -> factor DIFERENTE . factor
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    factor                         shift and go to state 105
    numericos                      shift and go to state 59

state 50

    (129) condiciones -> factor ESIGUAL . factor
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    factor                         shift and go to state 106
    numericos                      shift and go to state 59

state 51

    (130) condiciones -> factor MENORIGUAL . factor
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    factor                         shift and go to state 107
    numericos                      shift and go to state 59

state 52

    (131) condiciones -> factor MAYORIGUAL . factor
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    factor                         shift and go to state 108
    numericos                      shift and go to state 59

state 53

    (36) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones . LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> IF comparaciones . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones . LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 109


state 54

    (96) factor -> VARIABLE .

    MAYORQUE        reduce using rule 96 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 96 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 96 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 96 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 96 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 96 (factor -> VARIABLE .)
    $end            reduce using rule 96 (factor -> VARIABLE .)
    AND             reduce using rule 96 (factor -> VARIABLE .)
    OR              reduce using rule 96 (factor -> VARIABLE .)
    LLAVELEFT       reduce using rule 96 (factor -> VARIABLE .)
    PARRIGHT        reduce using rule 96 (factor -> VARIABLE .)
    RETURN          reduce using rule 96 (factor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 96 (factor -> VARIABLE .)
    PUNTOCOMA       reduce using rule 96 (factor -> VARIABLE .)
    BREAK           reduce using rule 96 (factor -> VARIABLE .)
    CONTINUE        reduce using rule 96 (factor -> VARIABLE .)


state 55

    (132) comparaciones -> comparacion .
    (133) comparaciones -> comparacion . anado comparaciones
    (134) anado -> . condicion
    (135) condicion -> . AND
    (136) condicion -> . OR

    LLAVELEFT       reduce using rule 132 (comparaciones -> comparacion .)
    AND             shift and go to state 94
    OR              shift and go to state 95

    anado                          shift and go to state 110
    condicion                      shift and go to state 111

state 56

    (100) comparacion -> condiciones .

    AND             reduce using rule 100 (comparacion -> condiciones .)
    OR              reduce using rule 100 (comparacion -> condiciones .)
    LLAVELEFT       reduce using rule 100 (comparacion -> condiciones .)


state 57

    (101) comparacion -> NEGACION . PARLEFT condiciones PARRIGHT

    PARLEFT         shift and go to state 112


state 58

    (102) comparacion -> PARLEFT . condiciones PARRIGHT
    (99) numericos -> PARLEFT . expresion PARRIGHT
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    condiciones                    shift and go to state 113
    expresion                      shift and go to state 63
    factor                         shift and go to state 19
    term                           shift and go to state 18
    numericos                      shift and go to state 114

state 59

    (95) factor -> numericos .

    MAYORQUE        reduce using rule 95 (factor -> numericos .)
    MENORQUE        reduce using rule 95 (factor -> numericos .)
    DIFERENTE       reduce using rule 95 (factor -> numericos .)
    ESIGUAL         reduce using rule 95 (factor -> numericos .)
    MENORIGUAL      reduce using rule 95 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 95 (factor -> numericos .)
    $end            reduce using rule 95 (factor -> numericos .)
    AND             reduce using rule 95 (factor -> numericos .)
    OR              reduce using rule 95 (factor -> numericos .)
    LLAVELEFT       reduce using rule 95 (factor -> numericos .)
    PARRIGHT        reduce using rule 95 (factor -> numericos .)
    RETURN          reduce using rule 95 (factor -> numericos .)
    LLAVERIGHT      reduce using rule 95 (factor -> numericos .)
    PUNTOCOMA       reduce using rule 95 (factor -> numericos .)
    BREAK           reduce using rule 95 (factor -> numericos .)
    CONTINUE        reduce using rule 95 (factor -> numericos .)


state 60

    (60) sentenciaFor -> FOR inicio . PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 115


state 61

    (61) inicio -> VARIABLE . DECLARADOR ENTERO

    DECLARADOR      shift and go to state 116


state 62

    (77) print -> IMPRIMIR PARLEFT . contPrint PARRIGHT
    (78) contPrint -> . contenido masCont
    (79) contPrint -> . contenido
    (82) contenido -> . CADENA
    (83) contenido -> . VARIABLE
    (84) contenido -> .

    CADENA          shift and go to state 119
    VARIABLE        shift and go to state 120
    COMA            reduce using rule 84 (contenido -> .)
    PARRIGHT        reduce using rule 84 (contenido -> .)

    contPrint                      shift and go to state 117
    contenido                      shift and go to state 118

state 63

    (99) numericos -> PARLEFT expresion . PARRIGHT
    (87) expresion -> expresion . operadorArit term
    (88) operadorArit -> . SUMA
    (89) operadorArit -> . RESTA
    (90) operadorArit -> . PRODUCTO
    (91) operadorArit -> . DIVISION
    (92) operadorArit -> . MODULO

    PARRIGHT        shift and go to state 121
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

    operadorArit                   shift and go to state 35

state 64

    (94) term -> numericos .

    PARRIGHT        reduce using rule 94 (term -> numericos .)
    SUMA            reduce using rule 94 (term -> numericos .)
    RESTA           reduce using rule 94 (term -> numericos .)
    PRODUCTO        reduce using rule 94 (term -> numericos .)
    DIVISION        reduce using rule 94 (term -> numericos .)
    MODULO          reduce using rule 94 (term -> numericos .)
    $end            reduce using rule 94 (term -> numericos .)
    RETURN          reduce using rule 94 (term -> numericos .)
    LLAVERIGHT      reduce using rule 94 (term -> numericos .)
    BREAK           reduce using rule 94 (term -> numericos .)
    CONTINUE        reduce using rule 94 (term -> numericos .)
    DOSPUNTOS       reduce using rule 94 (term -> numericos .)
    COMA            reduce using rule 94 (term -> numericos .)


state 65

    (46) mapa -> MAP CORCHLEFT . typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT . typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (63) typeData -> . BOOL
    (64) typeData -> . INT
    (65) typeData -> . FLOAT
    (66) typeData -> . STRING

    BOOL            shift and go to state 68
    INT             shift and go to state 69
    FLOAT           shift and go to state 70
    STRING          shift and go to state 71

    typeData                       shift and go to state 122

state 66

    (57) puntero -> PRODUCTO typeData .

    $end            reduce using rule 57 (puntero -> PRODUCTO typeData .)
    IGUAL           reduce using rule 57 (puntero -> PRODUCTO typeData .)
    RETURN          reduce using rule 57 (puntero -> PRODUCTO typeData .)
    LLAVERIGHT      reduce using rule 57 (puntero -> PRODUCTO typeData .)
    BREAK           reduce using rule 57 (puntero -> PRODUCTO typeData .)
    CONTINUE        reduce using rule 57 (puntero -> PRODUCTO typeData .)


state 67

    (59) derefer -> PRODUCTO VARIABLE .

    IGUAL           reduce using rule 59 (derefer -> PRODUCTO VARIABLE .)


state 68

    (63) typeData -> BOOL .

    $end            reduce using rule 63 (typeData -> BOOL .)
    RETURN          reduce using rule 63 (typeData -> BOOL .)
    LLAVERIGHT      reduce using rule 63 (typeData -> BOOL .)
    BREAK           reduce using rule 63 (typeData -> BOOL .)
    CONTINUE        reduce using rule 63 (typeData -> BOOL .)
    CORCHRIGHT      reduce using rule 63 (typeData -> BOOL .)
    IGUAL           reduce using rule 63 (typeData -> BOOL .)
    VARIABLE        reduce using rule 63 (typeData -> BOOL .)
    LLAVELEFT       reduce using rule 63 (typeData -> BOOL .)


state 69

    (64) typeData -> INT .

    $end            reduce using rule 64 (typeData -> INT .)
    RETURN          reduce using rule 64 (typeData -> INT .)
    LLAVERIGHT      reduce using rule 64 (typeData -> INT .)
    BREAK           reduce using rule 64 (typeData -> INT .)
    CONTINUE        reduce using rule 64 (typeData -> INT .)
    CORCHRIGHT      reduce using rule 64 (typeData -> INT .)
    IGUAL           reduce using rule 64 (typeData -> INT .)
    VARIABLE        reduce using rule 64 (typeData -> INT .)
    LLAVELEFT       reduce using rule 64 (typeData -> INT .)


state 70

    (65) typeData -> FLOAT .

    $end            reduce using rule 65 (typeData -> FLOAT .)
    RETURN          reduce using rule 65 (typeData -> FLOAT .)
    LLAVERIGHT      reduce using rule 65 (typeData -> FLOAT .)
    BREAK           reduce using rule 65 (typeData -> FLOAT .)
    CONTINUE        reduce using rule 65 (typeData -> FLOAT .)
    CORCHRIGHT      reduce using rule 65 (typeData -> FLOAT .)
    IGUAL           reduce using rule 65 (typeData -> FLOAT .)
    VARIABLE        reduce using rule 65 (typeData -> FLOAT .)
    LLAVELEFT       reduce using rule 65 (typeData -> FLOAT .)


state 71

    (66) typeData -> STRING .

    $end            reduce using rule 66 (typeData -> STRING .)
    RETURN          reduce using rule 66 (typeData -> STRING .)
    LLAVERIGHT      reduce using rule 66 (typeData -> STRING .)
    BREAK           reduce using rule 66 (typeData -> STRING .)
    CONTINUE        reduce using rule 66 (typeData -> STRING .)
    CORCHRIGHT      reduce using rule 66 (typeData -> STRING .)
    IGUAL           reduce using rule 66 (typeData -> STRING .)
    VARIABLE        reduce using rule 66 (typeData -> STRING .)
    LLAVELEFT       reduce using rule 66 (typeData -> STRING .)


state 72

    (85) lectura -> SCAN PARLEFT . contScan PARRIGHT
    (86) contScan -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 124

    contScan                       shift and go to state 123

state 73

    (117) switch -> SWITCH VARIABLE . LLAVELEFT bloque_switch LLAVERIGHT

    LLAVELEFT       shift and go to state 125


state 74

    (106) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE . PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> FUNC VARIABLE . PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    PARLEFT         shift and go to state 126


state 75

    (87) expresion -> expresion operadorArit term .

    SUMA            reduce using rule 87 (expresion -> expresion operadorArit term .)
    RESTA           reduce using rule 87 (expresion -> expresion operadorArit term .)
    PRODUCTO        reduce using rule 87 (expresion -> expresion operadorArit term .)
    DIVISION        reduce using rule 87 (expresion -> expresion operadorArit term .)
    MODULO          reduce using rule 87 (expresion -> expresion operadorArit term .)
    $end            reduce using rule 87 (expresion -> expresion operadorArit term .)
    PARRIGHT        reduce using rule 87 (expresion -> expresion operadorArit term .)
    RETURN          reduce using rule 87 (expresion -> expresion operadorArit term .)
    LLAVERIGHT      reduce using rule 87 (expresion -> expresion operadorArit term .)
    BREAK           reduce using rule 87 (expresion -> expresion operadorArit term .)
    CONTINUE        reduce using rule 87 (expresion -> expresion operadorArit term .)
    DOSPUNTOS       reduce using rule 87 (expresion -> expresion operadorArit term .)
    COMA            reduce using rule 87 (expresion -> expresion operadorArit term .)


state 76

    (13) asignacion -> VAR VARIABLE BOOL . IGUAL booleano

    IGUAL           shift and go to state 127


state 77

    (14) asignacion -> VAR VARIABLE INT . IGUAL expresion

    IGUAL           shift and go to state 128


state 78

    (15) asignacion -> VAR VARIABLE FLOAT . IGUAL expresion

    IGUAL           shift and go to state 129


state 79

    (16) asignacion -> VAR VARIABLE STRING . IGUAL CADENA

    IGUAL           shift and go to state 130


state 80

    (17) asignacion -> VAR VARIABLE puntero . IGUAL refer
    (18) asignacion -> VAR VARIABLE puntero .

    IGUAL           shift and go to state 131
    $end            reduce using rule 18 (asignacion -> VAR VARIABLE puntero .)
    RETURN          reduce using rule 18 (asignacion -> VAR VARIABLE puntero .)
    LLAVERIGHT      reduce using rule 18 (asignacion -> VAR VARIABLE puntero .)
    BREAK           reduce using rule 18 (asignacion -> VAR VARIABLE puntero .)
    CONTINUE        reduce using rule 18 (asignacion -> VAR VARIABLE puntero .)


state 81

    (57) puntero -> PRODUCTO . typeData
    (63) typeData -> . BOOL
    (64) typeData -> . INT
    (65) typeData -> . FLOAT
    (66) typeData -> . STRING

    BOOL            shift and go to state 68
    INT             shift and go to state 69
    FLOAT           shift and go to state 70
    STRING          shift and go to state 71

    typeData                       shift and go to state 66

state 82

    (30) valor -> VARIABLE .

    $end            reduce using rule 30 (valor -> VARIABLE .)
    RETURN          reduce using rule 30 (valor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 30 (valor -> VARIABLE .)
    BREAK           reduce using rule 30 (valor -> VARIABLE .)
    CONTINUE        reduce using rule 30 (valor -> VARIABLE .)


state 83

    (19) asignacion -> VARIABLE DECLARADOR valor .

    $end            reduce using rule 19 (asignacion -> VARIABLE DECLARADOR valor .)
    RETURN          reduce using rule 19 (asignacion -> VARIABLE DECLARADOR valor .)
    LLAVERIGHT      reduce using rule 19 (asignacion -> VARIABLE DECLARADOR valor .)
    BREAK           reduce using rule 19 (asignacion -> VARIABLE DECLARADOR valor .)
    CONTINUE        reduce using rule 19 (asignacion -> VARIABLE DECLARADOR valor .)


state 84

    (67) array -> VARIABLE DECLARADOR CORCHLEFT . ENTERO CORCHRIGHT contArray

    ENTERO          shift and go to state 132


state 85

    (27) valor -> booleano .

    $end            reduce using rule 27 (valor -> booleano .)
    RETURN          reduce using rule 27 (valor -> booleano .)
    LLAVERIGHT      reduce using rule 27 (valor -> booleano .)
    BREAK           reduce using rule 27 (valor -> booleano .)
    CONTINUE        reduce using rule 27 (valor -> booleano .)


state 86

    (28) valor -> expresion .
    (87) expresion -> expresion . operadorArit term
    (88) operadorArit -> . SUMA
    (89) operadorArit -> . RESTA
    (90) operadorArit -> . PRODUCTO
    (91) operadorArit -> . DIVISION
    (92) operadorArit -> . MODULO

    $end            reduce using rule 28 (valor -> expresion .)
    RETURN          reduce using rule 28 (valor -> expresion .)
    LLAVERIGHT      reduce using rule 28 (valor -> expresion .)
    BREAK           reduce using rule 28 (valor -> expresion .)
    CONTINUE        reduce using rule 28 (valor -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

    operadorArit                   shift and go to state 35

state 87

    (29) valor -> CADENA .

    $end            reduce using rule 29 (valor -> CADENA .)
    RETURN          reduce using rule 29 (valor -> CADENA .)
    LLAVERIGHT      reduce using rule 29 (valor -> CADENA .)
    BREAK           reduce using rule 29 (valor -> CADENA .)
    CONTINUE        reduce using rule 29 (valor -> CADENA .)


state 88

    (31) valor -> mapa .

    $end            reduce using rule 31 (valor -> mapa .)
    RETURN          reduce using rule 31 (valor -> mapa .)
    LLAVERIGHT      reduce using rule 31 (valor -> mapa .)
    BREAK           reduce using rule 31 (valor -> mapa .)
    CONTINUE        reduce using rule 31 (valor -> mapa .)


state 89

    (32) valor -> refer .

    $end            reduce using rule 32 (valor -> refer .)
    RETURN          reduce using rule 32 (valor -> refer .)
    LLAVERIGHT      reduce using rule 32 (valor -> refer .)
    BREAK           reduce using rule 32 (valor -> refer .)
    CONTINUE        reduce using rule 32 (valor -> refer .)


state 90

    (24) booleano -> condicion .

    $end            reduce using rule 24 (booleano -> condicion .)
    RETURN          reduce using rule 24 (booleano -> condicion .)
    LLAVERIGHT      reduce using rule 24 (booleano -> condicion .)
    BREAK           reduce using rule 24 (booleano -> condicion .)
    CONTINUE        reduce using rule 24 (booleano -> condicion .)


state 91

    (25) booleano -> TRUE .

    $end            reduce using rule 25 (booleano -> TRUE .)
    RETURN          reduce using rule 25 (booleano -> TRUE .)
    LLAVERIGHT      reduce using rule 25 (booleano -> TRUE .)
    BREAK           reduce using rule 25 (booleano -> TRUE .)
    CONTINUE        reduce using rule 25 (booleano -> TRUE .)


state 92

    (26) booleano -> FALSE .

    $end            reduce using rule 26 (booleano -> FALSE .)
    RETURN          reduce using rule 26 (booleano -> FALSE .)
    LLAVERIGHT      reduce using rule 26 (booleano -> FALSE .)
    BREAK           reduce using rule 26 (booleano -> FALSE .)
    CONTINUE        reduce using rule 26 (booleano -> FALSE .)


state 93

    (58) refer -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 133


state 94

    (135) condicion -> AND .

    $end            reduce using rule 135 (condicion -> AND .)
    RETURN          reduce using rule 135 (condicion -> AND .)
    LLAVERIGHT      reduce using rule 135 (condicion -> AND .)
    BREAK           reduce using rule 135 (condicion -> AND .)
    CONTINUE        reduce using rule 135 (condicion -> AND .)
    NEGACION        reduce using rule 135 (condicion -> AND .)
    PARLEFT         reduce using rule 135 (condicion -> AND .)
    VARIABLE        reduce using rule 135 (condicion -> AND .)
    BOOL            reduce using rule 135 (condicion -> AND .)
    ENTERO          reduce using rule 135 (condicion -> AND .)
    FLOTANTE        reduce using rule 135 (condicion -> AND .)


state 95

    (136) condicion -> OR .

    $end            reduce using rule 136 (condicion -> OR .)
    RETURN          reduce using rule 136 (condicion -> OR .)
    LLAVERIGHT      reduce using rule 136 (condicion -> OR .)
    BREAK           reduce using rule 136 (condicion -> OR .)
    CONTINUE        reduce using rule 136 (condicion -> OR .)
    NEGACION        reduce using rule 136 (condicion -> OR .)
    PARLEFT         reduce using rule 136 (condicion -> OR .)
    VARIABLE        reduce using rule 136 (condicion -> OR .)
    BOOL            reduce using rule 136 (condicion -> OR .)
    ENTERO          reduce using rule 136 (condicion -> OR .)
    FLOTANTE        reduce using rule 136 (condicion -> OR .)


state 96

    (20) asignacion -> VARIABLE IGUAL valor .

    $end            reduce using rule 20 (asignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 20 (asignacion -> VARIABLE IGUAL valor .)
    LLAVERIGHT      reduce using rule 20 (asignacion -> VARIABLE IGUAL valor .)
    BREAK           reduce using rule 20 (asignacion -> VARIABLE IGUAL valor .)
    CONTINUE        reduce using rule 20 (asignacion -> VARIABLE IGUAL valor .)


state 97

    (35) acumular -> VARIABLE .

    $end            reduce using rule 35 (acumular -> VARIABLE .)
    RETURN          reduce using rule 35 (acumular -> VARIABLE .)
    LLAVERIGHT      reduce using rule 35 (acumular -> VARIABLE .)
    BREAK           reduce using rule 35 (acumular -> VARIABLE .)
    CONTINUE        reduce using rule 35 (acumular -> VARIABLE .)


state 98

    (21) asignacion -> VARIABLE MASIGUAL acumular .

    $end            reduce using rule 21 (asignacion -> VARIABLE MASIGUAL acumular .)
    RETURN          reduce using rule 21 (asignacion -> VARIABLE MASIGUAL acumular .)
    LLAVERIGHT      reduce using rule 21 (asignacion -> VARIABLE MASIGUAL acumular .)
    BREAK           reduce using rule 21 (asignacion -> VARIABLE MASIGUAL acumular .)
    CONTINUE        reduce using rule 21 (asignacion -> VARIABLE MASIGUAL acumular .)


state 99

    (33) acumular -> expresion .
    (87) expresion -> expresion . operadorArit term
    (88) operadorArit -> . SUMA
    (89) operadorArit -> . RESTA
    (90) operadorArit -> . PRODUCTO
    (91) operadorArit -> . DIVISION
    (92) operadorArit -> . MODULO

    $end            reduce using rule 33 (acumular -> expresion .)
    RETURN          reduce using rule 33 (acumular -> expresion .)
    LLAVERIGHT      reduce using rule 33 (acumular -> expresion .)
    BREAK           reduce using rule 33 (acumular -> expresion .)
    CONTINUE        reduce using rule 33 (acumular -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

    operadorArit                   shift and go to state 35

state 100

    (34) acumular -> CADENA .

    $end            reduce using rule 34 (acumular -> CADENA .)
    RETURN          reduce using rule 34 (acumular -> CADENA .)
    LLAVERIGHT      reduce using rule 34 (acumular -> CADENA .)
    BREAK           reduce using rule 34 (acumular -> CADENA .)
    CONTINUE        reduce using rule 34 (acumular -> CADENA .)


state 101

    (22) asignacion -> VARIABLE MENOSIGUAL expresion .
    (87) expresion -> expresion . operadorArit term
    (88) operadorArit -> . SUMA
    (89) operadorArit -> . RESTA
    (90) operadorArit -> . PRODUCTO
    (91) operadorArit -> . DIVISION
    (92) operadorArit -> . MODULO

    $end            reduce using rule 22 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    RETURN          reduce using rule 22 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    LLAVERIGHT      reduce using rule 22 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    BREAK           reduce using rule 22 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    CONTINUE        reduce using rule 22 (asignacion -> VARIABLE MENOSIGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

    operadorArit                   shift and go to state 35

state 102

    (23) asignacion -> derefer IGUAL valor .

    $end            reduce using rule 23 (asignacion -> derefer IGUAL valor .)
    RETURN          reduce using rule 23 (asignacion -> derefer IGUAL valor .)
    LLAVERIGHT      reduce using rule 23 (asignacion -> derefer IGUAL valor .)
    BREAK           reduce using rule 23 (asignacion -> derefer IGUAL valor .)
    CONTINUE        reduce using rule 23 (asignacion -> derefer IGUAL valor .)


state 103

    (126) condiciones -> factor MAYORQUE factor .

    $end            reduce using rule 126 (condiciones -> factor MAYORQUE factor .)
    AND             reduce using rule 126 (condiciones -> factor MAYORQUE factor .)
    OR              reduce using rule 126 (condiciones -> factor MAYORQUE factor .)
    LLAVELEFT       reduce using rule 126 (condiciones -> factor MAYORQUE factor .)
    PARRIGHT        reduce using rule 126 (condiciones -> factor MAYORQUE factor .)
    RETURN          reduce using rule 126 (condiciones -> factor MAYORQUE factor .)
    LLAVERIGHT      reduce using rule 126 (condiciones -> factor MAYORQUE factor .)
    PUNTOCOMA       reduce using rule 126 (condiciones -> factor MAYORQUE factor .)
    BREAK           reduce using rule 126 (condiciones -> factor MAYORQUE factor .)
    CONTINUE        reduce using rule 126 (condiciones -> factor MAYORQUE factor .)


state 104

    (127) condiciones -> factor MENORQUE factor .

    $end            reduce using rule 127 (condiciones -> factor MENORQUE factor .)
    AND             reduce using rule 127 (condiciones -> factor MENORQUE factor .)
    OR              reduce using rule 127 (condiciones -> factor MENORQUE factor .)
    LLAVELEFT       reduce using rule 127 (condiciones -> factor MENORQUE factor .)
    PARRIGHT        reduce using rule 127 (condiciones -> factor MENORQUE factor .)
    RETURN          reduce using rule 127 (condiciones -> factor MENORQUE factor .)
    LLAVERIGHT      reduce using rule 127 (condiciones -> factor MENORQUE factor .)
    PUNTOCOMA       reduce using rule 127 (condiciones -> factor MENORQUE factor .)
    BREAK           reduce using rule 127 (condiciones -> factor MENORQUE factor .)
    CONTINUE        reduce using rule 127 (condiciones -> factor MENORQUE factor .)


state 105

    (128) condiciones -> factor DIFERENTE factor .

    $end            reduce using rule 128 (condiciones -> factor DIFERENTE factor .)
    AND             reduce using rule 128 (condiciones -> factor DIFERENTE factor .)
    OR              reduce using rule 128 (condiciones -> factor DIFERENTE factor .)
    LLAVELEFT       reduce using rule 128 (condiciones -> factor DIFERENTE factor .)
    PARRIGHT        reduce using rule 128 (condiciones -> factor DIFERENTE factor .)
    RETURN          reduce using rule 128 (condiciones -> factor DIFERENTE factor .)
    LLAVERIGHT      reduce using rule 128 (condiciones -> factor DIFERENTE factor .)
    PUNTOCOMA       reduce using rule 128 (condiciones -> factor DIFERENTE factor .)
    BREAK           reduce using rule 128 (condiciones -> factor DIFERENTE factor .)
    CONTINUE        reduce using rule 128 (condiciones -> factor DIFERENTE factor .)


state 106

    (129) condiciones -> factor ESIGUAL factor .

    $end            reduce using rule 129 (condiciones -> factor ESIGUAL factor .)
    AND             reduce using rule 129 (condiciones -> factor ESIGUAL factor .)
    OR              reduce using rule 129 (condiciones -> factor ESIGUAL factor .)
    LLAVELEFT       reduce using rule 129 (condiciones -> factor ESIGUAL factor .)
    PARRIGHT        reduce using rule 129 (condiciones -> factor ESIGUAL factor .)
    RETURN          reduce using rule 129 (condiciones -> factor ESIGUAL factor .)
    LLAVERIGHT      reduce using rule 129 (condiciones -> factor ESIGUAL factor .)
    PUNTOCOMA       reduce using rule 129 (condiciones -> factor ESIGUAL factor .)
    BREAK           reduce using rule 129 (condiciones -> factor ESIGUAL factor .)
    CONTINUE        reduce using rule 129 (condiciones -> factor ESIGUAL factor .)


state 107

    (130) condiciones -> factor MENORIGUAL factor .

    $end            reduce using rule 130 (condiciones -> factor MENORIGUAL factor .)
    AND             reduce using rule 130 (condiciones -> factor MENORIGUAL factor .)
    OR              reduce using rule 130 (condiciones -> factor MENORIGUAL factor .)
    LLAVELEFT       reduce using rule 130 (condiciones -> factor MENORIGUAL factor .)
    PARRIGHT        reduce using rule 130 (condiciones -> factor MENORIGUAL factor .)
    RETURN          reduce using rule 130 (condiciones -> factor MENORIGUAL factor .)
    LLAVERIGHT      reduce using rule 130 (condiciones -> factor MENORIGUAL factor .)
    PUNTOCOMA       reduce using rule 130 (condiciones -> factor MENORIGUAL factor .)
    BREAK           reduce using rule 130 (condiciones -> factor MENORIGUAL factor .)
    CONTINUE        reduce using rule 130 (condiciones -> factor MENORIGUAL factor .)


state 108

    (131) condiciones -> factor MAYORIGUAL factor .

    $end            reduce using rule 131 (condiciones -> factor MAYORIGUAL factor .)
    AND             reduce using rule 131 (condiciones -> factor MAYORIGUAL factor .)
    OR              reduce using rule 131 (condiciones -> factor MAYORIGUAL factor .)
    LLAVELEFT       reduce using rule 131 (condiciones -> factor MAYORIGUAL factor .)
    PARRIGHT        reduce using rule 131 (condiciones -> factor MAYORIGUAL factor .)
    RETURN          reduce using rule 131 (condiciones -> factor MAYORIGUAL factor .)
    LLAVERIGHT      reduce using rule 131 (condiciones -> factor MAYORIGUAL factor .)
    PUNTOCOMA       reduce using rule 131 (condiciones -> factor MAYORIGUAL factor .)
    BREAK           reduce using rule 131 (condiciones -> factor MAYORIGUAL factor .)
    CONTINUE        reduce using rule 131 (condiciones -> factor MAYORIGUAL factor .)


state 109

    (36) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones LLAVELEFT . instrucciones LLAVERIGHT else
    (40) sentenciaIf -> IF comparaciones LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones LLAVELEFT . RETURN VARIABLE LLAVERIGHT else
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . VARIABLE DECLARADOR valor
    (20) asignacion -> . VARIABLE IGUAL valor
    (21) asignacion -> . VARIABLE MASIGUAL acumular
    (22) asignacion -> . VARIABLE MENOSIGUAL expresion
    (23) asignacion -> . derefer IGUAL valor
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (60) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (77) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (57) puntero -> . PRODUCTO typeData
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (67) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (117) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (103) funcion -> . funcion_sin_parametro
    (104) funcion -> . funcion_parametro
    (105) funcion -> . funcion_sin_parametro_return
    (59) derefer -> . PRODUCTO VARIABLE
    (94) term -> . numericos
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (106) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 135
    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 20
    FOR             shift and go to state 21
    IMPRIMIR        shift and go to state 22
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 25
    SCAN            shift and go to state 26
    SWITCH          shift and go to state 28
    BOOL            shift and go to state 16
    FUNC            shift and go to state 33
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    instrucciones                  shift and go to state 134
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    derefer                        shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19
    funcion_sin_parametro          shift and go to state 29
    funcion_parametro              shift and go to state 30
    funcion_sin_parametro_return   shift and go to state 31
    numericos                      shift and go to state 32

state 110

    (133) comparaciones -> comparacion anado . comparaciones
    (132) comparaciones -> . comparacion
    (133) comparaciones -> . comparacion anado comparaciones
    (100) comparacion -> . condiciones
    (101) comparacion -> . NEGACION PARLEFT condiciones PARRIGHT
    (102) comparacion -> . PARLEFT condiciones PARRIGHT
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    NEGACION        shift and go to state 57
    PARLEFT         shift and go to state 58
    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34

    comparacion                    shift and go to state 55
    comparaciones                  shift and go to state 136
    condiciones                    shift and go to state 56
    factor                         shift and go to state 19
    numericos                      shift and go to state 59

state 111

    (134) anado -> condicion .

    NEGACION        reduce using rule 134 (anado -> condicion .)
    PARLEFT         reduce using rule 134 (anado -> condicion .)
    VARIABLE        reduce using rule 134 (anado -> condicion .)
    BOOL            reduce using rule 134 (anado -> condicion .)
    ENTERO          reduce using rule 134 (anado -> condicion .)
    FLOTANTE        reduce using rule 134 (anado -> condicion .)


state 112

    (101) comparacion -> NEGACION PARLEFT . condiciones PARRIGHT
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    condiciones                    shift and go to state 137
    factor                         shift and go to state 19
    numericos                      shift and go to state 59

state 113

    (102) comparacion -> PARLEFT condiciones . PARRIGHT

    PARRIGHT        shift and go to state 138


state 114

    (95) factor -> numericos .
    (94) term -> numericos .

    MAYORQUE        reduce using rule 95 (factor -> numericos .)
    MENORQUE        reduce using rule 95 (factor -> numericos .)
    DIFERENTE       reduce using rule 95 (factor -> numericos .)
    ESIGUAL         reduce using rule 95 (factor -> numericos .)
    MENORIGUAL      reduce using rule 95 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 95 (factor -> numericos .)
    PARRIGHT        reduce using rule 94 (term -> numericos .)
    SUMA            reduce using rule 94 (term -> numericos .)
    RESTA           reduce using rule 94 (term -> numericos .)
    PRODUCTO        reduce using rule 94 (term -> numericos .)
    DIVISION        reduce using rule 94 (term -> numericos .)
    MODULO          reduce using rule 94 (term -> numericos .)


state 115

    (60) sentenciaFor -> FOR inicio PUNTOCOMA . condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 54
    BOOL            shift and go to state 16
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    condiciones                    shift and go to state 139
    factor                         shift and go to state 19
    numericos                      shift and go to state 59

state 116

    (61) inicio -> VARIABLE DECLARADOR . ENTERO

    ENTERO          shift and go to state 140


state 117

    (77) print -> IMPRIMIR PARLEFT contPrint . PARRIGHT

    PARRIGHT        shift and go to state 141


state 118

    (78) contPrint -> contenido . masCont
    (79) contPrint -> contenido .
    (80) masCont -> . masCont COMA contenido
    (81) masCont -> . COMA contenido

    PARRIGHT        reduce using rule 79 (contPrint -> contenido .)
    COMA            shift and go to state 143

    masCont                        shift and go to state 142

state 119

    (82) contenido -> CADENA .

    COMA            reduce using rule 82 (contenido -> CADENA .)
    PARRIGHT        reduce using rule 82 (contenido -> CADENA .)


state 120

    (83) contenido -> VARIABLE .

    COMA            reduce using rule 83 (contenido -> VARIABLE .)
    PARRIGHT        reduce using rule 83 (contenido -> VARIABLE .)


state 121

    (99) numericos -> PARLEFT expresion PARRIGHT .

    SUMA            reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    RESTA           reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    PRODUCTO        reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    DIVISION        reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    MODULO          reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    $end            reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORQUE        reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORQUE        reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    DIFERENTE       reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    ESIGUAL         reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORIGUAL      reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORIGUAL      reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    PARRIGHT        reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    RETURN          reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVERIGHT      reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    BREAK           reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    CONTINUE        reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    DOSPUNTOS       reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    COMA            reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    AND             reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    OR              reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVELEFT       reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)
    PUNTOCOMA       reduce using rule 99 (numericos -> PARLEFT expresion PARRIGHT .)


state 122

    (46) mapa -> MAP CORCHLEFT typeData . CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT typeData . CORCHRIGHT typeData LLAVELEFT LLAVERIGHT

    CORCHRIGHT      shift and go to state 144


state 123

    (85) lectura -> SCAN PARLEFT contScan . PARRIGHT

    PARRIGHT        shift and go to state 145


state 124

    (86) contScan -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 146


state 125

    (117) switch -> SWITCH VARIABLE LLAVELEFT . bloque_switch LLAVERIGHT
    (118) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK
    (119) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones CONTINUE
    (120) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
    (121) bloque_switch -> . switch_default
    (125) switch_default -> . DEFAULT DOSPUNTOS instrucciones

    CASE            shift and go to state 148
    DEFAULT         shift and go to state 150

    bloque_switch                  shift and go to state 147
    switch_default                 shift and go to state 149

state 126

    (106) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT . parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT . PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (113) parametros -> . VARIABLE
    (114) parametros -> . VARIABLE COMA parametros
    (115) parametros -> . typeData VARIABLE
    (116) parametros -> . typeData VARIABLE COMA parametros
    (63) typeData -> . BOOL
    (64) typeData -> . INT
    (65) typeData -> . FLOAT
    (66) typeData -> . STRING

    PARRIGHT        shift and go to state 152
    VARIABLE        shift and go to state 151
    BOOL            shift and go to state 68
    INT             shift and go to state 69
    FLOAT           shift and go to state 70
    STRING          shift and go to state 71

    parametros                     shift and go to state 153
    typeData                       shift and go to state 154

state 127

    (13) asignacion -> VAR VARIABLE BOOL IGUAL . booleano
    (24) booleano -> . condicion
    (25) booleano -> . TRUE
    (26) booleano -> . FALSE
    (135) condicion -> . AND
    (136) condicion -> . OR

    TRUE            shift and go to state 91
    FALSE           shift and go to state 92
    AND             shift and go to state 94
    OR              shift and go to state 95

    booleano                       shift and go to state 155
    condicion                      shift and go to state 90

state 128

    (14) asignacion -> VAR VARIABLE INT IGUAL . expresion
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    expresion                      shift and go to state 156
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 129

    (15) asignacion -> VAR VARIABLE FLOAT IGUAL . expresion
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    expresion                      shift and go to state 157
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 130

    (16) asignacion -> VAR VARIABLE STRING IGUAL . CADENA

    CADENA          shift and go to state 158


state 131

    (17) asignacion -> VAR VARIABLE puntero IGUAL . refer
    (58) refer -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 93

    refer                          shift and go to state 159

state 132

    (67) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO . CORCHRIGHT contArray

    CORCHRIGHT      shift and go to state 160


state 133

    (58) refer -> AMPERSAND VARIABLE .

    $end            reduce using rule 58 (refer -> AMPERSAND VARIABLE .)
    RETURN          reduce using rule 58 (refer -> AMPERSAND VARIABLE .)
    LLAVERIGHT      reduce using rule 58 (refer -> AMPERSAND VARIABLE .)
    BREAK           reduce using rule 58 (refer -> AMPERSAND VARIABLE .)
    CONTINUE        reduce using rule 58 (refer -> AMPERSAND VARIABLE .)


state 134

    (36) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . LLAVERIGHT
    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones . LLAVERIGHT else

    RETURN          shift and go to state 161
    LLAVERIGHT      shift and go to state 162


state 135

    (40) sentenciaIf -> IF comparaciones LLAVELEFT RETURN . VARIABLE LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 163


state 136

    (133) comparaciones -> comparacion anado comparaciones .

    LLAVELEFT       reduce using rule 133 (comparaciones -> comparacion anado comparaciones .)


state 137

    (101) comparacion -> NEGACION PARLEFT condiciones . PARRIGHT

    PARRIGHT        shift and go to state 164


state 138

    (102) comparacion -> PARLEFT condiciones PARRIGHT .

    AND             reduce using rule 102 (comparacion -> PARLEFT condiciones PARRIGHT .)
    OR              reduce using rule 102 (comparacion -> PARLEFT condiciones PARRIGHT .)
    LLAVELEFT       reduce using rule 102 (comparacion -> PARLEFT condiciones PARRIGHT .)


state 139

    (60) sentenciaFor -> FOR inicio PUNTOCOMA condiciones . PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 165


state 140

    (61) inicio -> VARIABLE DECLARADOR ENTERO .

    PUNTOCOMA       reduce using rule 61 (inicio -> VARIABLE DECLARADOR ENTERO .)


state 141

    (77) print -> IMPRIMIR PARLEFT contPrint PARRIGHT .

    $end            reduce using rule 77 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    RETURN          reduce using rule 77 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    LLAVERIGHT      reduce using rule 77 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    BREAK           reduce using rule 77 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    CONTINUE        reduce using rule 77 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)


state 142

    (78) contPrint -> contenido masCont .
    (80) masCont -> masCont . COMA contenido

    PARRIGHT        reduce using rule 78 (contPrint -> contenido masCont .)
    COMA            shift and go to state 166


state 143

    (81) masCont -> COMA . contenido
    (82) contenido -> . CADENA
    (83) contenido -> . VARIABLE
    (84) contenido -> .

    CADENA          shift and go to state 119
    VARIABLE        shift and go to state 120
    COMA            reduce using rule 84 (contenido -> .)
    PARRIGHT        reduce using rule 84 (contenido -> .)

    contenido                      shift and go to state 167

state 144

    (46) mapa -> MAP CORCHLEFT typeData CORCHRIGHT . typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT typeData CORCHRIGHT . typeData LLAVELEFT LLAVERIGHT
    (63) typeData -> . BOOL
    (64) typeData -> . INT
    (65) typeData -> . FLOAT
    (66) typeData -> . STRING

    BOOL            shift and go to state 68
    INT             shift and go to state 69
    FLOAT           shift and go to state 70
    STRING          shift and go to state 71

    typeData                       shift and go to state 168

state 145

    (85) lectura -> SCAN PARLEFT contScan PARRIGHT .

    $end            reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    RETURN          reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    LLAVERIGHT      reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    BREAK           reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    CONTINUE        reduce using rule 85 (lectura -> SCAN PARLEFT contScan PARRIGHT .)


state 146

    (86) contScan -> AMPERSAND VARIABLE .

    PARRIGHT        reduce using rule 86 (contScan -> AMPERSAND VARIABLE .)


state 147

    (117) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch . LLAVERIGHT

    LLAVERIGHT      shift and go to state 169


state 148

    (118) bloque_switch -> CASE . caso_switch DOSPUNTOS instrucciones BREAK
    (119) bloque_switch -> CASE . caso_switch DOSPUNTOS instrucciones CONTINUE
    (120) bloque_switch -> CASE . caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
    (122) caso_switch -> . VARIABLE
    (123) caso_switch -> . CADENA
    (124) caso_switch -> . ENTERO

    VARIABLE        shift and go to state 171
    CADENA          shift and go to state 172
    ENTERO          shift and go to state 173

    caso_switch                    shift and go to state 170

state 149

    (121) bloque_switch -> switch_default .

    LLAVERIGHT      reduce using rule 121 (bloque_switch -> switch_default .)


state 150

    (125) switch_default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 174


state 151

    (113) parametros -> VARIABLE .
    (114) parametros -> VARIABLE . COMA parametros

    PARRIGHT        reduce using rule 113 (parametros -> VARIABLE .)
    COMA            shift and go to state 175


state 152

    (106) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT

    LLAVELEFT       shift and go to state 176


state 153

    (110) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros . PARRIGHT LLAVELEFT RETURN LLAVERIGHT

    PARRIGHT        shift and go to state 177


state 154

    (115) parametros -> typeData . VARIABLE
    (116) parametros -> typeData . VARIABLE COMA parametros

    VARIABLE        shift and go to state 178


state 155

    (13) asignacion -> VAR VARIABLE BOOL IGUAL booleano .

    $end            reduce using rule 13 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    RETURN          reduce using rule 13 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    LLAVERIGHT      reduce using rule 13 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    BREAK           reduce using rule 13 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    CONTINUE        reduce using rule 13 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)


state 156

    (14) asignacion -> VAR VARIABLE INT IGUAL expresion .
    (87) expresion -> expresion . operadorArit term
    (88) operadorArit -> . SUMA
    (89) operadorArit -> . RESTA
    (90) operadorArit -> . PRODUCTO
    (91) operadorArit -> . DIVISION
    (92) operadorArit -> . MODULO

    $end            reduce using rule 14 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    RETURN          reduce using rule 14 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 14 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    BREAK           reduce using rule 14 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    CONTINUE        reduce using rule 14 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

    operadorArit                   shift and go to state 35

state 157

    (15) asignacion -> VAR VARIABLE FLOAT IGUAL expresion .
    (87) expresion -> expresion . operadorArit term
    (88) operadorArit -> . SUMA
    (89) operadorArit -> . RESTA
    (90) operadorArit -> . PRODUCTO
    (91) operadorArit -> . DIVISION
    (92) operadorArit -> . MODULO

    $end            reduce using rule 15 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    RETURN          reduce using rule 15 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 15 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    BREAK           reduce using rule 15 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    CONTINUE        reduce using rule 15 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

    operadorArit                   shift and go to state 35

state 158

    (16) asignacion -> VAR VARIABLE STRING IGUAL CADENA .

    $end            reduce using rule 16 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    RETURN          reduce using rule 16 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    LLAVERIGHT      reduce using rule 16 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    BREAK           reduce using rule 16 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    CONTINUE        reduce using rule 16 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)


state 159

    (17) asignacion -> VAR VARIABLE puntero IGUAL refer .

    $end            reduce using rule 17 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    RETURN          reduce using rule 17 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    LLAVERIGHT      reduce using rule 17 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    BREAK           reduce using rule 17 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    CONTINUE        reduce using rule 17 (asignacion -> VAR VARIABLE puntero IGUAL refer .)


state 160

    (67) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT . contArray
    (68) contArray -> . INT LLAVELEFT contArrayEnteros LLAVERIGHT
    (69) contArray -> . STRING LLAVELEFT contArrayCadenas LLAVERIGHT
    (70) contArray -> . FLOAT LLAVELEFT contArrayFloat LLAVERIGHT

    INT             shift and go to state 180
    STRING          shift and go to state 181
    FLOAT           shift and go to state 182

    contArray                      shift and go to state 179

state 161

    (36) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT
    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 183


state 162

    (38) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .
    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT . else
    (42) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE sentenciaIf

    $end            reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 38 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT .)
    ELSE            shift and go to state 185

    else                           shift and go to state 184

state 163

    (40) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE . LLAVERIGHT
    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 186


state 164

    (101) comparacion -> NEGACION PARLEFT condiciones PARRIGHT .

    AND             reduce using rule 101 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)
    OR              reduce using rule 101 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)
    LLAVELEFT       reduce using rule 101 (comparacion -> NEGACION PARLEFT condiciones PARRIGHT .)


state 165

    (60) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA . incrementa LLAVELEFT instrucciones LLAVERIGHT
    (62) incrementa -> . VARIABLE INCREMENTO

    VARIABLE        shift and go to state 188

    incrementa                     shift and go to state 187

state 166

    (80) masCont -> masCont COMA . contenido
    (82) contenido -> . CADENA
    (83) contenido -> . VARIABLE
    (84) contenido -> .

    CADENA          shift and go to state 119
    VARIABLE        shift and go to state 120
    COMA            reduce using rule 84 (contenido -> .)
    PARRIGHT        reduce using rule 84 (contenido -> .)

    contenido                      shift and go to state 189

state 167

    (81) masCont -> COMA contenido .

    COMA            reduce using rule 81 (masCont -> COMA contenido .)
    PARRIGHT        reduce using rule 81 (masCont -> COMA contenido .)


state 168

    (46) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData . LLAVELEFT par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData . LLAVELEFT LLAVERIGHT

    LLAVELEFT       shift and go to state 190


state 169

    (117) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .

    $end            reduce using rule 117 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    RETURN          reduce using rule 117 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 117 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    BREAK           reduce using rule 117 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    CONTINUE        reduce using rule 117 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)


state 170

    (118) bloque_switch -> CASE caso_switch . DOSPUNTOS instrucciones BREAK
    (119) bloque_switch -> CASE caso_switch . DOSPUNTOS instrucciones CONTINUE
    (120) bloque_switch -> CASE caso_switch . DOSPUNTOS instrucciones BREAK bloque_switch

    DOSPUNTOS       shift and go to state 191


state 171

    (122) caso_switch -> VARIABLE .

    DOSPUNTOS       reduce using rule 122 (caso_switch -> VARIABLE .)


state 172

    (123) caso_switch -> CADENA .

    DOSPUNTOS       reduce using rule 123 (caso_switch -> CADENA .)


state 173

    (124) caso_switch -> ENTERO .

    DOSPUNTOS       reduce using rule 124 (caso_switch -> ENTERO .)


state 174

    (125) switch_default -> DEFAULT DOSPUNTOS . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . VARIABLE DECLARADOR valor
    (20) asignacion -> . VARIABLE IGUAL valor
    (21) asignacion -> . VARIABLE MASIGUAL acumular
    (22) asignacion -> . VARIABLE MENOSIGUAL expresion
    (23) asignacion -> . derefer IGUAL valor
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (60) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (77) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (57) puntero -> . PRODUCTO typeData
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (67) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (117) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (103) funcion -> . funcion_sin_parametro
    (104) funcion -> . funcion_parametro
    (105) funcion -> . funcion_sin_parametro_return
    (59) derefer -> . PRODUCTO VARIABLE
    (94) term -> . numericos
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (106) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 20
    FOR             shift and go to state 21
    IMPRIMIR        shift and go to state 22
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 25
    SCAN            shift and go to state 26
    SWITCH          shift and go to state 28
    BOOL            shift and go to state 16
    FUNC            shift and go to state 33
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    instrucciones                  shift and go to state 192
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    derefer                        shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19
    funcion_sin_parametro          shift and go to state 29
    funcion_parametro              shift and go to state 30
    funcion_sin_parametro_return   shift and go to state 31
    numericos                      shift and go to state 32

state 175

    (114) parametros -> VARIABLE COMA . parametros
    (113) parametros -> . VARIABLE
    (114) parametros -> . VARIABLE COMA parametros
    (115) parametros -> . typeData VARIABLE
    (116) parametros -> . typeData VARIABLE COMA parametros
    (63) typeData -> . BOOL
    (64) typeData -> . INT
    (65) typeData -> . FLOAT
    (66) typeData -> . STRING

    VARIABLE        shift and go to state 151
    BOOL            shift and go to state 68
    INT             shift and go to state 69
    FLOAT           shift and go to state 70
    STRING          shift and go to state 71

    parametros                     shift and go to state 193
    typeData                       shift and go to state 154

state 176

    (106) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . VARIABLE DECLARADOR valor
    (20) asignacion -> . VARIABLE IGUAL valor
    (21) asignacion -> . VARIABLE MASIGUAL acumular
    (22) asignacion -> . VARIABLE MENOSIGUAL expresion
    (23) asignacion -> . derefer IGUAL valor
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (60) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (77) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (57) puntero -> . PRODUCTO typeData
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (67) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (117) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (103) funcion -> . funcion_sin_parametro
    (104) funcion -> . funcion_parametro
    (105) funcion -> . funcion_sin_parametro_return
    (59) derefer -> . PRODUCTO VARIABLE
    (94) term -> . numericos
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (106) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 195
    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 20
    FOR             shift and go to state 21
    IMPRIMIR        shift and go to state 22
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 25
    SCAN            shift and go to state 26
    SWITCH          shift and go to state 28
    BOOL            shift and go to state 16
    FUNC            shift and go to state 33
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    instrucciones                  shift and go to state 194
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    derefer                        shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19
    funcion_sin_parametro          shift and go to state 29
    funcion_parametro              shift and go to state 30
    funcion_sin_parametro_return   shift and go to state 31
    numericos                      shift and go to state 32

state 177

    (110) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT . LLAVELEFT RETURN LLAVERIGHT

    LLAVELEFT       shift and go to state 196


state 178

    (115) parametros -> typeData VARIABLE .
    (116) parametros -> typeData VARIABLE . COMA parametros

    PARRIGHT        reduce using rule 115 (parametros -> typeData VARIABLE .)
    COMA            shift and go to state 197


state 179

    (67) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .

    $end            reduce using rule 67 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .)
    RETURN          reduce using rule 67 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .)
    LLAVERIGHT      reduce using rule 67 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .)
    BREAK           reduce using rule 67 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .)
    CONTINUE        reduce using rule 67 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray .)


state 180

    (68) contArray -> INT . LLAVELEFT contArrayEnteros LLAVERIGHT

    LLAVELEFT       shift and go to state 198


state 181

    (69) contArray -> STRING . LLAVELEFT contArrayCadenas LLAVERIGHT

    LLAVELEFT       shift and go to state 199


state 182

    (70) contArray -> FLOAT . LLAVELEFT contArrayFloat LLAVERIGHT

    LLAVELEFT       shift and go to state 200


state 183

    (36) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT
    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 201


state 184

    (39) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .

    $end            reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    RETURN          reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    BREAK           reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)
    CONTINUE        reduce using rule 39 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else .)


state 185

    (42) else -> ELSE . LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> ELSE . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> ELSE . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> ELSE . sentenciaIf
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 202
    IF              shift and go to state 20

    sentenciaIf                    shift and go to state 203

state 186

    (40) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .
    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT . else
    (42) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE sentenciaIf

    $end            reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 40 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 185

    else                           shift and go to state 204

state 187

    (60) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa . LLAVELEFT instrucciones LLAVERIGHT

    LLAVELEFT       shift and go to state 205


state 188

    (62) incrementa -> VARIABLE . INCREMENTO

    INCREMENTO      shift and go to state 206


state 189

    (80) masCont -> masCont COMA contenido .

    COMA            reduce using rule 80 (masCont -> masCont COMA contenido .)
    PARRIGHT        reduce using rule 80 (masCont -> masCont COMA contenido .)


state 190

    (46) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT . par LLAVERIGHT
    (47) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT . LLAVERIGHT
    (48) par -> . dato DOSPUNTOS dato mas
    (49) par -> . dato DOSPUNTOS dato
    (52) dato -> . VARIABLE
    (53) dato -> . expresion
    (54) dato -> . CADENA
    (55) dato -> . TRUE
    (56) dato -> . FALSE
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    LLAVERIGHT      shift and go to state 208
    VARIABLE        shift and go to state 210
    CADENA          shift and go to state 212
    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    par                            shift and go to state 207
    dato                           shift and go to state 209
    expresion                      shift and go to state 211
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 191

    (118) bloque_switch -> CASE caso_switch DOSPUNTOS . instrucciones BREAK
    (119) bloque_switch -> CASE caso_switch DOSPUNTOS . instrucciones CONTINUE
    (120) bloque_switch -> CASE caso_switch DOSPUNTOS . instrucciones BREAK bloque_switch
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . VARIABLE DECLARADOR valor
    (20) asignacion -> . VARIABLE IGUAL valor
    (21) asignacion -> . VARIABLE MASIGUAL acumular
    (22) asignacion -> . VARIABLE MENOSIGUAL expresion
    (23) asignacion -> . derefer IGUAL valor
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (60) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (77) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (57) puntero -> . PRODUCTO typeData
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (67) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (117) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (103) funcion -> . funcion_sin_parametro
    (104) funcion -> . funcion_parametro
    (105) funcion -> . funcion_sin_parametro_return
    (59) derefer -> . PRODUCTO VARIABLE
    (94) term -> . numericos
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (106) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 20
    FOR             shift and go to state 21
    IMPRIMIR        shift and go to state 22
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 25
    SCAN            shift and go to state 26
    SWITCH          shift and go to state 28
    BOOL            shift and go to state 16
    FUNC            shift and go to state 33
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    instrucciones                  shift and go to state 215
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    derefer                        shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19
    funcion_sin_parametro          shift and go to state 29
    funcion_parametro              shift and go to state 30
    funcion_sin_parametro_return   shift and go to state 31
    numericos                      shift and go to state 32

state 192

    (125) switch_default -> DEFAULT DOSPUNTOS instrucciones .

    LLAVERIGHT      reduce using rule 125 (switch_default -> DEFAULT DOSPUNTOS instrucciones .)


state 193

    (114) parametros -> VARIABLE COMA parametros .

    PARRIGHT        reduce using rule 114 (parametros -> VARIABLE COMA parametros .)


state 194

    (106) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . LLAVERIGHT
    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 216
    RETURN          shift and go to state 217


state 195

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 218


state 196

    (110) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . instrucciones LLAVERIGHT
    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT . RETURN LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . VARIABLE DECLARADOR valor
    (20) asignacion -> . VARIABLE IGUAL valor
    (21) asignacion -> . VARIABLE MASIGUAL acumular
    (22) asignacion -> . VARIABLE MENOSIGUAL expresion
    (23) asignacion -> . derefer IGUAL valor
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (60) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (77) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (57) puntero -> . PRODUCTO typeData
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (67) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (117) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (103) funcion -> . funcion_sin_parametro
    (104) funcion -> . funcion_parametro
    (105) funcion -> . funcion_sin_parametro_return
    (59) derefer -> . PRODUCTO VARIABLE
    (94) term -> . numericos
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (106) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 220
    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 20
    FOR             shift and go to state 21
    IMPRIMIR        shift and go to state 22
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 25
    SCAN            shift and go to state 26
    SWITCH          shift and go to state 28
    BOOL            shift and go to state 16
    FUNC            shift and go to state 33
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    instrucciones                  shift and go to state 219
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    derefer                        shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19
    funcion_sin_parametro          shift and go to state 29
    funcion_parametro              shift and go to state 30
    funcion_sin_parametro_return   shift and go to state 31
    numericos                      shift and go to state 32

state 197

    (116) parametros -> typeData VARIABLE COMA . parametros
    (113) parametros -> . VARIABLE
    (114) parametros -> . VARIABLE COMA parametros
    (115) parametros -> . typeData VARIABLE
    (116) parametros -> . typeData VARIABLE COMA parametros
    (63) typeData -> . BOOL
    (64) typeData -> . INT
    (65) typeData -> . FLOAT
    (66) typeData -> . STRING

    VARIABLE        shift and go to state 151
    BOOL            shift and go to state 68
    INT             shift and go to state 69
    FLOAT           shift and go to state 70
    STRING          shift and go to state 71

    typeData                       shift and go to state 154
    parametros                     shift and go to state 221

state 198

    (68) contArray -> INT LLAVELEFT . contArrayEnteros LLAVERIGHT
    (71) contArrayEnteros -> . ENTERO COMA ENTERO
    (72) contArrayEnteros -> . contArrayEnteros COMA ENTERO

    ENTERO          shift and go to state 223

    contArrayEnteros               shift and go to state 222

state 199

    (69) contArray -> STRING LLAVELEFT . contArrayCadenas LLAVERIGHT
    (73) contArrayCadenas -> . CADENA COMA CADENA
    (74) contArrayCadenas -> . contArrayCadenas COMA CADENA

    CADENA          shift and go to state 225

    contArrayCadenas               shift and go to state 224

state 200

    (70) contArray -> FLOAT LLAVELEFT . contArrayFloat LLAVERIGHT
    (75) contArrayFloat -> . FLOTANTE COMA FLOTANTE
    (76) contArrayFloat -> . contArrayFloat COMA FLOTANTE

    FLOTANTE        shift and go to state 227

    contArrayFloat                 shift and go to state 226

state 201

    (36) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .
    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT . else
    (42) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (43) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (45) else -> . ELSE sentenciaIf

    $end            reduce using rule 36 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 36 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 36 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 36 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 36 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 185

    else                           shift and go to state 228

state 202

    (42) else -> ELSE LLAVELEFT . instrucciones LLAVERIGHT
    (43) else -> ELSE LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (44) else -> ELSE LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . VARIABLE DECLARADOR valor
    (20) asignacion -> . VARIABLE IGUAL valor
    (21) asignacion -> . VARIABLE MASIGUAL acumular
    (22) asignacion -> . VARIABLE MENOSIGUAL expresion
    (23) asignacion -> . derefer IGUAL valor
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (60) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (77) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (57) puntero -> . PRODUCTO typeData
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (67) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (117) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (103) funcion -> . funcion_sin_parametro
    (104) funcion -> . funcion_parametro
    (105) funcion -> . funcion_sin_parametro_return
    (59) derefer -> . PRODUCTO VARIABLE
    (94) term -> . numericos
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (106) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 230
    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 20
    FOR             shift and go to state 21
    IMPRIMIR        shift and go to state 22
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 25
    SCAN            shift and go to state 26
    SWITCH          shift and go to state 28
    BOOL            shift and go to state 16
    FUNC            shift and go to state 33
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    instrucciones                  shift and go to state 229
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    condiciones                    shift and go to state 4
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    derefer                        shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19
    funcion_sin_parametro          shift and go to state 29
    funcion_parametro              shift and go to state 30
    funcion_sin_parametro_return   shift and go to state 31
    numericos                      shift and go to state 32

state 203

    (45) else -> ELSE sentenciaIf .

    $end            reduce using rule 45 (else -> ELSE sentenciaIf .)
    RETURN          reduce using rule 45 (else -> ELSE sentenciaIf .)
    LLAVERIGHT      reduce using rule 45 (else -> ELSE sentenciaIf .)
    BREAK           reduce using rule 45 (else -> ELSE sentenciaIf .)
    CONTINUE        reduce using rule 45 (else -> ELSE sentenciaIf .)


state 204

    (41) sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    BREAK           reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    CONTINUE        reduce using rule 41 (sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)


state 205

    (60) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT . instrucciones LLAVERIGHT
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expresion
    (3) instrucciones -> . condiciones
    (4) instrucciones -> . sentenciaIf
    (5) instrucciones -> . sentenciaFor
    (6) instrucciones -> . print
    (7) instrucciones -> . mapa
    (8) instrucciones -> . puntero
    (9) instrucciones -> . lectura
    (10) instrucciones -> . array
    (11) instrucciones -> . switch
    (12) instrucciones -> . funcion
    (13) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (14) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (15) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (16) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (17) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (18) asignacion -> . VAR VARIABLE puntero
    (19) asignacion -> . VARIABLE DECLARADOR valor
    (20) asignacion -> . VARIABLE IGUAL valor
    (21) asignacion -> . VARIABLE MASIGUAL acumular
    (22) asignacion -> . VARIABLE MENOSIGUAL expresion
    (23) asignacion -> . derefer IGUAL valor
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (126) condiciones -> . factor MAYORQUE factor
    (127) condiciones -> . factor MENORQUE factor
    (128) condiciones -> . factor DIFERENTE factor
    (129) condiciones -> . factor ESIGUAL factor
    (130) condiciones -> . factor MENORIGUAL factor
    (131) condiciones -> . factor MAYORIGUAL factor
    (36) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (37) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (38) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT
    (39) sentenciaIf -> . IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else
    (40) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (41) sentenciaIf -> . IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (60) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (77) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (46) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT
    (47) mapa -> . MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT
    (57) puntero -> . PRODUCTO typeData
    (85) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (67) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray
    (117) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (103) funcion -> . funcion_sin_parametro
    (104) funcion -> . funcion_parametro
    (105) funcion -> . funcion_sin_parametro_return
    (59) derefer -> . PRODUCTO VARIABLE
    (94) term -> . numericos
    (95) factor -> . numericos
    (96) factor -> . VARIABLE
    (137) factor -> . BOOL
    (106) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (107) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (108) funcion_sin_parametro -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (110) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT
    (111) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT
    (112) funcion_parametro -> . FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT
    (109) funcion_sin_parametro_return -> . FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 14
    VARIABLE        shift and go to state 15
    IF              shift and go to state 20
    FOR             shift and go to state 21
    IMPRIMIR        shift and go to state 22
    MAP             shift and go to state 24
    PRODUCTO        shift and go to state 25
    SCAN            shift and go to state 26
    SWITCH          shift and go to state 28
    BOOL            shift and go to state 16
    FUNC            shift and go to state 33
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    condiciones                    shift and go to state 4
    instrucciones                  shift and go to state 231
    asignacion                     shift and go to state 2
    expresion                      shift and go to state 3
    sentenciaIf                    shift and go to state 5
    sentenciaFor                   shift and go to state 6
    print                          shift and go to state 7
    mapa                           shift and go to state 8
    puntero                        shift and go to state 9
    lectura                        shift and go to state 10
    array                          shift and go to state 11
    switch                         shift and go to state 12
    funcion                        shift and go to state 13
    derefer                        shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19
    funcion_sin_parametro          shift and go to state 29
    funcion_parametro              shift and go to state 30
    funcion_sin_parametro_return   shift and go to state 31
    numericos                      shift and go to state 32

state 206

    (62) incrementa -> VARIABLE INCREMENTO .

    LLAVELEFT       reduce using rule 62 (incrementa -> VARIABLE INCREMENTO .)


state 207

    (46) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par . LLAVERIGHT

    LLAVERIGHT      shift and go to state 232


state 208

    (47) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .

    $end            reduce using rule 47 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    RETURN          reduce using rule 47 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 47 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    BREAK           reduce using rule 47 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)
    CONTINUE        reduce using rule 47 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT .)


state 209

    (48) par -> dato . DOSPUNTOS dato mas
    (49) par -> dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 233


state 210

    (52) dato -> VARIABLE .

    DOSPUNTOS       reduce using rule 52 (dato -> VARIABLE .)
    COMA            reduce using rule 52 (dato -> VARIABLE .)
    LLAVERIGHT      reduce using rule 52 (dato -> VARIABLE .)


state 211

    (53) dato -> expresion .
    (87) expresion -> expresion . operadorArit term
    (88) operadorArit -> . SUMA
    (89) operadorArit -> . RESTA
    (90) operadorArit -> . PRODUCTO
    (91) operadorArit -> . DIVISION
    (92) operadorArit -> . MODULO

    DOSPUNTOS       reduce using rule 53 (dato -> expresion .)
    COMA            reduce using rule 53 (dato -> expresion .)
    LLAVERIGHT      reduce using rule 53 (dato -> expresion .)
    SUMA            shift and go to state 36
    RESTA           shift and go to state 37
    PRODUCTO        shift and go to state 38
    DIVISION        shift and go to state 39
    MODULO          shift and go to state 40

    operadorArit                   shift and go to state 35

state 212

    (54) dato -> CADENA .

    DOSPUNTOS       reduce using rule 54 (dato -> CADENA .)
    COMA            reduce using rule 54 (dato -> CADENA .)
    LLAVERIGHT      reduce using rule 54 (dato -> CADENA .)


state 213

    (55) dato -> TRUE .

    DOSPUNTOS       reduce using rule 55 (dato -> TRUE .)
    COMA            reduce using rule 55 (dato -> TRUE .)
    LLAVERIGHT      reduce using rule 55 (dato -> TRUE .)


state 214

    (56) dato -> FALSE .

    DOSPUNTOS       reduce using rule 56 (dato -> FALSE .)
    COMA            reduce using rule 56 (dato -> FALSE .)
    LLAVERIGHT      reduce using rule 56 (dato -> FALSE .)


state 215

    (118) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones . BREAK
    (119) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones . CONTINUE
    (120) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones . BREAK bloque_switch

    BREAK           shift and go to state 234
    CONTINUE        shift and go to state 235


state 216

    (106) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 106 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 106 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 106 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 106 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 106 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)


state 217

    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN . LLAVERIGHT
    (109) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 237
    VARIABLE        shift and go to state 236


state 218

    (107) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .

    $end            reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    RETURN          reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    BREAK           reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 107 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)


state 219

    (110) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones . LLAVERIGHT
    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones . RETURN LLAVERIGHT

    LLAVERIGHT      shift and go to state 238
    RETURN          shift and go to state 239


state 220

    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 240


state 221

    (116) parametros -> typeData VARIABLE COMA parametros .

    PARRIGHT        reduce using rule 116 (parametros -> typeData VARIABLE COMA parametros .)


state 222

    (68) contArray -> INT LLAVELEFT contArrayEnteros . LLAVERIGHT
    (72) contArrayEnteros -> contArrayEnteros . COMA ENTERO

    LLAVERIGHT      shift and go to state 241
    COMA            shift and go to state 242


state 223

    (71) contArrayEnteros -> ENTERO . COMA ENTERO

    COMA            shift and go to state 243


state 224

    (69) contArray -> STRING LLAVELEFT contArrayCadenas . LLAVERIGHT
    (74) contArrayCadenas -> contArrayCadenas . COMA CADENA

    LLAVERIGHT      shift and go to state 244
    COMA            shift and go to state 245


state 225

    (73) contArrayCadenas -> CADENA . COMA CADENA

    COMA            shift and go to state 246


state 226

    (70) contArray -> FLOAT LLAVELEFT contArrayFloat . LLAVERIGHT
    (76) contArrayFloat -> contArrayFloat . COMA FLOTANTE

    LLAVERIGHT      shift and go to state 247
    COMA            shift and go to state 248


state 227

    (75) contArrayFloat -> FLOTANTE . COMA FLOTANTE

    COMA            shift and go to state 249


state 228

    (37) sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    BREAK           reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    CONTINUE        reduce using rule 37 (sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)


state 229

    (42) else -> ELSE LLAVELEFT instrucciones . LLAVERIGHT
    (43) else -> ELSE LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 250
    RETURN          shift and go to state 251


state 230

    (44) else -> ELSE LLAVELEFT RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 252


state 231

    (60) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones . LLAVERIGHT

    LLAVERIGHT      shift and go to state 253


state 232

    (46) mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .

    $end            reduce using rule 46 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    RETURN          reduce using rule 46 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 46 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    BREAK           reduce using rule 46 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)
    CONTINUE        reduce using rule 46 (mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT .)


state 233

    (48) par -> dato DOSPUNTOS . dato mas
    (49) par -> dato DOSPUNTOS . dato
    (52) dato -> . VARIABLE
    (53) dato -> . expresion
    (54) dato -> . CADENA
    (55) dato -> . TRUE
    (56) dato -> . FALSE
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 210
    CADENA          shift and go to state 212
    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    dato                           shift and go to state 254
    expresion                      shift and go to state 211
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 234

    (118) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK .
    (120) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK . bloque_switch
    (118) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK
    (119) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones CONTINUE
    (120) bloque_switch -> . CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch
    (121) bloque_switch -> . switch_default
    (125) switch_default -> . DEFAULT DOSPUNTOS instrucciones

    LLAVERIGHT      reduce using rule 118 (bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK .)
    CASE            shift and go to state 148
    DEFAULT         shift and go to state 150

    bloque_switch                  shift and go to state 255
    switch_default                 shift and go to state 149

state 235

    (119) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones CONTINUE .

    LLAVERIGHT      reduce using rule 119 (bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones CONTINUE .)


state 236

    (109) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 256


state 237

    (108) funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .

    $end            reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    RETURN          reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    BREAK           reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 108 (funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)


state 238

    (110) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 110 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 110 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 110 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 110 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 110 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT .)


state 239

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN . LLAVERIGHT

    LLAVERIGHT      shift and go to state 257


state 240

    (112) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .

    $end            reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    RETURN          reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    BREAK           reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 112 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT .)


state 241

    (68) contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .

    $end            reduce using rule 68 (contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .)
    RETURN          reduce using rule 68 (contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 68 (contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .)
    BREAK           reduce using rule 68 (contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .)
    CONTINUE        reduce using rule 68 (contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT .)


state 242

    (72) contArrayEnteros -> contArrayEnteros COMA . ENTERO

    ENTERO          shift and go to state 258


state 243

    (71) contArrayEnteros -> ENTERO COMA . ENTERO

    ENTERO          shift and go to state 259


state 244

    (69) contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .

    $end            reduce using rule 69 (contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .)
    RETURN          reduce using rule 69 (contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 69 (contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .)
    BREAK           reduce using rule 69 (contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .)
    CONTINUE        reduce using rule 69 (contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT .)


state 245

    (74) contArrayCadenas -> contArrayCadenas COMA . CADENA

    CADENA          shift and go to state 260


state 246

    (73) contArrayCadenas -> CADENA COMA . CADENA

    CADENA          shift and go to state 261


state 247

    (70) contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .

    $end            reduce using rule 70 (contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .)
    RETURN          reduce using rule 70 (contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 70 (contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .)
    BREAK           reduce using rule 70 (contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .)
    CONTINUE        reduce using rule 70 (contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT .)


state 248

    (76) contArrayFloat -> contArrayFloat COMA . FLOTANTE

    FLOTANTE        shift and go to state 262


state 249

    (75) contArrayFloat -> FLOTANTE COMA . FLOTANTE

    FLOTANTE        shift and go to state 263


state 250

    (42) else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 42 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)


state 251

    (43) else -> ELSE LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 264


state 252

    (44) else -> ELSE LLAVELEFT RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 265


state 253

    (60) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 60 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 60 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 60 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    BREAK           reduce using rule 60 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    CONTINUE        reduce using rule 60 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)


state 254

    (48) par -> dato DOSPUNTOS dato . mas
    (49) par -> dato DOSPUNTOS dato .
    (50) mas -> . mas COMA dato DOSPUNTOS dato
    (51) mas -> . COMA dato DOSPUNTOS dato

    LLAVERIGHT      reduce using rule 49 (par -> dato DOSPUNTOS dato .)
    COMA            shift and go to state 267

    mas                            shift and go to state 266

state 255

    (120) bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch .

    LLAVERIGHT      reduce using rule 120 (bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch .)


state 256

    (109) funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 109 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 109 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 109 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 109 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 109 (funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 257

    (111) funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .

    $end            reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    RETURN          reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    BREAK           reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)
    CONTINUE        reduce using rule 111 (funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT .)


state 258

    (72) contArrayEnteros -> contArrayEnteros COMA ENTERO .

    LLAVERIGHT      reduce using rule 72 (contArrayEnteros -> contArrayEnteros COMA ENTERO .)
    COMA            reduce using rule 72 (contArrayEnteros -> contArrayEnteros COMA ENTERO .)


state 259

    (71) contArrayEnteros -> ENTERO COMA ENTERO .

    LLAVERIGHT      reduce using rule 71 (contArrayEnteros -> ENTERO COMA ENTERO .)
    COMA            reduce using rule 71 (contArrayEnteros -> ENTERO COMA ENTERO .)


state 260

    (74) contArrayCadenas -> contArrayCadenas COMA CADENA .

    LLAVERIGHT      reduce using rule 74 (contArrayCadenas -> contArrayCadenas COMA CADENA .)
    COMA            reduce using rule 74 (contArrayCadenas -> contArrayCadenas COMA CADENA .)


state 261

    (73) contArrayCadenas -> CADENA COMA CADENA .

    LLAVERIGHT      reduce using rule 73 (contArrayCadenas -> CADENA COMA CADENA .)
    COMA            reduce using rule 73 (contArrayCadenas -> CADENA COMA CADENA .)


state 262

    (76) contArrayFloat -> contArrayFloat COMA FLOTANTE .

    LLAVERIGHT      reduce using rule 76 (contArrayFloat -> contArrayFloat COMA FLOTANTE .)
    COMA            reduce using rule 76 (contArrayFloat -> contArrayFloat COMA FLOTANTE .)


state 263

    (75) contArrayFloat -> FLOTANTE COMA FLOTANTE .

    LLAVERIGHT      reduce using rule 75 (contArrayFloat -> FLOTANTE COMA FLOTANTE .)
    COMA            reduce using rule 75 (contArrayFloat -> FLOTANTE COMA FLOTANTE .)


state 264

    (43) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 268


state 265

    (44) else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 44 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)


state 266

    (48) par -> dato DOSPUNTOS dato mas .
    (50) mas -> mas . COMA dato DOSPUNTOS dato

    LLAVERIGHT      reduce using rule 48 (par -> dato DOSPUNTOS dato mas .)
    COMA            shift and go to state 269


state 267

    (51) mas -> COMA . dato DOSPUNTOS dato
    (52) dato -> . VARIABLE
    (53) dato -> . expresion
    (54) dato -> . CADENA
    (55) dato -> . TRUE
    (56) dato -> . FALSE
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 210
    CADENA          shift and go to state 212
    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    dato                           shift and go to state 270
    expresion                      shift and go to state 211
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 268

    (43) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    BREAK           reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CONTINUE        reduce using rule 43 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 269

    (50) mas -> mas COMA . dato DOSPUNTOS dato
    (52) dato -> . VARIABLE
    (53) dato -> . expresion
    (54) dato -> . CADENA
    (55) dato -> . TRUE
    (56) dato -> . FALSE
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 210
    CADENA          shift and go to state 212
    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    dato                           shift and go to state 271
    expresion                      shift and go to state 211
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 270

    (51) mas -> COMA dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 272


state 271

    (50) mas -> mas COMA dato . DOSPUNTOS dato

    DOSPUNTOS       shift and go to state 273


state 272

    (51) mas -> COMA dato DOSPUNTOS . dato
    (52) dato -> . VARIABLE
    (53) dato -> . expresion
    (54) dato -> . CADENA
    (55) dato -> . TRUE
    (56) dato -> . FALSE
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 210
    CADENA          shift and go to state 212
    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    dato                           shift and go to state 274
    expresion                      shift and go to state 211
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 273

    (50) mas -> mas COMA dato DOSPUNTOS . dato
    (52) dato -> . VARIABLE
    (53) dato -> . expresion
    (54) dato -> . CADENA
    (55) dato -> . TRUE
    (56) dato -> . FALSE
    (87) expresion -> . expresion operadorArit term
    (93) expresion -> . term
    (94) term -> . numericos
    (97) numericos -> . ENTERO
    (98) numericos -> . FLOTANTE
    (99) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 210
    CADENA          shift and go to state 212
    TRUE            shift and go to state 213
    FALSE           shift and go to state 214
    ENTERO          shift and go to state 27
    FLOTANTE        shift and go to state 34
    PARLEFT         shift and go to state 23

    dato                           shift and go to state 275
    expresion                      shift and go to state 211
    term                           shift and go to state 18
    numericos                      shift and go to state 64

state 274

    (51) mas -> COMA dato DOSPUNTOS dato .

    COMA            reduce using rule 51 (mas -> COMA dato DOSPUNTOS dato .)
    LLAVERIGHT      reduce using rule 51 (mas -> COMA dato DOSPUNTOS dato .)


state 275

    (50) mas -> mas COMA dato DOSPUNTOS dato .

    COMA            reduce using rule 50 (mas -> mas COMA dato DOSPUNTOS dato .)
    LLAVERIGHT      reduce using rule 50 (mas -> mas COMA dato DOSPUNTOS dato .)

