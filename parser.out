Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BARRAINVERSA
    BREAK
    CHAN
    COMENTARIO
    COMILLA
    CONST
    CONTINUE
    DEFER
    ESPACIO
    FALLTHROUGH
    FUNC
    GO
    GOTO
    IMPORT
    INTERFACE
    MASIGUAL
    MENOSIGUAL
    PACKAGE
    RANGE
    SELECT
    STRUCT
    TYPE

Grammar

Rule 0     S' -> golang
Rule 1     golang -> instrucciones
Rule 2     golang -> switch
Rule 3     instrucciones -> asignacion
Rule 4     instrucciones -> expresion
Rule 5     instrucciones -> condiciones
Rule 6     instrucciones -> sentenciaIf
Rule 7     instrucciones -> sentenciaFor
Rule 8     instrucciones -> print
Rule 9     instrucciones -> mapa
Rule 10    instrucciones -> puntero
Rule 11    instrucciones -> lectura
Rule 12    instrucciones -> array
Rule 13    instrucciones -> switch
Rule 14    instrucciones -> arrayAsig
Rule 15    asignacion -> VAR VARIABLE BOOL IGUAL booleano
Rule 16    asignacion -> VAR VARIABLE INT IGUAL expresion
Rule 17    asignacion -> VAR VARIABLE FLOAT IGUAL expresion
Rule 18    asignacion -> VAR VARIABLE STRING IGUAL CADENA
Rule 19    asignacion -> VAR VARIABLE puntero IGUAL refer
Rule 20    asignacion -> VAR VARIABLE puntero
Rule 21    asignacion -> VARIABLE DECLARADOR valor
Rule 22    asignacion -> VARIABLE IGUAL valor
Rule 23    asignacion -> derefer IGUAL valor
Rule 24    booleano -> condicion
Rule 25    booleano -> TRUE
Rule 26    booleano -> FALSE
Rule 27    valor -> booleano
Rule 28    valor -> expresion
Rule 29    valor -> CADENA
Rule 30    valor -> VARIABLE
Rule 31    valor -> mapa
Rule 32    valor -> refer
Rule 33    sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 34    sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
Rule 35    sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT
Rule 36    sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else
Rule 37    sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 38    sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
Rule 39    else -> ELSE LLAVELEFT instrucciones LLAVERIGHT
Rule 40    else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
Rule 41    else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
Rule 42    else -> ELSE sentenciaIf
Rule 43    mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
Rule 44    mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
Rule 45    par -> dato DOSPUNTOS dato
Rule 46    par -> dato DOSPUNTOS dato mas
Rule 47    mas -> COMA par
Rule 48    mas -> COMA par mas
Rule 49    tipo -> BOOL
Rule 50    tipo -> INT
Rule 51    tipo -> FLOAT
Rule 52    tipo -> STRING
Rule 53    dato -> VARIABLE
Rule 54    dato -> expresion
Rule 55    dato -> CADENA
Rule 56    dato -> TRUE
Rule 57    dato -> FALSE
Rule 58    puntero -> PRODUCTO BOOL
Rule 59    puntero -> PRODUCTO INT
Rule 60    puntero -> PRODUCTO FLOAT
Rule 61    puntero -> PRODUCTO STRING
Rule 62    refer -> AMPERSAND VARIABLE
Rule 63    derefer -> PRODUCTO VARIABLE
Rule 64    sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
Rule 65    inicio -> VARIABLE DECLARADOR ENTERO
Rule 66    incrementa -> VARIABLE INCREMENTO
Rule 67    typeData -> BOOL
Rule 68    typeData -> INT
Rule 69    typeData -> FLOAT
Rule 70    typeData -> STRING
Rule 71    array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
Rule 72    arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
Rule 73    print -> IMPRIMIR PARLEFT contPrint PARRIGHT
Rule 74    contPrint -> CADENA
Rule 75    contPrint -> VARIABLE
Rule 76    contPrint -> factor
Rule 77    contPrint -> contPrint COMA contPrint
Rule 78    lectura -> SCAN PARLEFT contScan PARRIGHT
Rule 79    contScan -> AMPERSAND VARIABLE
Rule 80    contArray -> contArray COMA numericos
Rule 81    expresion -> expresion SUMA term
Rule 82    expresion -> expresion RESTA term
Rule 83    expresion -> expresion PRODUCTO term
Rule 84    expresion -> expresion DIVISION term
Rule 85    expresion -> expresion MODULO term
Rule 86    expresion -> term
Rule 87    contArray -> term
Rule 88    term -> numericos
Rule 89    factor -> numericos
Rule 90    factor -> VARIABLE
Rule 91    numericos -> ENTERO
Rule 92    numericos -> FLOTANTE
Rule 93    numericos -> PARLEFT expresion PARRIGHT
Rule 94    comparacion -> condiciones
Rule 95    comparacion -> NEGACION PARLEFT condiciones PARRIGHT
Rule 96    comparacion -> PARLEFT condiciones PARRIGHT
Rule 97    switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
Rule 98    bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones
Rule 99    bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones bloque_switch
Rule 100   bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones switch_default
Rule 101   bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones bloque_switch switch_default
Rule 102   bloque_switch -> switch_default
Rule 103   switch_default -> DEFAULT DOSPUNTOS instrucciones
Rule 104   condiciones -> factor MAYORQUE factor
Rule 105   condiciones -> factor MENORQUE factor
Rule 106   condiciones -> factor DIFERENTE factor
Rule 107   condiciones -> factor ESIGUAL factor
Rule 108   condiciones -> factor MENORIGUAL factor
Rule 109   condiciones -> factor MAYORIGUAL factor
Rule 110   comparaciones -> comparacion
Rule 111   comparaciones -> comparacion anado comparaciones
Rule 112   anado -> condicion
Rule 113   condicion -> AND
Rule 114   condicion -> OR
Rule 115   factor -> BOOL

Terminals, with rules where they appear

AMPERSAND            : 62 79
AND                  : 113
BARRAINVERSA         : 
BOOL                 : 15 49 58 67 115
BREAK                : 
CADENA               : 18 29 55 74
CASE                 : 98 99 100 101
CHAN                 : 
COMA                 : 47 48 77 80
COMENTARIO           : 
COMILLA              : 
CONST                : 
CONTINUE             : 
CORCHLEFT            : 43 44 71 72
CORCHRIGHT           : 43 44 71 72
DECLARADOR           : 21 65 71
DEFAULT              : 103
DEFER                : 
DIFERENTE            : 106
DIVISION             : 84
DOSPUNTOS            : 45 46 98 99 100 101 103
ELSE                 : 39 40 41 42
ENTERO               : 65 71 72 91
ESIGUAL              : 107
ESPACIO              : 
FALLTHROUGH          : 
FALSE                : 26 57
FLOAT                : 17 51 60 69
FLOTANTE             : 92
FOR                  : 64
FUNC                 : 
GO                   : 
GOTO                 : 
IF                   : 33 34 35 36 37 38
IGUAL                : 15 16 17 18 19 22 23
IMPORT               : 
IMPRIMIR             : 73
INCREMENTO           : 66
INT                  : 16 50 59 68
INTERFACE            : 
LLAVELEFT            : 33 34 35 36 37 38 39 40 41 43 44 64 71 97
LLAVERIGHT           : 33 34 35 36 37 38 39 40 41 43 44 64 71 97
MAP                  : 43 44
MASIGUAL             : 
MAYORIGUAL           : 109
MAYORQUE             : 104
MENORIGUAL           : 108
MENORQUE             : 105
MENOSIGUAL           : 
MODULO               : 85
NEGACION             : 95
OR                   : 114
PACKAGE              : 
PARLEFT              : 73 78 93 95 96
PARRIGHT             : 73 78 93 95 96
PRODUCTO             : 58 59 60 61 63 83
PUNTOCOMA            : 64 64
RANGE                : 
RESTA                : 82
RETURN               : 33 34 37 38 40 41
SCAN                 : 78
SELECT               : 
STRING               : 18 52 61 70
STRUCT               : 
SUMA                 : 81
SWITCH               : 97
TRUE                 : 25 56
TYPE                 : 
VAR                  : 15 16 17 18 19 20 72
VARIABLE             : 15 16 17 18 19 20 21 22 30 33 34 37 38 40 41 53 62 63 65 66 71 72 75 79 90 97 98 99 100 101
error                : 

Nonterminals, with rules where they appear

anado                : 111
array                : 12
arrayAsig            : 14
asignacion           : 3
bloque_switch        : 97 99 101
booleano             : 15 27
comparacion          : 110 111
comparaciones        : 111
condicion            : 24 33 34 35 36 37 38 112
condiciones          : 5 64 94 95 96
contArray            : 71 80
contPrint            : 73 77 77
contScan             : 78
dato                 : 45 45 46 46
derefer              : 23
else                 : 34 36 38
expresion            : 4 16 17 28 54 81 82 83 84 85 93
factor               : 76 104 104 105 105 106 106 107 107 108 108 109 109
golang               : 0
incrementa           : 64
inicio               : 64
instrucciones        : 1 33 34 35 36 39 40 64 98 99 100 101 103
lectura              : 11
mapa                 : 9 31
mas                  : 46 48
numericos            : 80 88 89
par                  : 43 47 48
print                : 8
puntero              : 10 19 20
refer                : 19 32
sentenciaFor         : 7
sentenciaIf          : 6 42
switch               : 2 13
switch_default       : 100 101 102
term                 : 81 82 83 84 85 86 87
tipo                 : 43 43 44 44
typeData             : 71 72
valor                : 21 22 23

Parsing method: LALR

state 0

    (0) S' -> . golang
    (1) golang -> . instrucciones
    (2) golang -> . switch
    (3) instrucciones -> . asignacion
    (4) instrucciones -> . expresion
    (5) instrucciones -> . condiciones
    (6) instrucciones -> . sentenciaIf
    (7) instrucciones -> . sentenciaFor
    (8) instrucciones -> . print
    (9) instrucciones -> . mapa
    (10) instrucciones -> . puntero
    (11) instrucciones -> . lectura
    (12) instrucciones -> . array
    (13) instrucciones -> . switch
    (14) instrucciones -> . arrayAsig
    (97) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (15) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (16) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (18) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (19) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (20) asignacion -> . VAR VARIABLE puntero
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . derefer IGUAL valor
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (104) condiciones -> . factor MAYORQUE factor
    (105) condiciones -> . factor MENORQUE factor
    (106) condiciones -> . factor DIFERENTE factor
    (107) condiciones -> . factor ESIGUAL factor
    (108) condiciones -> . factor MENORIGUAL factor
    (109) condiciones -> . factor MAYORIGUAL factor
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (36) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (37) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (64) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (73) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (43) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO BOOL
    (59) puntero -> . PRODUCTO INT
    (60) puntero -> . PRODUCTO FLOAT
    (61) puntero -> . PRODUCTO STRING
    (78) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (71) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (72) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (63) derefer -> . PRODUCTO VARIABLE
    (88) term -> . numericos
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    SWITCH          shift and go to state 15
    VAR             shift and go to state 17
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    golang                         shift and go to state 1
    instrucciones                  shift and go to state 2
    switch                         shift and go to state 3
    asignacion                     shift and go to state 4
    expresion                      shift and go to state 5
    condiciones                    shift and go to state 6
    sentenciaIf                    shift and go to state 7
    sentenciaFor                   shift and go to state 8
    print                          shift and go to state 9
    mapa                           shift and go to state 10
    puntero                        shift and go to state 11
    lectura                        shift and go to state 12
    array                          shift and go to state 13
    arrayAsig                      shift and go to state 14
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    numericos                      shift and go to state 30

state 1

    (0) S' -> golang .



state 2

    (1) golang -> instrucciones .

    $end            reduce using rule 1 (golang -> instrucciones .)


state 3

    (2) golang -> switch .
    (13) instrucciones -> switch .

  ! reduce/reduce conflict for $end resolved using rule 2 (golang -> switch .)
    $end            reduce using rule 2 (golang -> switch .)

  ! $end            [ reduce using rule 13 (instrucciones -> switch .) ]


state 4

    (3) instrucciones -> asignacion .

    $end            reduce using rule 3 (instrucciones -> asignacion .)
    RETURN          reduce using rule 3 (instrucciones -> asignacion .)
    LLAVERIGHT      reduce using rule 3 (instrucciones -> asignacion .)
    DEFAULT         reduce using rule 3 (instrucciones -> asignacion .)
    CASE            reduce using rule 3 (instrucciones -> asignacion .)


state 5

    (4) instrucciones -> expresion .
    (81) expresion -> expresion . SUMA term
    (82) expresion -> expresion . RESTA term
    (83) expresion -> expresion . PRODUCTO term
    (84) expresion -> expresion . DIVISION term
    (85) expresion -> expresion . MODULO term

    $end            reduce using rule 4 (instrucciones -> expresion .)
    RETURN          reduce using rule 4 (instrucciones -> expresion .)
    LLAVERIGHT      reduce using rule 4 (instrucciones -> expresion .)
    DEFAULT         reduce using rule 4 (instrucciones -> expresion .)
    CASE            reduce using rule 4 (instrucciones -> expresion .)
    SUMA            shift and go to state 32
    RESTA           shift and go to state 33
    PRODUCTO        shift and go to state 34
    DIVISION        shift and go to state 35
    MODULO          shift and go to state 36


state 6

    (5) instrucciones -> condiciones .

    $end            reduce using rule 5 (instrucciones -> condiciones .)
    RETURN          reduce using rule 5 (instrucciones -> condiciones .)
    LLAVERIGHT      reduce using rule 5 (instrucciones -> condiciones .)
    DEFAULT         reduce using rule 5 (instrucciones -> condiciones .)
    CASE            reduce using rule 5 (instrucciones -> condiciones .)


state 7

    (6) instrucciones -> sentenciaIf .

    $end            reduce using rule 6 (instrucciones -> sentenciaIf .)
    RETURN          reduce using rule 6 (instrucciones -> sentenciaIf .)
    LLAVERIGHT      reduce using rule 6 (instrucciones -> sentenciaIf .)
    DEFAULT         reduce using rule 6 (instrucciones -> sentenciaIf .)
    CASE            reduce using rule 6 (instrucciones -> sentenciaIf .)


state 8

    (7) instrucciones -> sentenciaFor .

    $end            reduce using rule 7 (instrucciones -> sentenciaFor .)
    RETURN          reduce using rule 7 (instrucciones -> sentenciaFor .)
    LLAVERIGHT      reduce using rule 7 (instrucciones -> sentenciaFor .)
    DEFAULT         reduce using rule 7 (instrucciones -> sentenciaFor .)
    CASE            reduce using rule 7 (instrucciones -> sentenciaFor .)


state 9

    (8) instrucciones -> print .

    $end            reduce using rule 8 (instrucciones -> print .)
    RETURN          reduce using rule 8 (instrucciones -> print .)
    LLAVERIGHT      reduce using rule 8 (instrucciones -> print .)
    DEFAULT         reduce using rule 8 (instrucciones -> print .)
    CASE            reduce using rule 8 (instrucciones -> print .)


state 10

    (9) instrucciones -> mapa .

    $end            reduce using rule 9 (instrucciones -> mapa .)
    RETURN          reduce using rule 9 (instrucciones -> mapa .)
    LLAVERIGHT      reduce using rule 9 (instrucciones -> mapa .)
    DEFAULT         reduce using rule 9 (instrucciones -> mapa .)
    CASE            reduce using rule 9 (instrucciones -> mapa .)


state 11

    (10) instrucciones -> puntero .

    $end            reduce using rule 10 (instrucciones -> puntero .)
    RETURN          reduce using rule 10 (instrucciones -> puntero .)
    LLAVERIGHT      reduce using rule 10 (instrucciones -> puntero .)
    DEFAULT         reduce using rule 10 (instrucciones -> puntero .)
    CASE            reduce using rule 10 (instrucciones -> puntero .)


state 12

    (11) instrucciones -> lectura .

    $end            reduce using rule 11 (instrucciones -> lectura .)
    RETURN          reduce using rule 11 (instrucciones -> lectura .)
    LLAVERIGHT      reduce using rule 11 (instrucciones -> lectura .)
    DEFAULT         reduce using rule 11 (instrucciones -> lectura .)
    CASE            reduce using rule 11 (instrucciones -> lectura .)


state 13

    (12) instrucciones -> array .

    $end            reduce using rule 12 (instrucciones -> array .)
    RETURN          reduce using rule 12 (instrucciones -> array .)
    LLAVERIGHT      reduce using rule 12 (instrucciones -> array .)
    DEFAULT         reduce using rule 12 (instrucciones -> array .)
    CASE            reduce using rule 12 (instrucciones -> array .)


state 14

    (14) instrucciones -> arrayAsig .

    $end            reduce using rule 14 (instrucciones -> arrayAsig .)
    RETURN          reduce using rule 14 (instrucciones -> arrayAsig .)
    LLAVERIGHT      reduce using rule 14 (instrucciones -> arrayAsig .)
    DEFAULT         reduce using rule 14 (instrucciones -> arrayAsig .)
    CASE            reduce using rule 14 (instrucciones -> arrayAsig .)


state 15

    (97) switch -> SWITCH . VARIABLE LLAVELEFT bloque_switch LLAVERIGHT

    VARIABLE        shift and go to state 37


state 16

    (21) asignacion -> VARIABLE . DECLARADOR valor
    (22) asignacion -> VARIABLE . IGUAL valor
    (71) array -> VARIABLE . DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (90) factor -> VARIABLE .

    DECLARADOR      shift and go to state 38
    IGUAL           shift and go to state 39
    MAYORQUE        reduce using rule 90 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 90 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 90 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 90 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 90 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 90 (factor -> VARIABLE .)


state 17

    (15) asignacion -> VAR . VARIABLE BOOL IGUAL booleano
    (16) asignacion -> VAR . VARIABLE INT IGUAL expresion
    (17) asignacion -> VAR . VARIABLE FLOAT IGUAL expresion
    (18) asignacion -> VAR . VARIABLE STRING IGUAL CADENA
    (19) asignacion -> VAR . VARIABLE puntero IGUAL refer
    (20) asignacion -> VAR . VARIABLE puntero
    (72) arrayAsig -> VAR . VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData

    VARIABLE        shift and go to state 40


state 18

    (115) factor -> BOOL .

    MAYORQUE        reduce using rule 115 (factor -> BOOL .)
    MENORQUE        reduce using rule 115 (factor -> BOOL .)
    DIFERENTE       reduce using rule 115 (factor -> BOOL .)
    ESIGUAL         reduce using rule 115 (factor -> BOOL .)
    MENORIGUAL      reduce using rule 115 (factor -> BOOL .)
    MAYORIGUAL      reduce using rule 115 (factor -> BOOL .)
    $end            reduce using rule 115 (factor -> BOOL .)
    RETURN          reduce using rule 115 (factor -> BOOL .)
    LLAVERIGHT      reduce using rule 115 (factor -> BOOL .)
    PUNTOCOMA       reduce using rule 115 (factor -> BOOL .)
    DEFAULT         reduce using rule 115 (factor -> BOOL .)
    CASE            reduce using rule 115 (factor -> BOOL .)
    PARRIGHT        reduce using rule 115 (factor -> BOOL .)
    COMA            reduce using rule 115 (factor -> BOOL .)


state 19

    (23) asignacion -> derefer . IGUAL valor

    IGUAL           shift and go to state 41


state 20

    (86) expresion -> term .

    SUMA            reduce using rule 86 (expresion -> term .)
    RESTA           reduce using rule 86 (expresion -> term .)
    PRODUCTO        reduce using rule 86 (expresion -> term .)
    DIVISION        reduce using rule 86 (expresion -> term .)
    MODULO          reduce using rule 86 (expresion -> term .)
    $end            reduce using rule 86 (expresion -> term .)
    PARRIGHT        reduce using rule 86 (expresion -> term .)
    RETURN          reduce using rule 86 (expresion -> term .)
    LLAVERIGHT      reduce using rule 86 (expresion -> term .)
    DEFAULT         reduce using rule 86 (expresion -> term .)
    CASE            reduce using rule 86 (expresion -> term .)
    DOSPUNTOS       reduce using rule 86 (expresion -> term .)
    COMA            reduce using rule 86 (expresion -> term .)


state 21

    (58) puntero -> PRODUCTO . BOOL
    (59) puntero -> PRODUCTO . INT
    (60) puntero -> PRODUCTO . FLOAT
    (61) puntero -> PRODUCTO . STRING
    (63) derefer -> PRODUCTO . VARIABLE

    BOOL            shift and go to state 42
    INT             shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45
    VARIABLE        shift and go to state 46


state 22

    (104) condiciones -> factor . MAYORQUE factor
    (105) condiciones -> factor . MENORQUE factor
    (106) condiciones -> factor . DIFERENTE factor
    (107) condiciones -> factor . ESIGUAL factor
    (108) condiciones -> factor . MENORIGUAL factor
    (109) condiciones -> factor . MAYORIGUAL factor

    MAYORQUE        shift and go to state 47
    MENORQUE        shift and go to state 48
    DIFERENTE       shift and go to state 49
    ESIGUAL         shift and go to state 50
    MENORIGUAL      shift and go to state 51
    MAYORIGUAL      shift and go to state 52


state 23

    (33) sentenciaIf -> IF . condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> IF . condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> IF . condicion LLAVELEFT instrucciones LLAVERIGHT
    (36) sentenciaIf -> IF . condicion LLAVELEFT instrucciones LLAVERIGHT else
    (37) sentenciaIf -> IF . condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> IF . condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (113) condicion -> . AND
    (114) condicion -> . OR

    AND             shift and go to state 54
    OR              shift and go to state 55

    condicion                      shift and go to state 53

state 24

    (64) sentenciaFor -> FOR . inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (65) inicio -> . VARIABLE DECLARADOR ENTERO

    VARIABLE        shift and go to state 57

    inicio                         shift and go to state 56

state 25

    (73) print -> IMPRIMIR . PARLEFT contPrint PARRIGHT

    PARLEFT         shift and go to state 58


state 26

    (93) numericos -> PARLEFT . expresion PARRIGHT
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    expresion                      shift and go to state 59
    term                           shift and go to state 20
    numericos                      shift and go to state 60

state 27

    (43) mapa -> MAP . CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> MAP . CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT

    CORCHLEFT       shift and go to state 61


state 28

    (78) lectura -> SCAN . PARLEFT contScan PARRIGHT

    PARLEFT         shift and go to state 62


state 29

    (91) numericos -> ENTERO .

    SUMA            reduce using rule 91 (numericos -> ENTERO .)
    RESTA           reduce using rule 91 (numericos -> ENTERO .)
    PRODUCTO        reduce using rule 91 (numericos -> ENTERO .)
    DIVISION        reduce using rule 91 (numericos -> ENTERO .)
    MODULO          reduce using rule 91 (numericos -> ENTERO .)
    $end            reduce using rule 91 (numericos -> ENTERO .)
    MAYORQUE        reduce using rule 91 (numericos -> ENTERO .)
    MENORQUE        reduce using rule 91 (numericos -> ENTERO .)
    DIFERENTE       reduce using rule 91 (numericos -> ENTERO .)
    ESIGUAL         reduce using rule 91 (numericos -> ENTERO .)
    MENORIGUAL      reduce using rule 91 (numericos -> ENTERO .)
    MAYORIGUAL      reduce using rule 91 (numericos -> ENTERO .)
    PARRIGHT        reduce using rule 91 (numericos -> ENTERO .)
    RETURN          reduce using rule 91 (numericos -> ENTERO .)
    LLAVERIGHT      reduce using rule 91 (numericos -> ENTERO .)
    DEFAULT         reduce using rule 91 (numericos -> ENTERO .)
    CASE            reduce using rule 91 (numericos -> ENTERO .)
    DOSPUNTOS       reduce using rule 91 (numericos -> ENTERO .)
    COMA            reduce using rule 91 (numericos -> ENTERO .)
    PUNTOCOMA       reduce using rule 91 (numericos -> ENTERO .)


state 30

    (88) term -> numericos .
    (89) factor -> numericos .

    SUMA            reduce using rule 88 (term -> numericos .)
    RESTA           reduce using rule 88 (term -> numericos .)
    PRODUCTO        reduce using rule 88 (term -> numericos .)
    DIVISION        reduce using rule 88 (term -> numericos .)
    MODULO          reduce using rule 88 (term -> numericos .)
    $end            reduce using rule 88 (term -> numericos .)
    RETURN          reduce using rule 88 (term -> numericos .)
    LLAVERIGHT      reduce using rule 88 (term -> numericos .)
    DEFAULT         reduce using rule 88 (term -> numericos .)
    CASE            reduce using rule 88 (term -> numericos .)
    MAYORQUE        reduce using rule 89 (factor -> numericos .)
    MENORQUE        reduce using rule 89 (factor -> numericos .)
    DIFERENTE       reduce using rule 89 (factor -> numericos .)
    ESIGUAL         reduce using rule 89 (factor -> numericos .)
    MENORIGUAL      reduce using rule 89 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 89 (factor -> numericos .)


state 31

    (92) numericos -> FLOTANTE .

    SUMA            reduce using rule 92 (numericos -> FLOTANTE .)
    RESTA           reduce using rule 92 (numericos -> FLOTANTE .)
    PRODUCTO        reduce using rule 92 (numericos -> FLOTANTE .)
    DIVISION        reduce using rule 92 (numericos -> FLOTANTE .)
    MODULO          reduce using rule 92 (numericos -> FLOTANTE .)
    $end            reduce using rule 92 (numericos -> FLOTANTE .)
    MAYORQUE        reduce using rule 92 (numericos -> FLOTANTE .)
    MENORQUE        reduce using rule 92 (numericos -> FLOTANTE .)
    DIFERENTE       reduce using rule 92 (numericos -> FLOTANTE .)
    ESIGUAL         reduce using rule 92 (numericos -> FLOTANTE .)
    MENORIGUAL      reduce using rule 92 (numericos -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 92 (numericos -> FLOTANTE .)
    PARRIGHT        reduce using rule 92 (numericos -> FLOTANTE .)
    RETURN          reduce using rule 92 (numericos -> FLOTANTE .)
    LLAVERIGHT      reduce using rule 92 (numericos -> FLOTANTE .)
    DEFAULT         reduce using rule 92 (numericos -> FLOTANTE .)
    CASE            reduce using rule 92 (numericos -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 92 (numericos -> FLOTANTE .)
    COMA            reduce using rule 92 (numericos -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 92 (numericos -> FLOTANTE .)


state 32

    (81) expresion -> expresion SUMA . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    term                           shift and go to state 63
    numericos                      shift and go to state 60

state 33

    (82) expresion -> expresion RESTA . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    term                           shift and go to state 64
    numericos                      shift and go to state 60

state 34

    (83) expresion -> expresion PRODUCTO . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    term                           shift and go to state 65
    numericos                      shift and go to state 60

state 35

    (84) expresion -> expresion DIVISION . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    term                           shift and go to state 66
    numericos                      shift and go to state 60

state 36

    (85) expresion -> expresion MODULO . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    term                           shift and go to state 67
    numericos                      shift and go to state 60

state 37

    (97) switch -> SWITCH VARIABLE . LLAVELEFT bloque_switch LLAVERIGHT

    LLAVELEFT       shift and go to state 68


state 38

    (21) asignacion -> VARIABLE DECLARADOR . valor
    (71) array -> VARIABLE DECLARADOR . CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (27) valor -> . booleano
    (28) valor -> . expresion
    (29) valor -> . CADENA
    (30) valor -> . VARIABLE
    (31) valor -> . mapa
    (32) valor -> . refer
    (24) booleano -> . condicion
    (25) booleano -> . TRUE
    (26) booleano -> . FALSE
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (43) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (62) refer -> . AMPERSAND VARIABLE
    (113) condicion -> . AND
    (114) condicion -> . OR
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    CORCHLEFT       shift and go to state 71
    CADENA          shift and go to state 74
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    MAP             shift and go to state 27
    AMPERSAND       shift and go to state 80
    AND             shift and go to state 54
    OR              shift and go to state 55
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    valor                          shift and go to state 70
    booleano                       shift and go to state 72
    expresion                      shift and go to state 73
    mapa                           shift and go to state 75
    refer                          shift and go to state 76
    condicion                      shift and go to state 77
    term                           shift and go to state 20
    numericos                      shift and go to state 60

state 39

    (22) asignacion -> VARIABLE IGUAL . valor
    (27) valor -> . booleano
    (28) valor -> . expresion
    (29) valor -> . CADENA
    (30) valor -> . VARIABLE
    (31) valor -> . mapa
    (32) valor -> . refer
    (24) booleano -> . condicion
    (25) booleano -> . TRUE
    (26) booleano -> . FALSE
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (43) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (62) refer -> . AMPERSAND VARIABLE
    (113) condicion -> . AND
    (114) condicion -> . OR
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 74
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    MAP             shift and go to state 27
    AMPERSAND       shift and go to state 80
    AND             shift and go to state 54
    OR              shift and go to state 55
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    valor                          shift and go to state 81
    booleano                       shift and go to state 72
    expresion                      shift and go to state 73
    mapa                           shift and go to state 75
    refer                          shift and go to state 76
    condicion                      shift and go to state 77
    term                           shift and go to state 20
    numericos                      shift and go to state 60

state 40

    (15) asignacion -> VAR VARIABLE . BOOL IGUAL booleano
    (16) asignacion -> VAR VARIABLE . INT IGUAL expresion
    (17) asignacion -> VAR VARIABLE . FLOAT IGUAL expresion
    (18) asignacion -> VAR VARIABLE . STRING IGUAL CADENA
    (19) asignacion -> VAR VARIABLE . puntero IGUAL refer
    (20) asignacion -> VAR VARIABLE . puntero
    (72) arrayAsig -> VAR VARIABLE . CORCHLEFT ENTERO CORCHRIGHT typeData
    (58) puntero -> . PRODUCTO BOOL
    (59) puntero -> . PRODUCTO INT
    (60) puntero -> . PRODUCTO FLOAT
    (61) puntero -> . PRODUCTO STRING

    BOOL            shift and go to state 82
    INT             shift and go to state 83
    FLOAT           shift and go to state 84
    STRING          shift and go to state 85
    CORCHLEFT       shift and go to state 87
    PRODUCTO        shift and go to state 88

    puntero                        shift and go to state 86

state 41

    (23) asignacion -> derefer IGUAL . valor
    (27) valor -> . booleano
    (28) valor -> . expresion
    (29) valor -> . CADENA
    (30) valor -> . VARIABLE
    (31) valor -> . mapa
    (32) valor -> . refer
    (24) booleano -> . condicion
    (25) booleano -> . TRUE
    (26) booleano -> . FALSE
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (43) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (62) refer -> . AMPERSAND VARIABLE
    (113) condicion -> . AND
    (114) condicion -> . OR
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 74
    VARIABLE        shift and go to state 69
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    MAP             shift and go to state 27
    AMPERSAND       shift and go to state 80
    AND             shift and go to state 54
    OR              shift and go to state 55
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    valor                          shift and go to state 89
    booleano                       shift and go to state 72
    expresion                      shift and go to state 73
    mapa                           shift and go to state 75
    refer                          shift and go to state 76
    condicion                      shift and go to state 77
    term                           shift and go to state 20
    numericos                      shift and go to state 60

state 42

    (58) puntero -> PRODUCTO BOOL .

    $end            reduce using rule 58 (puntero -> PRODUCTO BOOL .)
    IGUAL           reduce using rule 58 (puntero -> PRODUCTO BOOL .)
    RETURN          reduce using rule 58 (puntero -> PRODUCTO BOOL .)
    LLAVERIGHT      reduce using rule 58 (puntero -> PRODUCTO BOOL .)
    DEFAULT         reduce using rule 58 (puntero -> PRODUCTO BOOL .)
    CASE            reduce using rule 58 (puntero -> PRODUCTO BOOL .)


state 43

    (59) puntero -> PRODUCTO INT .

    $end            reduce using rule 59 (puntero -> PRODUCTO INT .)
    IGUAL           reduce using rule 59 (puntero -> PRODUCTO INT .)
    RETURN          reduce using rule 59 (puntero -> PRODUCTO INT .)
    LLAVERIGHT      reduce using rule 59 (puntero -> PRODUCTO INT .)
    DEFAULT         reduce using rule 59 (puntero -> PRODUCTO INT .)
    CASE            reduce using rule 59 (puntero -> PRODUCTO INT .)


state 44

    (60) puntero -> PRODUCTO FLOAT .

    $end            reduce using rule 60 (puntero -> PRODUCTO FLOAT .)
    IGUAL           reduce using rule 60 (puntero -> PRODUCTO FLOAT .)
    RETURN          reduce using rule 60 (puntero -> PRODUCTO FLOAT .)
    LLAVERIGHT      reduce using rule 60 (puntero -> PRODUCTO FLOAT .)
    DEFAULT         reduce using rule 60 (puntero -> PRODUCTO FLOAT .)
    CASE            reduce using rule 60 (puntero -> PRODUCTO FLOAT .)


state 45

    (61) puntero -> PRODUCTO STRING .

    $end            reduce using rule 61 (puntero -> PRODUCTO STRING .)
    IGUAL           reduce using rule 61 (puntero -> PRODUCTO STRING .)
    RETURN          reduce using rule 61 (puntero -> PRODUCTO STRING .)
    LLAVERIGHT      reduce using rule 61 (puntero -> PRODUCTO STRING .)
    DEFAULT         reduce using rule 61 (puntero -> PRODUCTO STRING .)
    CASE            reduce using rule 61 (puntero -> PRODUCTO STRING .)


state 46

    (63) derefer -> PRODUCTO VARIABLE .

    IGUAL           reduce using rule 63 (derefer -> PRODUCTO VARIABLE .)


state 47

    (104) condiciones -> factor MAYORQUE . factor
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 92
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 90
    numericos                      shift and go to state 91

state 48

    (105) condiciones -> factor MENORQUE . factor
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 92
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 93
    numericos                      shift and go to state 91

state 49

    (106) condiciones -> factor DIFERENTE . factor
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 92
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 94
    numericos                      shift and go to state 91

state 50

    (107) condiciones -> factor ESIGUAL . factor
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 92
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 95
    numericos                      shift and go to state 91

state 51

    (108) condiciones -> factor MENORIGUAL . factor
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 92
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 96
    numericos                      shift and go to state 91

state 52

    (109) condiciones -> factor MAYORIGUAL . factor
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 92
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    factor                         shift and go to state 97
    numericos                      shift and go to state 91

state 53

    (33) sentenciaIf -> IF condicion . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> IF condicion . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> IF condicion . LLAVELEFT instrucciones LLAVERIGHT
    (36) sentenciaIf -> IF condicion . LLAVELEFT instrucciones LLAVERIGHT else
    (37) sentenciaIf -> IF condicion . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> IF condicion . LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 98


state 54

    (113) condicion -> AND .

    LLAVELEFT       reduce using rule 113 (condicion -> AND .)
    $end            reduce using rule 113 (condicion -> AND .)
    RETURN          reduce using rule 113 (condicion -> AND .)
    LLAVERIGHT      reduce using rule 113 (condicion -> AND .)
    DEFAULT         reduce using rule 113 (condicion -> AND .)
    CASE            reduce using rule 113 (condicion -> AND .)


state 55

    (114) condicion -> OR .

    LLAVELEFT       reduce using rule 114 (condicion -> OR .)
    $end            reduce using rule 114 (condicion -> OR .)
    RETURN          reduce using rule 114 (condicion -> OR .)
    LLAVERIGHT      reduce using rule 114 (condicion -> OR .)
    DEFAULT         reduce using rule 114 (condicion -> OR .)
    CASE            reduce using rule 114 (condicion -> OR .)


state 56

    (64) sentenciaFor -> FOR inicio . PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 99


state 57

    (65) inicio -> VARIABLE . DECLARADOR ENTERO

    DECLARADOR      shift and go to state 100


state 58

    (73) print -> IMPRIMIR PARLEFT . contPrint PARRIGHT
    (74) contPrint -> . CADENA
    (75) contPrint -> . VARIABLE
    (76) contPrint -> . factor
    (77) contPrint -> . contPrint COMA contPrint
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 102
    VARIABLE        shift and go to state 103
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    contPrint                      shift and go to state 101
    factor                         shift and go to state 104
    numericos                      shift and go to state 91

state 59

    (93) numericos -> PARLEFT expresion . PARRIGHT
    (81) expresion -> expresion . SUMA term
    (82) expresion -> expresion . RESTA term
    (83) expresion -> expresion . PRODUCTO term
    (84) expresion -> expresion . DIVISION term
    (85) expresion -> expresion . MODULO term

    PARRIGHT        shift and go to state 105
    SUMA            shift and go to state 32
    RESTA           shift and go to state 33
    PRODUCTO        shift and go to state 34
    DIVISION        shift and go to state 35
    MODULO          shift and go to state 36


state 60

    (88) term -> numericos .

    PARRIGHT        reduce using rule 88 (term -> numericos .)
    SUMA            reduce using rule 88 (term -> numericos .)
    RESTA           reduce using rule 88 (term -> numericos .)
    PRODUCTO        reduce using rule 88 (term -> numericos .)
    DIVISION        reduce using rule 88 (term -> numericos .)
    MODULO          reduce using rule 88 (term -> numericos .)
    $end            reduce using rule 88 (term -> numericos .)
    RETURN          reduce using rule 88 (term -> numericos .)
    LLAVERIGHT      reduce using rule 88 (term -> numericos .)
    DEFAULT         reduce using rule 88 (term -> numericos .)
    CASE            reduce using rule 88 (term -> numericos .)
    DOSPUNTOS       reduce using rule 88 (term -> numericos .)
    COMA            reduce using rule 88 (term -> numericos .)


state 61

    (43) mapa -> MAP CORCHLEFT . tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> MAP CORCHLEFT . tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (49) tipo -> . BOOL
    (50) tipo -> . INT
    (51) tipo -> . FLOAT
    (52) tipo -> . STRING

    BOOL            shift and go to state 107
    INT             shift and go to state 108
    FLOAT           shift and go to state 109
    STRING          shift and go to state 110

    tipo                           shift and go to state 106

state 62

    (78) lectura -> SCAN PARLEFT . contScan PARRIGHT
    (79) contScan -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 112

    contScan                       shift and go to state 111

state 63

    (81) expresion -> expresion SUMA term .

    SUMA            reduce using rule 81 (expresion -> expresion SUMA term .)
    RESTA           reduce using rule 81 (expresion -> expresion SUMA term .)
    PRODUCTO        reduce using rule 81 (expresion -> expresion SUMA term .)
    DIVISION        reduce using rule 81 (expresion -> expresion SUMA term .)
    MODULO          reduce using rule 81 (expresion -> expresion SUMA term .)
    $end            reduce using rule 81 (expresion -> expresion SUMA term .)
    PARRIGHT        reduce using rule 81 (expresion -> expresion SUMA term .)
    RETURN          reduce using rule 81 (expresion -> expresion SUMA term .)
    LLAVERIGHT      reduce using rule 81 (expresion -> expresion SUMA term .)
    DEFAULT         reduce using rule 81 (expresion -> expresion SUMA term .)
    CASE            reduce using rule 81 (expresion -> expresion SUMA term .)
    DOSPUNTOS       reduce using rule 81 (expresion -> expresion SUMA term .)
    COMA            reduce using rule 81 (expresion -> expresion SUMA term .)


state 64

    (82) expresion -> expresion RESTA term .

    SUMA            reduce using rule 82 (expresion -> expresion RESTA term .)
    RESTA           reduce using rule 82 (expresion -> expresion RESTA term .)
    PRODUCTO        reduce using rule 82 (expresion -> expresion RESTA term .)
    DIVISION        reduce using rule 82 (expresion -> expresion RESTA term .)
    MODULO          reduce using rule 82 (expresion -> expresion RESTA term .)
    $end            reduce using rule 82 (expresion -> expresion RESTA term .)
    PARRIGHT        reduce using rule 82 (expresion -> expresion RESTA term .)
    RETURN          reduce using rule 82 (expresion -> expresion RESTA term .)
    LLAVERIGHT      reduce using rule 82 (expresion -> expresion RESTA term .)
    DEFAULT         reduce using rule 82 (expresion -> expresion RESTA term .)
    CASE            reduce using rule 82 (expresion -> expresion RESTA term .)
    DOSPUNTOS       reduce using rule 82 (expresion -> expresion RESTA term .)
    COMA            reduce using rule 82 (expresion -> expresion RESTA term .)


state 65

    (83) expresion -> expresion PRODUCTO term .

    SUMA            reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    RESTA           reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    PRODUCTO        reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    DIVISION        reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    MODULO          reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    $end            reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    PARRIGHT        reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    RETURN          reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    LLAVERIGHT      reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    DEFAULT         reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    CASE            reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    DOSPUNTOS       reduce using rule 83 (expresion -> expresion PRODUCTO term .)
    COMA            reduce using rule 83 (expresion -> expresion PRODUCTO term .)


state 66

    (84) expresion -> expresion DIVISION term .

    SUMA            reduce using rule 84 (expresion -> expresion DIVISION term .)
    RESTA           reduce using rule 84 (expresion -> expresion DIVISION term .)
    PRODUCTO        reduce using rule 84 (expresion -> expresion DIVISION term .)
    DIVISION        reduce using rule 84 (expresion -> expresion DIVISION term .)
    MODULO          reduce using rule 84 (expresion -> expresion DIVISION term .)
    $end            reduce using rule 84 (expresion -> expresion DIVISION term .)
    PARRIGHT        reduce using rule 84 (expresion -> expresion DIVISION term .)
    RETURN          reduce using rule 84 (expresion -> expresion DIVISION term .)
    LLAVERIGHT      reduce using rule 84 (expresion -> expresion DIVISION term .)
    DEFAULT         reduce using rule 84 (expresion -> expresion DIVISION term .)
    CASE            reduce using rule 84 (expresion -> expresion DIVISION term .)
    DOSPUNTOS       reduce using rule 84 (expresion -> expresion DIVISION term .)
    COMA            reduce using rule 84 (expresion -> expresion DIVISION term .)


state 67

    (85) expresion -> expresion MODULO term .

    SUMA            reduce using rule 85 (expresion -> expresion MODULO term .)
    RESTA           reduce using rule 85 (expresion -> expresion MODULO term .)
    PRODUCTO        reduce using rule 85 (expresion -> expresion MODULO term .)
    DIVISION        reduce using rule 85 (expresion -> expresion MODULO term .)
    MODULO          reduce using rule 85 (expresion -> expresion MODULO term .)
    $end            reduce using rule 85 (expresion -> expresion MODULO term .)
    PARRIGHT        reduce using rule 85 (expresion -> expresion MODULO term .)
    RETURN          reduce using rule 85 (expresion -> expresion MODULO term .)
    LLAVERIGHT      reduce using rule 85 (expresion -> expresion MODULO term .)
    DEFAULT         reduce using rule 85 (expresion -> expresion MODULO term .)
    CASE            reduce using rule 85 (expresion -> expresion MODULO term .)
    DOSPUNTOS       reduce using rule 85 (expresion -> expresion MODULO term .)
    COMA            reduce using rule 85 (expresion -> expresion MODULO term .)


state 68

    (97) switch -> SWITCH VARIABLE LLAVELEFT . bloque_switch LLAVERIGHT
    (98) bloque_switch -> . CASE VARIABLE DOSPUNTOS instrucciones
    (99) bloque_switch -> . CASE VARIABLE DOSPUNTOS instrucciones bloque_switch
    (100) bloque_switch -> . CASE VARIABLE DOSPUNTOS instrucciones switch_default
    (101) bloque_switch -> . CASE VARIABLE DOSPUNTOS instrucciones bloque_switch switch_default
    (102) bloque_switch -> . switch_default
    (103) switch_default -> . DEFAULT DOSPUNTOS instrucciones

    CASE            shift and go to state 114
    DEFAULT         shift and go to state 116

    bloque_switch                  shift and go to state 113
    switch_default                 shift and go to state 115

state 69

    (30) valor -> VARIABLE .

    $end            reduce using rule 30 (valor -> VARIABLE .)
    RETURN          reduce using rule 30 (valor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 30 (valor -> VARIABLE .)
    DEFAULT         reduce using rule 30 (valor -> VARIABLE .)
    CASE            reduce using rule 30 (valor -> VARIABLE .)


state 70

    (21) asignacion -> VARIABLE DECLARADOR valor .

    $end            reduce using rule 21 (asignacion -> VARIABLE DECLARADOR valor .)
    RETURN          reduce using rule 21 (asignacion -> VARIABLE DECLARADOR valor .)
    LLAVERIGHT      reduce using rule 21 (asignacion -> VARIABLE DECLARADOR valor .)
    DEFAULT         reduce using rule 21 (asignacion -> VARIABLE DECLARADOR valor .)
    CASE            reduce using rule 21 (asignacion -> VARIABLE DECLARADOR valor .)


state 71

    (71) array -> VARIABLE DECLARADOR CORCHLEFT . ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    ENTERO          shift and go to state 117


state 72

    (27) valor -> booleano .

    $end            reduce using rule 27 (valor -> booleano .)
    RETURN          reduce using rule 27 (valor -> booleano .)
    LLAVERIGHT      reduce using rule 27 (valor -> booleano .)
    DEFAULT         reduce using rule 27 (valor -> booleano .)
    CASE            reduce using rule 27 (valor -> booleano .)


state 73

    (28) valor -> expresion .
    (81) expresion -> expresion . SUMA term
    (82) expresion -> expresion . RESTA term
    (83) expresion -> expresion . PRODUCTO term
    (84) expresion -> expresion . DIVISION term
    (85) expresion -> expresion . MODULO term

    $end            reduce using rule 28 (valor -> expresion .)
    RETURN          reduce using rule 28 (valor -> expresion .)
    LLAVERIGHT      reduce using rule 28 (valor -> expresion .)
    DEFAULT         reduce using rule 28 (valor -> expresion .)
    CASE            reduce using rule 28 (valor -> expresion .)
    SUMA            shift and go to state 32
    RESTA           shift and go to state 33
    PRODUCTO        shift and go to state 34
    DIVISION        shift and go to state 35
    MODULO          shift and go to state 36


state 74

    (29) valor -> CADENA .

    $end            reduce using rule 29 (valor -> CADENA .)
    RETURN          reduce using rule 29 (valor -> CADENA .)
    LLAVERIGHT      reduce using rule 29 (valor -> CADENA .)
    DEFAULT         reduce using rule 29 (valor -> CADENA .)
    CASE            reduce using rule 29 (valor -> CADENA .)


state 75

    (31) valor -> mapa .

    $end            reduce using rule 31 (valor -> mapa .)
    RETURN          reduce using rule 31 (valor -> mapa .)
    LLAVERIGHT      reduce using rule 31 (valor -> mapa .)
    DEFAULT         reduce using rule 31 (valor -> mapa .)
    CASE            reduce using rule 31 (valor -> mapa .)


state 76

    (32) valor -> refer .

    $end            reduce using rule 32 (valor -> refer .)
    RETURN          reduce using rule 32 (valor -> refer .)
    LLAVERIGHT      reduce using rule 32 (valor -> refer .)
    DEFAULT         reduce using rule 32 (valor -> refer .)
    CASE            reduce using rule 32 (valor -> refer .)


state 77

    (24) booleano -> condicion .

    $end            reduce using rule 24 (booleano -> condicion .)
    RETURN          reduce using rule 24 (booleano -> condicion .)
    LLAVERIGHT      reduce using rule 24 (booleano -> condicion .)
    DEFAULT         reduce using rule 24 (booleano -> condicion .)
    CASE            reduce using rule 24 (booleano -> condicion .)


state 78

    (25) booleano -> TRUE .

    $end            reduce using rule 25 (booleano -> TRUE .)
    RETURN          reduce using rule 25 (booleano -> TRUE .)
    LLAVERIGHT      reduce using rule 25 (booleano -> TRUE .)
    DEFAULT         reduce using rule 25 (booleano -> TRUE .)
    CASE            reduce using rule 25 (booleano -> TRUE .)


state 79

    (26) booleano -> FALSE .

    $end            reduce using rule 26 (booleano -> FALSE .)
    RETURN          reduce using rule 26 (booleano -> FALSE .)
    LLAVERIGHT      reduce using rule 26 (booleano -> FALSE .)
    DEFAULT         reduce using rule 26 (booleano -> FALSE .)
    CASE            reduce using rule 26 (booleano -> FALSE .)


state 80

    (62) refer -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 118


state 81

    (22) asignacion -> VARIABLE IGUAL valor .

    $end            reduce using rule 22 (asignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 22 (asignacion -> VARIABLE IGUAL valor .)
    LLAVERIGHT      reduce using rule 22 (asignacion -> VARIABLE IGUAL valor .)
    DEFAULT         reduce using rule 22 (asignacion -> VARIABLE IGUAL valor .)
    CASE            reduce using rule 22 (asignacion -> VARIABLE IGUAL valor .)


state 82

    (15) asignacion -> VAR VARIABLE BOOL . IGUAL booleano

    IGUAL           shift and go to state 119


state 83

    (16) asignacion -> VAR VARIABLE INT . IGUAL expresion

    IGUAL           shift and go to state 120


state 84

    (17) asignacion -> VAR VARIABLE FLOAT . IGUAL expresion

    IGUAL           shift and go to state 121


state 85

    (18) asignacion -> VAR VARIABLE STRING . IGUAL CADENA

    IGUAL           shift and go to state 122


state 86

    (19) asignacion -> VAR VARIABLE puntero . IGUAL refer
    (20) asignacion -> VAR VARIABLE puntero .

    IGUAL           shift and go to state 123
    $end            reduce using rule 20 (asignacion -> VAR VARIABLE puntero .)
    RETURN          reduce using rule 20 (asignacion -> VAR VARIABLE puntero .)
    LLAVERIGHT      reduce using rule 20 (asignacion -> VAR VARIABLE puntero .)
    DEFAULT         reduce using rule 20 (asignacion -> VAR VARIABLE puntero .)
    CASE            reduce using rule 20 (asignacion -> VAR VARIABLE puntero .)


state 87

    (72) arrayAsig -> VAR VARIABLE CORCHLEFT . ENTERO CORCHRIGHT typeData

    ENTERO          shift and go to state 124


state 88

    (58) puntero -> PRODUCTO . BOOL
    (59) puntero -> PRODUCTO . INT
    (60) puntero -> PRODUCTO . FLOAT
    (61) puntero -> PRODUCTO . STRING

    BOOL            shift and go to state 42
    INT             shift and go to state 43
    FLOAT           shift and go to state 44
    STRING          shift and go to state 45


state 89

    (23) asignacion -> derefer IGUAL valor .

    $end            reduce using rule 23 (asignacion -> derefer IGUAL valor .)
    RETURN          reduce using rule 23 (asignacion -> derefer IGUAL valor .)
    LLAVERIGHT      reduce using rule 23 (asignacion -> derefer IGUAL valor .)
    DEFAULT         reduce using rule 23 (asignacion -> derefer IGUAL valor .)
    CASE            reduce using rule 23 (asignacion -> derefer IGUAL valor .)


state 90

    (104) condiciones -> factor MAYORQUE factor .

    $end            reduce using rule 104 (condiciones -> factor MAYORQUE factor .)
    RETURN          reduce using rule 104 (condiciones -> factor MAYORQUE factor .)
    LLAVERIGHT      reduce using rule 104 (condiciones -> factor MAYORQUE factor .)
    PUNTOCOMA       reduce using rule 104 (condiciones -> factor MAYORQUE factor .)
    DEFAULT         reduce using rule 104 (condiciones -> factor MAYORQUE factor .)
    CASE            reduce using rule 104 (condiciones -> factor MAYORQUE factor .)


state 91

    (89) factor -> numericos .

    $end            reduce using rule 89 (factor -> numericos .)
    RETURN          reduce using rule 89 (factor -> numericos .)
    LLAVERIGHT      reduce using rule 89 (factor -> numericos .)
    PUNTOCOMA       reduce using rule 89 (factor -> numericos .)
    DEFAULT         reduce using rule 89 (factor -> numericos .)
    CASE            reduce using rule 89 (factor -> numericos .)
    PARRIGHT        reduce using rule 89 (factor -> numericos .)
    COMA            reduce using rule 89 (factor -> numericos .)
    MAYORQUE        reduce using rule 89 (factor -> numericos .)
    MENORQUE        reduce using rule 89 (factor -> numericos .)
    DIFERENTE       reduce using rule 89 (factor -> numericos .)
    ESIGUAL         reduce using rule 89 (factor -> numericos .)
    MENORIGUAL      reduce using rule 89 (factor -> numericos .)
    MAYORIGUAL      reduce using rule 89 (factor -> numericos .)


state 92

    (90) factor -> VARIABLE .

    $end            reduce using rule 90 (factor -> VARIABLE .)
    RETURN          reduce using rule 90 (factor -> VARIABLE .)
    LLAVERIGHT      reduce using rule 90 (factor -> VARIABLE .)
    PUNTOCOMA       reduce using rule 90 (factor -> VARIABLE .)
    DEFAULT         reduce using rule 90 (factor -> VARIABLE .)
    CASE            reduce using rule 90 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 90 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 90 (factor -> VARIABLE .)
    DIFERENTE       reduce using rule 90 (factor -> VARIABLE .)
    ESIGUAL         reduce using rule 90 (factor -> VARIABLE .)
    MENORIGUAL      reduce using rule 90 (factor -> VARIABLE .)
    MAYORIGUAL      reduce using rule 90 (factor -> VARIABLE .)


state 93

    (105) condiciones -> factor MENORQUE factor .

    $end            reduce using rule 105 (condiciones -> factor MENORQUE factor .)
    RETURN          reduce using rule 105 (condiciones -> factor MENORQUE factor .)
    LLAVERIGHT      reduce using rule 105 (condiciones -> factor MENORQUE factor .)
    PUNTOCOMA       reduce using rule 105 (condiciones -> factor MENORQUE factor .)
    DEFAULT         reduce using rule 105 (condiciones -> factor MENORQUE factor .)
    CASE            reduce using rule 105 (condiciones -> factor MENORQUE factor .)


state 94

    (106) condiciones -> factor DIFERENTE factor .

    $end            reduce using rule 106 (condiciones -> factor DIFERENTE factor .)
    RETURN          reduce using rule 106 (condiciones -> factor DIFERENTE factor .)
    LLAVERIGHT      reduce using rule 106 (condiciones -> factor DIFERENTE factor .)
    PUNTOCOMA       reduce using rule 106 (condiciones -> factor DIFERENTE factor .)
    DEFAULT         reduce using rule 106 (condiciones -> factor DIFERENTE factor .)
    CASE            reduce using rule 106 (condiciones -> factor DIFERENTE factor .)


state 95

    (107) condiciones -> factor ESIGUAL factor .

    $end            reduce using rule 107 (condiciones -> factor ESIGUAL factor .)
    RETURN          reduce using rule 107 (condiciones -> factor ESIGUAL factor .)
    LLAVERIGHT      reduce using rule 107 (condiciones -> factor ESIGUAL factor .)
    PUNTOCOMA       reduce using rule 107 (condiciones -> factor ESIGUAL factor .)
    DEFAULT         reduce using rule 107 (condiciones -> factor ESIGUAL factor .)
    CASE            reduce using rule 107 (condiciones -> factor ESIGUAL factor .)


state 96

    (108) condiciones -> factor MENORIGUAL factor .

    $end            reduce using rule 108 (condiciones -> factor MENORIGUAL factor .)
    RETURN          reduce using rule 108 (condiciones -> factor MENORIGUAL factor .)
    LLAVERIGHT      reduce using rule 108 (condiciones -> factor MENORIGUAL factor .)
    PUNTOCOMA       reduce using rule 108 (condiciones -> factor MENORIGUAL factor .)
    DEFAULT         reduce using rule 108 (condiciones -> factor MENORIGUAL factor .)
    CASE            reduce using rule 108 (condiciones -> factor MENORIGUAL factor .)


state 97

    (109) condiciones -> factor MAYORIGUAL factor .

    $end            reduce using rule 109 (condiciones -> factor MAYORIGUAL factor .)
    RETURN          reduce using rule 109 (condiciones -> factor MAYORIGUAL factor .)
    LLAVERIGHT      reduce using rule 109 (condiciones -> factor MAYORIGUAL factor .)
    PUNTOCOMA       reduce using rule 109 (condiciones -> factor MAYORIGUAL factor .)
    DEFAULT         reduce using rule 109 (condiciones -> factor MAYORIGUAL factor .)
    CASE            reduce using rule 109 (condiciones -> factor MAYORIGUAL factor .)


state 98

    (33) sentenciaIf -> IF condicion LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> IF condicion LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> IF condicion LLAVELEFT . instrucciones LLAVERIGHT
    (36) sentenciaIf -> IF condicion LLAVELEFT . instrucciones LLAVERIGHT else
    (37) sentenciaIf -> IF condicion LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> IF condicion LLAVELEFT . RETURN VARIABLE LLAVERIGHT else
    (3) instrucciones -> . asignacion
    (4) instrucciones -> . expresion
    (5) instrucciones -> . condiciones
    (6) instrucciones -> . sentenciaIf
    (7) instrucciones -> . sentenciaFor
    (8) instrucciones -> . print
    (9) instrucciones -> . mapa
    (10) instrucciones -> . puntero
    (11) instrucciones -> . lectura
    (12) instrucciones -> . array
    (13) instrucciones -> . switch
    (14) instrucciones -> . arrayAsig
    (15) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (16) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (18) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (19) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (20) asignacion -> . VAR VARIABLE puntero
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . derefer IGUAL valor
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (104) condiciones -> . factor MAYORQUE factor
    (105) condiciones -> . factor MENORQUE factor
    (106) condiciones -> . factor DIFERENTE factor
    (107) condiciones -> . factor ESIGUAL factor
    (108) condiciones -> . factor MENORIGUAL factor
    (109) condiciones -> . factor MAYORIGUAL factor
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (36) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (37) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (64) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (73) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (43) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO BOOL
    (59) puntero -> . PRODUCTO INT
    (60) puntero -> . PRODUCTO FLOAT
    (61) puntero -> . PRODUCTO STRING
    (78) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (71) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (97) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (72) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (63) derefer -> . PRODUCTO VARIABLE
    (88) term -> . numericos
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 126
    VAR             shift and go to state 17
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 15
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 125
    asignacion                     shift and go to state 4
    expresion                      shift and go to state 5
    condiciones                    shift and go to state 6
    sentenciaIf                    shift and go to state 7
    sentenciaFor                   shift and go to state 8
    print                          shift and go to state 9
    mapa                           shift and go to state 10
    puntero                        shift and go to state 11
    lectura                        shift and go to state 12
    array                          shift and go to state 13
    switch                         shift and go to state 127
    arrayAsig                      shift and go to state 14
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    numericos                      shift and go to state 30

state 99

    (64) sentenciaFor -> FOR inicio PUNTOCOMA . condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (104) condiciones -> . factor MAYORQUE factor
    (105) condiciones -> . factor MENORQUE factor
    (106) condiciones -> . factor DIFERENTE factor
    (107) condiciones -> . factor ESIGUAL factor
    (108) condiciones -> . factor MENORIGUAL factor
    (109) condiciones -> . factor MAYORIGUAL factor
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 92
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    condiciones                    shift and go to state 128
    factor                         shift and go to state 22
    numericos                      shift and go to state 91

state 100

    (65) inicio -> VARIABLE DECLARADOR . ENTERO

    ENTERO          shift and go to state 129


state 101

    (73) print -> IMPRIMIR PARLEFT contPrint . PARRIGHT
    (77) contPrint -> contPrint . COMA contPrint

    PARRIGHT        shift and go to state 130
    COMA            shift and go to state 131


state 102

    (74) contPrint -> CADENA .

    PARRIGHT        reduce using rule 74 (contPrint -> CADENA .)
    COMA            reduce using rule 74 (contPrint -> CADENA .)


state 103

    (75) contPrint -> VARIABLE .
    (90) factor -> VARIABLE .

  ! reduce/reduce conflict for PARRIGHT resolved using rule 75 (contPrint -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 75 (contPrint -> VARIABLE .)
    PARRIGHT        reduce using rule 75 (contPrint -> VARIABLE .)
    COMA            reduce using rule 75 (contPrint -> VARIABLE .)

  ! PARRIGHT        [ reduce using rule 90 (factor -> VARIABLE .) ]
  ! COMA            [ reduce using rule 90 (factor -> VARIABLE .) ]


state 104

    (76) contPrint -> factor .

    PARRIGHT        reduce using rule 76 (contPrint -> factor .)
    COMA            reduce using rule 76 (contPrint -> factor .)


state 105

    (93) numericos -> PARLEFT expresion PARRIGHT .

    SUMA            reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    RESTA           reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    PRODUCTO        reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    DIVISION        reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    MODULO          reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    $end            reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORQUE        reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORQUE        reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    DIFERENTE       reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    ESIGUAL         reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    MENORIGUAL      reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    MAYORIGUAL      reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    PARRIGHT        reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    RETURN          reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    LLAVERIGHT      reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    DEFAULT         reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    CASE            reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    DOSPUNTOS       reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    COMA            reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)
    PUNTOCOMA       reduce using rule 93 (numericos -> PARLEFT expresion PARRIGHT .)


state 106

    (43) mapa -> MAP CORCHLEFT tipo . CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> MAP CORCHLEFT tipo . CORCHRIGHT tipo LLAVELEFT LLAVERIGHT

    CORCHRIGHT      shift and go to state 132


state 107

    (49) tipo -> BOOL .

    CORCHRIGHT      reduce using rule 49 (tipo -> BOOL .)
    LLAVELEFT       reduce using rule 49 (tipo -> BOOL .)


state 108

    (50) tipo -> INT .

    CORCHRIGHT      reduce using rule 50 (tipo -> INT .)
    LLAVELEFT       reduce using rule 50 (tipo -> INT .)


state 109

    (51) tipo -> FLOAT .

    CORCHRIGHT      reduce using rule 51 (tipo -> FLOAT .)
    LLAVELEFT       reduce using rule 51 (tipo -> FLOAT .)


state 110

    (52) tipo -> STRING .

    CORCHRIGHT      reduce using rule 52 (tipo -> STRING .)
    LLAVELEFT       reduce using rule 52 (tipo -> STRING .)


state 111

    (78) lectura -> SCAN PARLEFT contScan . PARRIGHT

    PARRIGHT        shift and go to state 133


state 112

    (79) contScan -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 134


state 113

    (97) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch . LLAVERIGHT

    LLAVERIGHT      shift and go to state 135


state 114

    (98) bloque_switch -> CASE . VARIABLE DOSPUNTOS instrucciones
    (99) bloque_switch -> CASE . VARIABLE DOSPUNTOS instrucciones bloque_switch
    (100) bloque_switch -> CASE . VARIABLE DOSPUNTOS instrucciones switch_default
    (101) bloque_switch -> CASE . VARIABLE DOSPUNTOS instrucciones bloque_switch switch_default

    VARIABLE        shift and go to state 136


state 115

    (102) bloque_switch -> switch_default .

    LLAVERIGHT      reduce using rule 102 (bloque_switch -> switch_default .)


state 116

    (103) switch_default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 137


state 117

    (71) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO . CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    CORCHRIGHT      shift and go to state 138


state 118

    (62) refer -> AMPERSAND VARIABLE .

    $end            reduce using rule 62 (refer -> AMPERSAND VARIABLE .)
    RETURN          reduce using rule 62 (refer -> AMPERSAND VARIABLE .)
    LLAVERIGHT      reduce using rule 62 (refer -> AMPERSAND VARIABLE .)
    DEFAULT         reduce using rule 62 (refer -> AMPERSAND VARIABLE .)
    CASE            reduce using rule 62 (refer -> AMPERSAND VARIABLE .)


state 119

    (15) asignacion -> VAR VARIABLE BOOL IGUAL . booleano
    (24) booleano -> . condicion
    (25) booleano -> . TRUE
    (26) booleano -> . FALSE
    (113) condicion -> . AND
    (114) condicion -> . OR

    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    AND             shift and go to state 54
    OR              shift and go to state 55

    booleano                       shift and go to state 139
    condicion                      shift and go to state 77

state 120

    (16) asignacion -> VAR VARIABLE INT IGUAL . expresion
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    expresion                      shift and go to state 140
    term                           shift and go to state 20
    numericos                      shift and go to state 60

state 121

    (17) asignacion -> VAR VARIABLE FLOAT IGUAL . expresion
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    expresion                      shift and go to state 141
    term                           shift and go to state 20
    numericos                      shift and go to state 60

state 122

    (18) asignacion -> VAR VARIABLE STRING IGUAL . CADENA

    CADENA          shift and go to state 142


state 123

    (19) asignacion -> VAR VARIABLE puntero IGUAL . refer
    (62) refer -> . AMPERSAND VARIABLE

    AMPERSAND       shift and go to state 80

    refer                          shift and go to state 143

state 124

    (72) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO . CORCHRIGHT typeData

    CORCHRIGHT      shift and go to state 144


state 125

    (33) sentenciaIf -> IF condicion LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> IF condicion LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> IF condicion LLAVELEFT instrucciones . LLAVERIGHT
    (36) sentenciaIf -> IF condicion LLAVELEFT instrucciones . LLAVERIGHT else

    RETURN          shift and go to state 145
    LLAVERIGHT      shift and go to state 146


state 126

    (37) sentenciaIf -> IF condicion LLAVELEFT RETURN . VARIABLE LLAVERIGHT
    (38) sentenciaIf -> IF condicion LLAVELEFT RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 147


state 127

    (13) instrucciones -> switch .

    RETURN          reduce using rule 13 (instrucciones -> switch .)
    LLAVERIGHT      reduce using rule 13 (instrucciones -> switch .)
    DEFAULT         reduce using rule 13 (instrucciones -> switch .)
    CASE            reduce using rule 13 (instrucciones -> switch .)


state 128

    (64) sentenciaFor -> FOR inicio PUNTOCOMA condiciones . PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 148


state 129

    (65) inicio -> VARIABLE DECLARADOR ENTERO .

    PUNTOCOMA       reduce using rule 65 (inicio -> VARIABLE DECLARADOR ENTERO .)


state 130

    (73) print -> IMPRIMIR PARLEFT contPrint PARRIGHT .

    $end            reduce using rule 73 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    RETURN          reduce using rule 73 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    LLAVERIGHT      reduce using rule 73 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    DEFAULT         reduce using rule 73 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)
    CASE            reduce using rule 73 (print -> IMPRIMIR PARLEFT contPrint PARRIGHT .)


state 131

    (77) contPrint -> contPrint COMA . contPrint
    (74) contPrint -> . CADENA
    (75) contPrint -> . VARIABLE
    (76) contPrint -> . factor
    (77) contPrint -> . contPrint COMA contPrint
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    CADENA          shift and go to state 102
    VARIABLE        shift and go to state 103
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    contPrint                      shift and go to state 149
    factor                         shift and go to state 104
    numericos                      shift and go to state 91

state 132

    (43) mapa -> MAP CORCHLEFT tipo CORCHRIGHT . tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> MAP CORCHLEFT tipo CORCHRIGHT . tipo LLAVELEFT LLAVERIGHT
    (49) tipo -> . BOOL
    (50) tipo -> . INT
    (51) tipo -> . FLOAT
    (52) tipo -> . STRING

    BOOL            shift and go to state 107
    INT             shift and go to state 108
    FLOAT           shift and go to state 109
    STRING          shift and go to state 110

    tipo                           shift and go to state 150

state 133

    (78) lectura -> SCAN PARLEFT contScan PARRIGHT .

    $end            reduce using rule 78 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    RETURN          reduce using rule 78 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    LLAVERIGHT      reduce using rule 78 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    DEFAULT         reduce using rule 78 (lectura -> SCAN PARLEFT contScan PARRIGHT .)
    CASE            reduce using rule 78 (lectura -> SCAN PARLEFT contScan PARRIGHT .)


state 134

    (79) contScan -> AMPERSAND VARIABLE .

    PARRIGHT        reduce using rule 79 (contScan -> AMPERSAND VARIABLE .)


state 135

    (97) switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .

    $end            reduce using rule 97 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    RETURN          reduce using rule 97 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 97 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    DEFAULT         reduce using rule 97 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)
    CASE            reduce using rule 97 (switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT .)


state 136

    (98) bloque_switch -> CASE VARIABLE . DOSPUNTOS instrucciones
    (99) bloque_switch -> CASE VARIABLE . DOSPUNTOS instrucciones bloque_switch
    (100) bloque_switch -> CASE VARIABLE . DOSPUNTOS instrucciones switch_default
    (101) bloque_switch -> CASE VARIABLE . DOSPUNTOS instrucciones bloque_switch switch_default

    DOSPUNTOS       shift and go to state 151


state 137

    (103) switch_default -> DEFAULT DOSPUNTOS . instrucciones
    (3) instrucciones -> . asignacion
    (4) instrucciones -> . expresion
    (5) instrucciones -> . condiciones
    (6) instrucciones -> . sentenciaIf
    (7) instrucciones -> . sentenciaFor
    (8) instrucciones -> . print
    (9) instrucciones -> . mapa
    (10) instrucciones -> . puntero
    (11) instrucciones -> . lectura
    (12) instrucciones -> . array
    (13) instrucciones -> . switch
    (14) instrucciones -> . arrayAsig
    (15) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (16) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (18) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (19) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (20) asignacion -> . VAR VARIABLE puntero
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . derefer IGUAL valor
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (104) condiciones -> . factor MAYORQUE factor
    (105) condiciones -> . factor MENORQUE factor
    (106) condiciones -> . factor DIFERENTE factor
    (107) condiciones -> . factor ESIGUAL factor
    (108) condiciones -> . factor MENORIGUAL factor
    (109) condiciones -> . factor MAYORIGUAL factor
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (36) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (37) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (64) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (73) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (43) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO BOOL
    (59) puntero -> . PRODUCTO INT
    (60) puntero -> . PRODUCTO FLOAT
    (61) puntero -> . PRODUCTO STRING
    (78) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (71) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (97) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (72) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (63) derefer -> . PRODUCTO VARIABLE
    (88) term -> . numericos
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 17
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 15
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 152
    asignacion                     shift and go to state 4
    expresion                      shift and go to state 5
    condiciones                    shift and go to state 6
    sentenciaIf                    shift and go to state 7
    sentenciaFor                   shift and go to state 8
    print                          shift and go to state 9
    mapa                           shift and go to state 10
    puntero                        shift and go to state 11
    lectura                        shift and go to state 12
    array                          shift and go to state 13
    switch                         shift and go to state 127
    arrayAsig                      shift and go to state 14
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    numericos                      shift and go to state 30

state 138

    (71) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT . typeData LLAVELEFT contArray LLAVERIGHT
    (67) typeData -> . BOOL
    (68) typeData -> . INT
    (69) typeData -> . FLOAT
    (70) typeData -> . STRING

    BOOL            shift and go to state 154
    INT             shift and go to state 155
    FLOAT           shift and go to state 156
    STRING          shift and go to state 157

    typeData                       shift and go to state 153

state 139

    (15) asignacion -> VAR VARIABLE BOOL IGUAL booleano .

    $end            reduce using rule 15 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    RETURN          reduce using rule 15 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    LLAVERIGHT      reduce using rule 15 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    DEFAULT         reduce using rule 15 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)
    CASE            reduce using rule 15 (asignacion -> VAR VARIABLE BOOL IGUAL booleano .)


state 140

    (16) asignacion -> VAR VARIABLE INT IGUAL expresion .
    (81) expresion -> expresion . SUMA term
    (82) expresion -> expresion . RESTA term
    (83) expresion -> expresion . PRODUCTO term
    (84) expresion -> expresion . DIVISION term
    (85) expresion -> expresion . MODULO term

    $end            reduce using rule 16 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    RETURN          reduce using rule 16 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 16 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    DEFAULT         reduce using rule 16 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    CASE            reduce using rule 16 (asignacion -> VAR VARIABLE INT IGUAL expresion .)
    SUMA            shift and go to state 32
    RESTA           shift and go to state 33
    PRODUCTO        shift and go to state 34
    DIVISION        shift and go to state 35
    MODULO          shift and go to state 36


state 141

    (17) asignacion -> VAR VARIABLE FLOAT IGUAL expresion .
    (81) expresion -> expresion . SUMA term
    (82) expresion -> expresion . RESTA term
    (83) expresion -> expresion . PRODUCTO term
    (84) expresion -> expresion . DIVISION term
    (85) expresion -> expresion . MODULO term

    $end            reduce using rule 17 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    RETURN          reduce using rule 17 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    LLAVERIGHT      reduce using rule 17 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    DEFAULT         reduce using rule 17 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    CASE            reduce using rule 17 (asignacion -> VAR VARIABLE FLOAT IGUAL expresion .)
    SUMA            shift and go to state 32
    RESTA           shift and go to state 33
    PRODUCTO        shift and go to state 34
    DIVISION        shift and go to state 35
    MODULO          shift and go to state 36


state 142

    (18) asignacion -> VAR VARIABLE STRING IGUAL CADENA .

    $end            reduce using rule 18 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    RETURN          reduce using rule 18 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    LLAVERIGHT      reduce using rule 18 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    DEFAULT         reduce using rule 18 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)
    CASE            reduce using rule 18 (asignacion -> VAR VARIABLE STRING IGUAL CADENA .)


state 143

    (19) asignacion -> VAR VARIABLE puntero IGUAL refer .

    $end            reduce using rule 19 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    RETURN          reduce using rule 19 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    LLAVERIGHT      reduce using rule 19 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    DEFAULT         reduce using rule 19 (asignacion -> VAR VARIABLE puntero IGUAL refer .)
    CASE            reduce using rule 19 (asignacion -> VAR VARIABLE puntero IGUAL refer .)


state 144

    (72) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT . typeData
    (67) typeData -> . BOOL
    (68) typeData -> . INT
    (69) typeData -> . FLOAT
    (70) typeData -> . STRING

    BOOL            shift and go to state 154
    INT             shift and go to state 155
    FLOAT           shift and go to state 156
    STRING          shift and go to state 157

    typeData                       shift and go to state 158

state 145

    (33) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT
    (34) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT else

    VARIABLE        shift and go to state 159


state 146

    (35) sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT .
    (36) sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT . else
    (39) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (40) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (41) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) else -> . ELSE sentenciaIf

    $end            reduce using rule 35 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 35 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 35 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT .)
    DEFAULT         reduce using rule 35 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT .)
    CASE            reduce using rule 35 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT .)
    ELSE            shift and go to state 161

    else                           shift and go to state 160

state 147

    (37) sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE . LLAVERIGHT
    (38) sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 162


state 148

    (64) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA . incrementa LLAVELEFT instrucciones LLAVERIGHT
    (66) incrementa -> . VARIABLE INCREMENTO

    VARIABLE        shift and go to state 164

    incrementa                     shift and go to state 163

state 149

    (77) contPrint -> contPrint COMA contPrint .
    (77) contPrint -> contPrint . COMA contPrint

  ! shift/reduce conflict for COMA resolved as shift
    PARRIGHT        reduce using rule 77 (contPrint -> contPrint COMA contPrint .)
    COMA            shift and go to state 131

  ! COMA            [ reduce using rule 77 (contPrint -> contPrint COMA contPrint .) ]


state 150

    (43) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo . LLAVELEFT par LLAVERIGHT
    (44) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo . LLAVELEFT LLAVERIGHT

    LLAVELEFT       shift and go to state 165


state 151

    (98) bloque_switch -> CASE VARIABLE DOSPUNTOS . instrucciones
    (99) bloque_switch -> CASE VARIABLE DOSPUNTOS . instrucciones bloque_switch
    (100) bloque_switch -> CASE VARIABLE DOSPUNTOS . instrucciones switch_default
    (101) bloque_switch -> CASE VARIABLE DOSPUNTOS . instrucciones bloque_switch switch_default
    (3) instrucciones -> . asignacion
    (4) instrucciones -> . expresion
    (5) instrucciones -> . condiciones
    (6) instrucciones -> . sentenciaIf
    (7) instrucciones -> . sentenciaFor
    (8) instrucciones -> . print
    (9) instrucciones -> . mapa
    (10) instrucciones -> . puntero
    (11) instrucciones -> . lectura
    (12) instrucciones -> . array
    (13) instrucciones -> . switch
    (14) instrucciones -> . arrayAsig
    (15) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (16) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (18) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (19) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (20) asignacion -> . VAR VARIABLE puntero
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . derefer IGUAL valor
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (104) condiciones -> . factor MAYORQUE factor
    (105) condiciones -> . factor MENORQUE factor
    (106) condiciones -> . factor DIFERENTE factor
    (107) condiciones -> . factor ESIGUAL factor
    (108) condiciones -> . factor MENORIGUAL factor
    (109) condiciones -> . factor MAYORIGUAL factor
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (36) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (37) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (64) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (73) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (43) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO BOOL
    (59) puntero -> . PRODUCTO INT
    (60) puntero -> . PRODUCTO FLOAT
    (61) puntero -> . PRODUCTO STRING
    (78) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (71) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (97) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (72) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (63) derefer -> . PRODUCTO VARIABLE
    (88) term -> . numericos
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 17
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 15
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 166
    asignacion                     shift and go to state 4
    expresion                      shift and go to state 5
    condiciones                    shift and go to state 6
    sentenciaIf                    shift and go to state 7
    sentenciaFor                   shift and go to state 8
    print                          shift and go to state 9
    mapa                           shift and go to state 10
    puntero                        shift and go to state 11
    lectura                        shift and go to state 12
    array                          shift and go to state 13
    switch                         shift and go to state 127
    arrayAsig                      shift and go to state 14
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    numericos                      shift and go to state 30

state 152

    (103) switch_default -> DEFAULT DOSPUNTOS instrucciones .

    LLAVERIGHT      reduce using rule 103 (switch_default -> DEFAULT DOSPUNTOS instrucciones .)
    DEFAULT         reduce using rule 103 (switch_default -> DEFAULT DOSPUNTOS instrucciones .)


state 153

    (71) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData . LLAVELEFT contArray LLAVERIGHT

    LLAVELEFT       shift and go to state 167


state 154

    (67) typeData -> BOOL .

    LLAVELEFT       reduce using rule 67 (typeData -> BOOL .)
    $end            reduce using rule 67 (typeData -> BOOL .)
    RETURN          reduce using rule 67 (typeData -> BOOL .)
    LLAVERIGHT      reduce using rule 67 (typeData -> BOOL .)
    DEFAULT         reduce using rule 67 (typeData -> BOOL .)
    CASE            reduce using rule 67 (typeData -> BOOL .)


state 155

    (68) typeData -> INT .

    LLAVELEFT       reduce using rule 68 (typeData -> INT .)
    $end            reduce using rule 68 (typeData -> INT .)
    RETURN          reduce using rule 68 (typeData -> INT .)
    LLAVERIGHT      reduce using rule 68 (typeData -> INT .)
    DEFAULT         reduce using rule 68 (typeData -> INT .)
    CASE            reduce using rule 68 (typeData -> INT .)


state 156

    (69) typeData -> FLOAT .

    LLAVELEFT       reduce using rule 69 (typeData -> FLOAT .)
    $end            reduce using rule 69 (typeData -> FLOAT .)
    RETURN          reduce using rule 69 (typeData -> FLOAT .)
    LLAVERIGHT      reduce using rule 69 (typeData -> FLOAT .)
    DEFAULT         reduce using rule 69 (typeData -> FLOAT .)
    CASE            reduce using rule 69 (typeData -> FLOAT .)


state 157

    (70) typeData -> STRING .

    LLAVELEFT       reduce using rule 70 (typeData -> STRING .)
    $end            reduce using rule 70 (typeData -> STRING .)
    RETURN          reduce using rule 70 (typeData -> STRING .)
    LLAVERIGHT      reduce using rule 70 (typeData -> STRING .)
    DEFAULT         reduce using rule 70 (typeData -> STRING .)
    CASE            reduce using rule 70 (typeData -> STRING .)


state 158

    (72) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .

    $end            reduce using rule 72 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    RETURN          reduce using rule 72 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 72 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    DEFAULT         reduce using rule 72 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    CASE            reduce using rule 72 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)


state 159

    (33) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT
    (34) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT else

    LLAVERIGHT      shift and go to state 168


state 160

    (36) sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else .

    $end            reduce using rule 36 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else .)
    RETURN          reduce using rule 36 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 36 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else .)
    DEFAULT         reduce using rule 36 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else .)
    CASE            reduce using rule 36 (sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else .)


state 161

    (39) else -> ELSE . LLAVELEFT instrucciones LLAVERIGHT
    (40) else -> ELSE . LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (41) else -> ELSE . LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) else -> ELSE . sentenciaIf
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (36) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (37) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else

    LLAVELEFT       shift and go to state 169
    IF              shift and go to state 23

    sentenciaIf                    shift and go to state 170

state 162

    (37) sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT .
    (38) sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT . else
    (39) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (40) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (41) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) else -> . ELSE sentenciaIf

    $end            reduce using rule 37 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 37 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 37 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    DEFAULT         reduce using rule 37 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CASE            reduce using rule 37 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 161

    else                           shift and go to state 171

state 163

    (64) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa . LLAVELEFT instrucciones LLAVERIGHT

    LLAVELEFT       shift and go to state 172


state 164

    (66) incrementa -> VARIABLE . INCREMENTO

    INCREMENTO      shift and go to state 173


state 165

    (43) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT . par LLAVERIGHT
    (44) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT . LLAVERIGHT
    (45) par -> . dato DOSPUNTOS dato
    (46) par -> . dato DOSPUNTOS dato mas
    (53) dato -> . VARIABLE
    (54) dato -> . expresion
    (55) dato -> . CADENA
    (56) dato -> . TRUE
    (57) dato -> . FALSE
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    LLAVERIGHT      shift and go to state 175
    VARIABLE        shift and go to state 177
    CADENA          shift and go to state 179
    TRUE            shift and go to state 180
    FALSE           shift and go to state 181
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    par                            shift and go to state 174
    dato                           shift and go to state 176
    expresion                      shift and go to state 178
    term                           shift and go to state 20
    numericos                      shift and go to state 60

state 166

    (98) bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones .
    (99) bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones . bloque_switch
    (100) bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones . switch_default
    (101) bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones . bloque_switch switch_default
    (98) bloque_switch -> . CASE VARIABLE DOSPUNTOS instrucciones
    (99) bloque_switch -> . CASE VARIABLE DOSPUNTOS instrucciones bloque_switch
    (100) bloque_switch -> . CASE VARIABLE DOSPUNTOS instrucciones switch_default
    (101) bloque_switch -> . CASE VARIABLE DOSPUNTOS instrucciones bloque_switch switch_default
    (102) bloque_switch -> . switch_default
    (103) switch_default -> . DEFAULT DOSPUNTOS instrucciones

  ! shift/reduce conflict for DEFAULT resolved as shift
    LLAVERIGHT      reduce using rule 98 (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones .)
    CASE            shift and go to state 114
    DEFAULT         shift and go to state 116

  ! DEFAULT         [ reduce using rule 98 (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones .) ]

    bloque_switch                  shift and go to state 182
    switch_default                 shift and go to state 183

state 167

    (71) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT . contArray LLAVERIGHT
    (80) contArray -> . contArray COMA numericos
    (87) contArray -> . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    contArray                      shift and go to state 184
    numericos                      shift and go to state 60
    term                           shift and go to state 185

state 168

    (33) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .
    (34) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT . else
    (39) else -> . ELSE LLAVELEFT instrucciones LLAVERIGHT
    (40) else -> . ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (41) else -> . ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (42) else -> . ELSE sentenciaIf

    $end            reduce using rule 33 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 33 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 33 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    DEFAULT         reduce using rule 33 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CASE            reduce using rule 33 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    ELSE            shift and go to state 161

    else                           shift and go to state 186

state 169

    (39) else -> ELSE LLAVELEFT . instrucciones LLAVERIGHT
    (40) else -> ELSE LLAVELEFT . instrucciones RETURN VARIABLE LLAVERIGHT
    (41) else -> ELSE LLAVELEFT . RETURN VARIABLE LLAVERIGHT
    (3) instrucciones -> . asignacion
    (4) instrucciones -> . expresion
    (5) instrucciones -> . condiciones
    (6) instrucciones -> . sentenciaIf
    (7) instrucciones -> . sentenciaFor
    (8) instrucciones -> . print
    (9) instrucciones -> . mapa
    (10) instrucciones -> . puntero
    (11) instrucciones -> . lectura
    (12) instrucciones -> . array
    (13) instrucciones -> . switch
    (14) instrucciones -> . arrayAsig
    (15) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (16) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (18) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (19) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (20) asignacion -> . VAR VARIABLE puntero
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . derefer IGUAL valor
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (104) condiciones -> . factor MAYORQUE factor
    (105) condiciones -> . factor MENORQUE factor
    (106) condiciones -> . factor DIFERENTE factor
    (107) condiciones -> . factor ESIGUAL factor
    (108) condiciones -> . factor MENORIGUAL factor
    (109) condiciones -> . factor MAYORIGUAL factor
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (36) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (37) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (64) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (73) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (43) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO BOOL
    (59) puntero -> . PRODUCTO INT
    (60) puntero -> . PRODUCTO FLOAT
    (61) puntero -> . PRODUCTO STRING
    (78) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (71) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (97) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (72) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (63) derefer -> . PRODUCTO VARIABLE
    (88) term -> . numericos
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    RETURN          shift and go to state 188
    VAR             shift and go to state 17
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 15
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    instrucciones                  shift and go to state 187
    asignacion                     shift and go to state 4
    expresion                      shift and go to state 5
    condiciones                    shift and go to state 6
    sentenciaIf                    shift and go to state 7
    sentenciaFor                   shift and go to state 8
    print                          shift and go to state 9
    mapa                           shift and go to state 10
    puntero                        shift and go to state 11
    lectura                        shift and go to state 12
    array                          shift and go to state 13
    switch                         shift and go to state 127
    arrayAsig                      shift and go to state 14
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    numericos                      shift and go to state 30

state 170

    (42) else -> ELSE sentenciaIf .

    $end            reduce using rule 42 (else -> ELSE sentenciaIf .)
    RETURN          reduce using rule 42 (else -> ELSE sentenciaIf .)
    LLAVERIGHT      reduce using rule 42 (else -> ELSE sentenciaIf .)
    DEFAULT         reduce using rule 42 (else -> ELSE sentenciaIf .)
    CASE            reduce using rule 42 (else -> ELSE sentenciaIf .)


state 171

    (38) sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 38 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 38 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 38 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    DEFAULT         reduce using rule 38 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)
    CASE            reduce using rule 38 (sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else .)


state 172

    (64) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT . instrucciones LLAVERIGHT
    (3) instrucciones -> . asignacion
    (4) instrucciones -> . expresion
    (5) instrucciones -> . condiciones
    (6) instrucciones -> . sentenciaIf
    (7) instrucciones -> . sentenciaFor
    (8) instrucciones -> . print
    (9) instrucciones -> . mapa
    (10) instrucciones -> . puntero
    (11) instrucciones -> . lectura
    (12) instrucciones -> . array
    (13) instrucciones -> . switch
    (14) instrucciones -> . arrayAsig
    (15) asignacion -> . VAR VARIABLE BOOL IGUAL booleano
    (16) asignacion -> . VAR VARIABLE INT IGUAL expresion
    (17) asignacion -> . VAR VARIABLE FLOAT IGUAL expresion
    (18) asignacion -> . VAR VARIABLE STRING IGUAL CADENA
    (19) asignacion -> . VAR VARIABLE puntero IGUAL refer
    (20) asignacion -> . VAR VARIABLE puntero
    (21) asignacion -> . VARIABLE DECLARADOR valor
    (22) asignacion -> . VARIABLE IGUAL valor
    (23) asignacion -> . derefer IGUAL valor
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (104) condiciones -> . factor MAYORQUE factor
    (105) condiciones -> . factor MENORQUE factor
    (106) condiciones -> . factor DIFERENTE factor
    (107) condiciones -> . factor ESIGUAL factor
    (108) condiciones -> . factor MENORIGUAL factor
    (109) condiciones -> . factor MAYORIGUAL factor
    (33) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT
    (34) sentenciaIf -> . IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else
    (35) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT
    (36) sentenciaIf -> . IF condicion LLAVELEFT instrucciones LLAVERIGHT else
    (37) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT
    (38) sentenciaIf -> . IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else
    (64) sentenciaFor -> . FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (73) print -> . IMPRIMIR PARLEFT contPrint PARRIGHT
    (43) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT
    (44) mapa -> . MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT
    (58) puntero -> . PRODUCTO BOOL
    (59) puntero -> . PRODUCTO INT
    (60) puntero -> . PRODUCTO FLOAT
    (61) puntero -> . PRODUCTO STRING
    (78) lectura -> . SCAN PARLEFT contScan PARRIGHT
    (71) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (97) switch -> . SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT
    (72) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (63) derefer -> . PRODUCTO VARIABLE
    (88) term -> . numericos
    (89) factor -> . numericos
    (90) factor -> . VARIABLE
    (115) factor -> . BOOL
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VAR             shift and go to state 17
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    FOR             shift and go to state 24
    IMPRIMIR        shift and go to state 25
    MAP             shift and go to state 27
    PRODUCTO        shift and go to state 21
    SCAN            shift and go to state 28
    SWITCH          shift and go to state 15
    BOOL            shift and go to state 18
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    condiciones                    shift and go to state 6
    instrucciones                  shift and go to state 189
    asignacion                     shift and go to state 4
    expresion                      shift and go to state 5
    sentenciaIf                    shift and go to state 7
    sentenciaFor                   shift and go to state 8
    print                          shift and go to state 9
    mapa                           shift and go to state 10
    puntero                        shift and go to state 11
    lectura                        shift and go to state 12
    array                          shift and go to state 13
    switch                         shift and go to state 127
    arrayAsig                      shift and go to state 14
    derefer                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 22
    numericos                      shift and go to state 30

state 173

    (66) incrementa -> VARIABLE INCREMENTO .

    LLAVELEFT       reduce using rule 66 (incrementa -> VARIABLE INCREMENTO .)


state 174

    (43) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par . LLAVERIGHT

    LLAVERIGHT      shift and go to state 190


state 175

    (44) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .

    $end            reduce using rule 44 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    RETURN          reduce using rule 44 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 44 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    DEFAULT         reduce using rule 44 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)
    CASE            reduce using rule 44 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT .)


state 176

    (45) par -> dato . DOSPUNTOS dato
    (46) par -> dato . DOSPUNTOS dato mas

    DOSPUNTOS       shift and go to state 191


state 177

    (53) dato -> VARIABLE .

    DOSPUNTOS       reduce using rule 53 (dato -> VARIABLE .)
    COMA            reduce using rule 53 (dato -> VARIABLE .)
    LLAVERIGHT      reduce using rule 53 (dato -> VARIABLE .)


state 178

    (54) dato -> expresion .
    (81) expresion -> expresion . SUMA term
    (82) expresion -> expresion . RESTA term
    (83) expresion -> expresion . PRODUCTO term
    (84) expresion -> expresion . DIVISION term
    (85) expresion -> expresion . MODULO term

    DOSPUNTOS       reduce using rule 54 (dato -> expresion .)
    COMA            reduce using rule 54 (dato -> expresion .)
    LLAVERIGHT      reduce using rule 54 (dato -> expresion .)
    SUMA            shift and go to state 32
    RESTA           shift and go to state 33
    PRODUCTO        shift and go to state 34
    DIVISION        shift and go to state 35
    MODULO          shift and go to state 36


state 179

    (55) dato -> CADENA .

    DOSPUNTOS       reduce using rule 55 (dato -> CADENA .)
    COMA            reduce using rule 55 (dato -> CADENA .)
    LLAVERIGHT      reduce using rule 55 (dato -> CADENA .)


state 180

    (56) dato -> TRUE .

    DOSPUNTOS       reduce using rule 56 (dato -> TRUE .)
    COMA            reduce using rule 56 (dato -> TRUE .)
    LLAVERIGHT      reduce using rule 56 (dato -> TRUE .)


state 181

    (57) dato -> FALSE .

    DOSPUNTOS       reduce using rule 57 (dato -> FALSE .)
    COMA            reduce using rule 57 (dato -> FALSE .)
    LLAVERIGHT      reduce using rule 57 (dato -> FALSE .)


state 182

    (99) bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones bloque_switch .
    (101) bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones bloque_switch . switch_default
    (103) switch_default -> . DEFAULT DOSPUNTOS instrucciones

  ! shift/reduce conflict for DEFAULT resolved as shift
    LLAVERIGHT      reduce using rule 99 (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones bloque_switch .)
    DEFAULT         shift and go to state 116

  ! DEFAULT         [ reduce using rule 99 (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones bloque_switch .) ]

    switch_default                 shift and go to state 192

state 183

    (100) bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones switch_default .
    (102) bloque_switch -> switch_default .

  ! reduce/reduce conflict for DEFAULT resolved using rule 100 (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones switch_default .)
  ! reduce/reduce conflict for LLAVERIGHT resolved using rule 100 (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones switch_default .)
    LLAVERIGHT      reduce using rule 100 (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones switch_default .)
    DEFAULT         reduce using rule 100 (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones switch_default .)

  ! DEFAULT         [ reduce using rule 102 (bloque_switch -> switch_default .) ]
  ! LLAVERIGHT      [ reduce using rule 102 (bloque_switch -> switch_default .) ]


state 184

    (71) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray . LLAVERIGHT
    (80) contArray -> contArray . COMA numericos

    LLAVERIGHT      shift and go to state 193
    COMA            shift and go to state 194


state 185

    (87) contArray -> term .

    LLAVERIGHT      reduce using rule 87 (contArray -> term .)
    COMA            reduce using rule 87 (contArray -> term .)


state 186

    (34) sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .

    $end            reduce using rule 34 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    RETURN          reduce using rule 34 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    LLAVERIGHT      reduce using rule 34 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    DEFAULT         reduce using rule 34 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)
    CASE            reduce using rule 34 (sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else .)


state 187

    (39) else -> ELSE LLAVELEFT instrucciones . LLAVERIGHT
    (40) else -> ELSE LLAVELEFT instrucciones . RETURN VARIABLE LLAVERIGHT

    LLAVERIGHT      shift and go to state 195
    RETURN          shift and go to state 196


state 188

    (41) else -> ELSE LLAVELEFT RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 197


state 189

    (64) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones . LLAVERIGHT

    LLAVERIGHT      shift and go to state 198


state 190

    (43) mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .

    $end            reduce using rule 43 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    RETURN          reduce using rule 43 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 43 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    DEFAULT         reduce using rule 43 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)
    CASE            reduce using rule 43 (mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT .)


state 191

    (45) par -> dato DOSPUNTOS . dato
    (46) par -> dato DOSPUNTOS . dato mas
    (53) dato -> . VARIABLE
    (54) dato -> . expresion
    (55) dato -> . CADENA
    (56) dato -> . TRUE
    (57) dato -> . FALSE
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 177
    CADENA          shift and go to state 179
    TRUE            shift and go to state 180
    FALSE           shift and go to state 181
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    dato                           shift and go to state 199
    expresion                      shift and go to state 178
    term                           shift and go to state 20
    numericos                      shift and go to state 60

state 192

    (101) bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones bloque_switch switch_default .

    LLAVERIGHT      reduce using rule 101 (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones bloque_switch switch_default .)
    DEFAULT         reduce using rule 101 (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones bloque_switch switch_default .)


state 193

    (71) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .

    $end            reduce using rule 71 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    RETURN          reduce using rule 71 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 71 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    DEFAULT         reduce using rule 71 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    CASE            reduce using rule 71 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)


state 194

    (80) contArray -> contArray COMA . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    numericos                      shift and go to state 200

state 195

    (39) else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 39 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 39 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 39 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    DEFAULT         reduce using rule 39 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)
    CASE            reduce using rule 39 (else -> ELSE LLAVELEFT instrucciones LLAVERIGHT .)


state 196

    (40) else -> ELSE LLAVELEFT instrucciones RETURN . VARIABLE LLAVERIGHT

    VARIABLE        shift and go to state 201


state 197

    (41) else -> ELSE LLAVELEFT RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 202


state 198

    (64) sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 64 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    RETURN          reduce using rule 64 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 64 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    DEFAULT         reduce using rule 64 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    CASE            reduce using rule 64 (sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)


state 199

    (45) par -> dato DOSPUNTOS dato .
    (46) par -> dato DOSPUNTOS dato . mas
    (47) mas -> . COMA par
    (48) mas -> . COMA par mas

  ! shift/reduce conflict for COMA resolved as shift
    LLAVERIGHT      reduce using rule 45 (par -> dato DOSPUNTOS dato .)
    COMA            shift and go to state 204

  ! COMA            [ reduce using rule 45 (par -> dato DOSPUNTOS dato .) ]

    mas                            shift and go to state 203

state 200

    (80) contArray -> contArray COMA numericos .

    LLAVERIGHT      reduce using rule 80 (contArray -> contArray COMA numericos .)
    COMA            reduce using rule 80 (contArray -> contArray COMA numericos .)


state 201

    (40) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE . LLAVERIGHT

    LLAVERIGHT      shift and go to state 205


state 202

    (41) else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 41 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 41 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 41 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    DEFAULT         reduce using rule 41 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)
    CASE            reduce using rule 41 (else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT .)


state 203

    (46) par -> dato DOSPUNTOS dato mas .

    LLAVERIGHT      reduce using rule 46 (par -> dato DOSPUNTOS dato mas .)
    COMA            reduce using rule 46 (par -> dato DOSPUNTOS dato mas .)


state 204

    (47) mas -> COMA . par
    (48) mas -> COMA . par mas
    (45) par -> . dato DOSPUNTOS dato
    (46) par -> . dato DOSPUNTOS dato mas
    (53) dato -> . VARIABLE
    (54) dato -> . expresion
    (55) dato -> . CADENA
    (56) dato -> . TRUE
    (57) dato -> . FALSE
    (81) expresion -> . expresion SUMA term
    (82) expresion -> . expresion RESTA term
    (83) expresion -> . expresion PRODUCTO term
    (84) expresion -> . expresion DIVISION term
    (85) expresion -> . expresion MODULO term
    (86) expresion -> . term
    (88) term -> . numericos
    (91) numericos -> . ENTERO
    (92) numericos -> . FLOTANTE
    (93) numericos -> . PARLEFT expresion PARRIGHT

    VARIABLE        shift and go to state 177
    CADENA          shift and go to state 179
    TRUE            shift and go to state 180
    FALSE           shift and go to state 181
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 31
    PARLEFT         shift and go to state 26

    par                            shift and go to state 206
    dato                           shift and go to state 176
    expresion                      shift and go to state 178
    term                           shift and go to state 20
    numericos                      shift and go to state 60

state 205

    (40) else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .

    $end            reduce using rule 40 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    RETURN          reduce using rule 40 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 40 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    DEFAULT         reduce using rule 40 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)
    CASE            reduce using rule 40 (else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT .)


state 206

    (47) mas -> COMA par .
    (48) mas -> COMA par . mas
    (47) mas -> . COMA par
    (48) mas -> . COMA par mas

  ! shift/reduce conflict for COMA resolved as shift
    LLAVERIGHT      reduce using rule 47 (mas -> COMA par .)
    COMA            shift and go to state 204

  ! COMA            [ reduce using rule 47 (mas -> COMA par .) ]

    mas                            shift and go to state 207

state 207

    (48) mas -> COMA par mas .

    COMA            reduce using rule 48 (mas -> COMA par mas .)
    LLAVERIGHT      reduce using rule 48 (mas -> COMA par mas .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMA in state 149 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 166 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 182 resolved as shift
WARNING: shift/reduce conflict for COMA in state 199 resolved as shift
WARNING: shift/reduce conflict for COMA in state 206 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (golang -> switch)
WARNING: rejected rule (instrucciones -> switch) in state 3
WARNING: reduce/reduce conflict in state 103 resolved using rule (contPrint -> VARIABLE)
WARNING: rejected rule (factor -> VARIABLE) in state 103
WARNING: reduce/reduce conflict in state 183 resolved using rule (bloque_switch -> CASE VARIABLE DOSPUNTOS instrucciones switch_default)
WARNING: rejected rule (bloque_switch -> switch_default) in state 183
