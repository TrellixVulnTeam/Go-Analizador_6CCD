Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BARRAINVERSA
    BREAK
    CADENA
    CASE
    CHAN
    COMENTARIO
    CONST
    CONTINUE
    DEFAULT
    DEFER
    DOSPUNTOS
    ELSE
    ESPACIO
    FALLTHROUGH
    FALSE
    FUNC
    GO
    GOTO
    IF
    IGUAL
    IMPORT
    IMPRIMIR
    INTERFACE
    MAP
    MASIGUAL
    MENOSIGUAL
    PACKAGE
    RANGE
    RETURN
    SELECT
    STRUCT
    SWITCH
    TRUE
    TYPE

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> expresion
Rule 2     instrucciones -> condicion
Rule 3     instrucciones -> sentenciaFor
Rule 4     instrucciones -> inicio
Rule 5     instrucciones -> array
Rule 6     instrucciones -> arrayAsig
Rule 7     sentenciaFor -> FOR inicio PUNTOCOMA condicion PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
Rule 8     inicio -> VARIABLE DECLARADOR ENTERO
Rule 9     condicion -> termc comparador termc
Rule 10    incrementa -> VARIABLE INCREMENTO
Rule 11    typeData -> BOOL
Rule 12    typeData -> INT
Rule 13    typeData -> FLOAT
Rule 14    typeData -> STRING
Rule 15    array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
Rule 16    arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
Rule 17    contArray -> contArray COMA numericos
Rule 18    comparador -> MAYORQUE
Rule 19    comparador -> MENORQUE
Rule 20    comparador -> ESIGUAL
Rule 21    comparador -> MAYORIGUAL
Rule 22    comparador -> MENORIGUAL
Rule 23    expresion -> expresion SUMA numericos
Rule 24    expresion -> expresion RESTA numericos
Rule 25    expresion -> expresion PRODUCTO numericos
Rule 26    expresion -> expresion DIVISION numericos
Rule 27    expresion -> expresion MODULO numericos
Rule 28    expresion -> term
Rule 29    contArray -> term
Rule 30    term -> numericos
Rule 31    termc -> VARIABLE
Rule 32    termc -> numericos
Rule 33    factor -> VARIABLE
Rule 34    numericos -> ENTERO
Rule 35    numericos -> FLOTANTE
Rule 36    factor -> BOOL
Rule 37    comparacion -> condiciones
Rule 38    comparacion -> NEGACION PARLEFT condiciones PARRIGHT
Rule 39    comparacion -> PARLEFT condiciones PARRIGHT
Rule 40    condiciones -> factor MAYORQUE factor
Rule 41    condiciones -> factor MENORQUE factor
Rule 42    condiciones -> factor DIFERENTE factor
Rule 43    condiciones -> factor ESIGUAL factor
Rule 44    condiciones -> factor MENORIGUAL factor
Rule 45    condiciones -> factor MAYORIGUAL factor
Rule 46    comparaciones -> comparacion
Rule 47    comparaciones -> comparacion anado comparaciones
Rule 48    anado -> condicion
Rule 49    condicion -> AND
Rule 50    condicion -> OR

Terminals, with rules where they appear

AND                  : 49
BARRAINVERSA         : 
BOOL                 : 11 36
BREAK                : 
CADENA               : 
CASE                 : 
CHAN                 : 
COMA                 : 17
COMENTARIO           : 
CONST                : 
CONTINUE             : 
CORCHLEFT            : 15 16
CORCHRIGHT           : 15 16
DECLARADOR           : 8 15
DEFAULT              : 
DEFER                : 
DIFERENTE            : 42
DIVISION             : 26
DOSPUNTOS            : 
ELSE                 : 
ENTERO               : 8 15 16 34
ESIGUAL              : 20 43
ESPACIO              : 
FALLTHROUGH          : 
FALSE                : 
FLOAT                : 13
FLOTANTE             : 35
FOR                  : 7
FUNC                 : 
GO                   : 
GOTO                 : 
IF                   : 
IGUAL                : 
IMPORT               : 
IMPRIMIR             : 
INCREMENTO           : 10
INT                  : 12
INTERFACE            : 
LLAVELEFT            : 7 15
LLAVERIGHT           : 7 15
MAP                  : 
MASIGUAL             : 
MAYORIGUAL           : 21 45
MAYORQUE             : 18 40
MENORIGUAL           : 22 44
MENORQUE             : 19 41
MENOSIGUAL           : 
MODULO               : 27
NEGACION             : 38
OR                   : 50
PACKAGE              : 
PARLEFT              : 38 39
PARRIGHT             : 38 39
PRODUCTO             : 25
PUNTOCOMA            : 7 7
RANGE                : 
RESTA                : 24
RETURN               : 
SELECT               : 
STRING               : 14
STRUCT               : 
SUMA                 : 23
SWITCH               : 
TRUE                 : 
TYPE                 : 
VAR                  : 16
VARIABLE             : 8 10 15 16 31 33
error                : 

Nonterminals, with rules where they appear

anado                : 47
array                : 5
arrayAsig            : 6
comparacion          : 46 47
comparaciones        : 47
comparador           : 9
condicion            : 2 7 48
condiciones          : 37 38 39
contArray            : 15 17
expresion            : 1 23 24 25 26 27
factor               : 40 40 41 41 42 42 43 43 44 44 45 45
incrementa           : 7
inicio               : 4 7
instrucciones        : 7 0
numericos            : 17 23 24 25 26 27 30 32
sentenciaFor         : 3
term                 : 28 29
termc                : 9 9
typeData             : 15 16

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . expresion
    (2) instrucciones -> . condicion
    (3) instrucciones -> . sentenciaFor
    (4) instrucciones -> . inicio
    (5) instrucciones -> . array
    (6) instrucciones -> . arrayAsig
    (23) expresion -> . expresion SUMA numericos
    (24) expresion -> . expresion RESTA numericos
    (25) expresion -> . expresion PRODUCTO numericos
    (26) expresion -> . expresion DIVISION numericos
    (27) expresion -> . expresion MODULO numericos
    (28) expresion -> . term
    (9) condicion -> . termc comparador termc
    (49) condicion -> . AND
    (50) condicion -> . OR
    (7) sentenciaFor -> . FOR inicio PUNTOCOMA condicion PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (8) inicio -> . VARIABLE DECLARADOR ENTERO
    (15) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (16) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (30) term -> . numericos
    (31) termc -> . VARIABLE
    (32) termc -> . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    AND             shift and go to state 11
    OR              shift and go to state 12
    FOR             shift and go to state 13
    VARIABLE        shift and go to state 14
    VAR             shift and go to state 16
    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    instrucciones                  shift and go to state 1
    expresion                      shift and go to state 2
    condicion                      shift and go to state 3
    sentenciaFor                   shift and go to state 4
    inicio                         shift and go to state 5
    array                          shift and go to state 6
    arrayAsig                      shift and go to state 7
    numericos                      shift and go to state 8
    term                           shift and go to state 9
    termc                          shift and go to state 10

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> expresion .
    (23) expresion -> expresion . SUMA numericos
    (24) expresion -> expresion . RESTA numericos
    (25) expresion -> expresion . PRODUCTO numericos
    (26) expresion -> expresion . DIVISION numericos
    (27) expresion -> expresion . MODULO numericos

    $end            reduce using rule 1 (instrucciones -> expresion .)
    LLAVERIGHT      reduce using rule 1 (instrucciones -> expresion .)
    SUMA            shift and go to state 18
    RESTA           shift and go to state 19
    PRODUCTO        shift and go to state 20
    DIVISION        shift and go to state 21
    MODULO          shift and go to state 22


state 3

    (2) instrucciones -> condicion .

    $end            reduce using rule 2 (instrucciones -> condicion .)
    LLAVERIGHT      reduce using rule 2 (instrucciones -> condicion .)


state 4

    (3) instrucciones -> sentenciaFor .

    $end            reduce using rule 3 (instrucciones -> sentenciaFor .)
    LLAVERIGHT      reduce using rule 3 (instrucciones -> sentenciaFor .)


state 5

    (4) instrucciones -> inicio .

    $end            reduce using rule 4 (instrucciones -> inicio .)
    LLAVERIGHT      reduce using rule 4 (instrucciones -> inicio .)


state 6

    (5) instrucciones -> array .

    $end            reduce using rule 5 (instrucciones -> array .)
    LLAVERIGHT      reduce using rule 5 (instrucciones -> array .)


state 7

    (6) instrucciones -> arrayAsig .

    $end            reduce using rule 6 (instrucciones -> arrayAsig .)
    LLAVERIGHT      reduce using rule 6 (instrucciones -> arrayAsig .)


state 8

    (30) term -> numericos .
    (32) termc -> numericos .

    SUMA            reduce using rule 30 (term -> numericos .)
    RESTA           reduce using rule 30 (term -> numericos .)
    PRODUCTO        reduce using rule 30 (term -> numericos .)
    DIVISION        reduce using rule 30 (term -> numericos .)
    MODULO          reduce using rule 30 (term -> numericos .)
    $end            reduce using rule 30 (term -> numericos .)
    LLAVERIGHT      reduce using rule 30 (term -> numericos .)
    MAYORQUE        reduce using rule 32 (termc -> numericos .)
    MENORQUE        reduce using rule 32 (termc -> numericos .)
    ESIGUAL         reduce using rule 32 (termc -> numericos .)
    MAYORIGUAL      reduce using rule 32 (termc -> numericos .)
    MENORIGUAL      reduce using rule 32 (termc -> numericos .)


state 9

    (28) expresion -> term .

    SUMA            reduce using rule 28 (expresion -> term .)
    RESTA           reduce using rule 28 (expresion -> term .)
    PRODUCTO        reduce using rule 28 (expresion -> term .)
    DIVISION        reduce using rule 28 (expresion -> term .)
    MODULO          reduce using rule 28 (expresion -> term .)
    $end            reduce using rule 28 (expresion -> term .)
    LLAVERIGHT      reduce using rule 28 (expresion -> term .)


state 10

    (9) condicion -> termc . comparador termc
    (18) comparador -> . MAYORQUE
    (19) comparador -> . MENORQUE
    (20) comparador -> . ESIGUAL
    (21) comparador -> . MAYORIGUAL
    (22) comparador -> . MENORIGUAL

    MAYORQUE        shift and go to state 24
    MENORQUE        shift and go to state 25
    ESIGUAL         shift and go to state 26
    MAYORIGUAL      shift and go to state 27
    MENORIGUAL      shift and go to state 28

    comparador                     shift and go to state 23

state 11

    (49) condicion -> AND .

    $end            reduce using rule 49 (condicion -> AND .)
    PUNTOCOMA       reduce using rule 49 (condicion -> AND .)
    LLAVERIGHT      reduce using rule 49 (condicion -> AND .)


state 12

    (50) condicion -> OR .

    $end            reduce using rule 50 (condicion -> OR .)
    PUNTOCOMA       reduce using rule 50 (condicion -> OR .)
    LLAVERIGHT      reduce using rule 50 (condicion -> OR .)


state 13

    (7) sentenciaFor -> FOR . inicio PUNTOCOMA condicion PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (8) inicio -> . VARIABLE DECLARADOR ENTERO

    VARIABLE        shift and go to state 30

    inicio                         shift and go to state 29

state 14

    (8) inicio -> VARIABLE . DECLARADOR ENTERO
    (15) array -> VARIABLE . DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (31) termc -> VARIABLE .

    DECLARADOR      shift and go to state 31
    MAYORQUE        reduce using rule 31 (termc -> VARIABLE .)
    MENORQUE        reduce using rule 31 (termc -> VARIABLE .)
    ESIGUAL         reduce using rule 31 (termc -> VARIABLE .)
    MAYORIGUAL      reduce using rule 31 (termc -> VARIABLE .)
    MENORIGUAL      reduce using rule 31 (termc -> VARIABLE .)


state 15

    (34) numericos -> ENTERO .

    SUMA            reduce using rule 34 (numericos -> ENTERO .)
    RESTA           reduce using rule 34 (numericos -> ENTERO .)
    PRODUCTO        reduce using rule 34 (numericos -> ENTERO .)
    DIVISION        reduce using rule 34 (numericos -> ENTERO .)
    MODULO          reduce using rule 34 (numericos -> ENTERO .)
    $end            reduce using rule 34 (numericos -> ENTERO .)
    MAYORQUE        reduce using rule 34 (numericos -> ENTERO .)
    MENORQUE        reduce using rule 34 (numericos -> ENTERO .)
    ESIGUAL         reduce using rule 34 (numericos -> ENTERO .)
    MAYORIGUAL      reduce using rule 34 (numericos -> ENTERO .)
    MENORIGUAL      reduce using rule 34 (numericos -> ENTERO .)
    LLAVERIGHT      reduce using rule 34 (numericos -> ENTERO .)
    PUNTOCOMA       reduce using rule 34 (numericos -> ENTERO .)
    COMA            reduce using rule 34 (numericos -> ENTERO .)


state 16

    (16) arrayAsig -> VAR . VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData

    VARIABLE        shift and go to state 32


state 17

    (35) numericos -> FLOTANTE .

    SUMA            reduce using rule 35 (numericos -> FLOTANTE .)
    RESTA           reduce using rule 35 (numericos -> FLOTANTE .)
    PRODUCTO        reduce using rule 35 (numericos -> FLOTANTE .)
    DIVISION        reduce using rule 35 (numericos -> FLOTANTE .)
    MODULO          reduce using rule 35 (numericos -> FLOTANTE .)
    $end            reduce using rule 35 (numericos -> FLOTANTE .)
    MAYORQUE        reduce using rule 35 (numericos -> FLOTANTE .)
    MENORQUE        reduce using rule 35 (numericos -> FLOTANTE .)
    ESIGUAL         reduce using rule 35 (numericos -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 35 (numericos -> FLOTANTE .)
    MENORIGUAL      reduce using rule 35 (numericos -> FLOTANTE .)
    LLAVERIGHT      reduce using rule 35 (numericos -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 35 (numericos -> FLOTANTE .)
    COMA            reduce using rule 35 (numericos -> FLOTANTE .)


state 18

    (23) expresion -> expresion SUMA . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    numericos                      shift and go to state 33

state 19

    (24) expresion -> expresion RESTA . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    numericos                      shift and go to state 34

state 20

    (25) expresion -> expresion PRODUCTO . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    numericos                      shift and go to state 35

state 21

    (26) expresion -> expresion DIVISION . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    numericos                      shift and go to state 36

state 22

    (27) expresion -> expresion MODULO . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    numericos                      shift and go to state 37

state 23

    (9) condicion -> termc comparador . termc
    (31) termc -> . VARIABLE
    (32) termc -> . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    VARIABLE        shift and go to state 39
    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    termc                          shift and go to state 38
    numericos                      shift and go to state 40

state 24

    (18) comparador -> MAYORQUE .

    VARIABLE        reduce using rule 18 (comparador -> MAYORQUE .)
    ENTERO          reduce using rule 18 (comparador -> MAYORQUE .)
    FLOTANTE        reduce using rule 18 (comparador -> MAYORQUE .)


state 25

    (19) comparador -> MENORQUE .

    VARIABLE        reduce using rule 19 (comparador -> MENORQUE .)
    ENTERO          reduce using rule 19 (comparador -> MENORQUE .)
    FLOTANTE        reduce using rule 19 (comparador -> MENORQUE .)


state 26

    (20) comparador -> ESIGUAL .

    VARIABLE        reduce using rule 20 (comparador -> ESIGUAL .)
    ENTERO          reduce using rule 20 (comparador -> ESIGUAL .)
    FLOTANTE        reduce using rule 20 (comparador -> ESIGUAL .)


state 27

    (21) comparador -> MAYORIGUAL .

    VARIABLE        reduce using rule 21 (comparador -> MAYORIGUAL .)
    ENTERO          reduce using rule 21 (comparador -> MAYORIGUAL .)
    FLOTANTE        reduce using rule 21 (comparador -> MAYORIGUAL .)


state 28

    (22) comparador -> MENORIGUAL .

    VARIABLE        reduce using rule 22 (comparador -> MENORIGUAL .)
    ENTERO          reduce using rule 22 (comparador -> MENORIGUAL .)
    FLOTANTE        reduce using rule 22 (comparador -> MENORIGUAL .)


state 29

    (7) sentenciaFor -> FOR inicio . PUNTOCOMA condicion PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 41


state 30

    (8) inicio -> VARIABLE . DECLARADOR ENTERO

    DECLARADOR      shift and go to state 42


state 31

    (8) inicio -> VARIABLE DECLARADOR . ENTERO
    (15) array -> VARIABLE DECLARADOR . CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    ENTERO          shift and go to state 43
    CORCHLEFT       shift and go to state 44


state 32

    (16) arrayAsig -> VAR VARIABLE . CORCHLEFT ENTERO CORCHRIGHT typeData

    CORCHLEFT       shift and go to state 45


state 33

    (23) expresion -> expresion SUMA numericos .

    SUMA            reduce using rule 23 (expresion -> expresion SUMA numericos .)
    RESTA           reduce using rule 23 (expresion -> expresion SUMA numericos .)
    PRODUCTO        reduce using rule 23 (expresion -> expresion SUMA numericos .)
    DIVISION        reduce using rule 23 (expresion -> expresion SUMA numericos .)
    MODULO          reduce using rule 23 (expresion -> expresion SUMA numericos .)
    $end            reduce using rule 23 (expresion -> expresion SUMA numericos .)
    LLAVERIGHT      reduce using rule 23 (expresion -> expresion SUMA numericos .)


state 34

    (24) expresion -> expresion RESTA numericos .

    SUMA            reduce using rule 24 (expresion -> expresion RESTA numericos .)
    RESTA           reduce using rule 24 (expresion -> expresion RESTA numericos .)
    PRODUCTO        reduce using rule 24 (expresion -> expresion RESTA numericos .)
    DIVISION        reduce using rule 24 (expresion -> expresion RESTA numericos .)
    MODULO          reduce using rule 24 (expresion -> expresion RESTA numericos .)
    $end            reduce using rule 24 (expresion -> expresion RESTA numericos .)
    LLAVERIGHT      reduce using rule 24 (expresion -> expresion RESTA numericos .)


state 35

    (25) expresion -> expresion PRODUCTO numericos .

    SUMA            reduce using rule 25 (expresion -> expresion PRODUCTO numericos .)
    RESTA           reduce using rule 25 (expresion -> expresion PRODUCTO numericos .)
    PRODUCTO        reduce using rule 25 (expresion -> expresion PRODUCTO numericos .)
    DIVISION        reduce using rule 25 (expresion -> expresion PRODUCTO numericos .)
    MODULO          reduce using rule 25 (expresion -> expresion PRODUCTO numericos .)
    $end            reduce using rule 25 (expresion -> expresion PRODUCTO numericos .)
    LLAVERIGHT      reduce using rule 25 (expresion -> expresion PRODUCTO numericos .)


state 36

    (26) expresion -> expresion DIVISION numericos .

    SUMA            reduce using rule 26 (expresion -> expresion DIVISION numericos .)
    RESTA           reduce using rule 26 (expresion -> expresion DIVISION numericos .)
    PRODUCTO        reduce using rule 26 (expresion -> expresion DIVISION numericos .)
    DIVISION        reduce using rule 26 (expresion -> expresion DIVISION numericos .)
    MODULO          reduce using rule 26 (expresion -> expresion DIVISION numericos .)
    $end            reduce using rule 26 (expresion -> expresion DIVISION numericos .)
    LLAVERIGHT      reduce using rule 26 (expresion -> expresion DIVISION numericos .)


state 37

    (27) expresion -> expresion MODULO numericos .

    SUMA            reduce using rule 27 (expresion -> expresion MODULO numericos .)
    RESTA           reduce using rule 27 (expresion -> expresion MODULO numericos .)
    PRODUCTO        reduce using rule 27 (expresion -> expresion MODULO numericos .)
    DIVISION        reduce using rule 27 (expresion -> expresion MODULO numericos .)
    MODULO          reduce using rule 27 (expresion -> expresion MODULO numericos .)
    $end            reduce using rule 27 (expresion -> expresion MODULO numericos .)
    LLAVERIGHT      reduce using rule 27 (expresion -> expresion MODULO numericos .)


state 38

    (9) condicion -> termc comparador termc .

    $end            reduce using rule 9 (condicion -> termc comparador termc .)
    PUNTOCOMA       reduce using rule 9 (condicion -> termc comparador termc .)
    LLAVERIGHT      reduce using rule 9 (condicion -> termc comparador termc .)


state 39

    (31) termc -> VARIABLE .

    $end            reduce using rule 31 (termc -> VARIABLE .)
    PUNTOCOMA       reduce using rule 31 (termc -> VARIABLE .)
    LLAVERIGHT      reduce using rule 31 (termc -> VARIABLE .)
    MAYORQUE        reduce using rule 31 (termc -> VARIABLE .)
    MENORQUE        reduce using rule 31 (termc -> VARIABLE .)
    ESIGUAL         reduce using rule 31 (termc -> VARIABLE .)
    MAYORIGUAL      reduce using rule 31 (termc -> VARIABLE .)
    MENORIGUAL      reduce using rule 31 (termc -> VARIABLE .)


state 40

    (32) termc -> numericos .

    $end            reduce using rule 32 (termc -> numericos .)
    PUNTOCOMA       reduce using rule 32 (termc -> numericos .)
    LLAVERIGHT      reduce using rule 32 (termc -> numericos .)
    MAYORQUE        reduce using rule 32 (termc -> numericos .)
    MENORQUE        reduce using rule 32 (termc -> numericos .)
    ESIGUAL         reduce using rule 32 (termc -> numericos .)
    MAYORIGUAL      reduce using rule 32 (termc -> numericos .)
    MENORIGUAL      reduce using rule 32 (termc -> numericos .)


state 41

    (7) sentenciaFor -> FOR inicio PUNTOCOMA . condicion PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (9) condicion -> . termc comparador termc
    (49) condicion -> . AND
    (50) condicion -> . OR
    (31) termc -> . VARIABLE
    (32) termc -> . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    AND             shift and go to state 11
    OR              shift and go to state 12
    VARIABLE        shift and go to state 39
    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    condicion                      shift and go to state 46
    termc                          shift and go to state 10
    numericos                      shift and go to state 40

state 42

    (8) inicio -> VARIABLE DECLARADOR . ENTERO

    ENTERO          shift and go to state 43


state 43

    (8) inicio -> VARIABLE DECLARADOR ENTERO .

    $end            reduce using rule 8 (inicio -> VARIABLE DECLARADOR ENTERO .)
    PUNTOCOMA       reduce using rule 8 (inicio -> VARIABLE DECLARADOR ENTERO .)
    LLAVERIGHT      reduce using rule 8 (inicio -> VARIABLE DECLARADOR ENTERO .)


state 44

    (15) array -> VARIABLE DECLARADOR CORCHLEFT . ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    ENTERO          shift and go to state 47


state 45

    (16) arrayAsig -> VAR VARIABLE CORCHLEFT . ENTERO CORCHRIGHT typeData

    ENTERO          shift and go to state 48


state 46

    (7) sentenciaFor -> FOR inicio PUNTOCOMA condicion . PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT

    PUNTOCOMA       shift and go to state 49


state 47

    (15) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO . CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT

    CORCHRIGHT      shift and go to state 50


state 48

    (16) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO . CORCHRIGHT typeData

    CORCHRIGHT      shift and go to state 51


state 49

    (7) sentenciaFor -> FOR inicio PUNTOCOMA condicion PUNTOCOMA . incrementa LLAVELEFT instrucciones LLAVERIGHT
    (10) incrementa -> . VARIABLE INCREMENTO

    VARIABLE        shift and go to state 53

    incrementa                     shift and go to state 52

state 50

    (15) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT . typeData LLAVELEFT contArray LLAVERIGHT
    (11) typeData -> . BOOL
    (12) typeData -> . INT
    (13) typeData -> . FLOAT
    (14) typeData -> . STRING

    BOOL            shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    typeData                       shift and go to state 54

state 51

    (16) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT . typeData
    (11) typeData -> . BOOL
    (12) typeData -> . INT
    (13) typeData -> . FLOAT
    (14) typeData -> . STRING

    BOOL            shift and go to state 55
    INT             shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    typeData                       shift and go to state 59

state 52

    (7) sentenciaFor -> FOR inicio PUNTOCOMA condicion PUNTOCOMA incrementa . LLAVELEFT instrucciones LLAVERIGHT

    LLAVELEFT       shift and go to state 60


state 53

    (10) incrementa -> VARIABLE . INCREMENTO

    INCREMENTO      shift and go to state 61


state 54

    (15) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData . LLAVELEFT contArray LLAVERIGHT

    LLAVELEFT       shift and go to state 62


state 55

    (11) typeData -> BOOL .

    LLAVELEFT       reduce using rule 11 (typeData -> BOOL .)
    $end            reduce using rule 11 (typeData -> BOOL .)
    LLAVERIGHT      reduce using rule 11 (typeData -> BOOL .)


state 56

    (12) typeData -> INT .

    LLAVELEFT       reduce using rule 12 (typeData -> INT .)
    $end            reduce using rule 12 (typeData -> INT .)
    LLAVERIGHT      reduce using rule 12 (typeData -> INT .)


state 57

    (13) typeData -> FLOAT .

    LLAVELEFT       reduce using rule 13 (typeData -> FLOAT .)
    $end            reduce using rule 13 (typeData -> FLOAT .)
    LLAVERIGHT      reduce using rule 13 (typeData -> FLOAT .)


state 58

    (14) typeData -> STRING .

    LLAVELEFT       reduce using rule 14 (typeData -> STRING .)
    $end            reduce using rule 14 (typeData -> STRING .)
    LLAVERIGHT      reduce using rule 14 (typeData -> STRING .)


state 59

    (16) arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .

    $end            reduce using rule 16 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)
    LLAVERIGHT      reduce using rule 16 (arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData .)


state 60

    (7) sentenciaFor -> FOR inicio PUNTOCOMA condicion PUNTOCOMA incrementa LLAVELEFT . instrucciones LLAVERIGHT
    (1) instrucciones -> . expresion
    (2) instrucciones -> . condicion
    (3) instrucciones -> . sentenciaFor
    (4) instrucciones -> . inicio
    (5) instrucciones -> . array
    (6) instrucciones -> . arrayAsig
    (23) expresion -> . expresion SUMA numericos
    (24) expresion -> . expresion RESTA numericos
    (25) expresion -> . expresion PRODUCTO numericos
    (26) expresion -> . expresion DIVISION numericos
    (27) expresion -> . expresion MODULO numericos
    (28) expresion -> . term
    (9) condicion -> . termc comparador termc
    (49) condicion -> . AND
    (50) condicion -> . OR
    (7) sentenciaFor -> . FOR inicio PUNTOCOMA condicion PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT
    (8) inicio -> . VARIABLE DECLARADOR ENTERO
    (15) array -> . VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT
    (16) arrayAsig -> . VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData
    (30) term -> . numericos
    (31) termc -> . VARIABLE
    (32) termc -> . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    AND             shift and go to state 11
    OR              shift and go to state 12
    FOR             shift and go to state 13
    VARIABLE        shift and go to state 14
    VAR             shift and go to state 16
    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    inicio                         shift and go to state 5
    condicion                      shift and go to state 3
    instrucciones                  shift and go to state 63
    expresion                      shift and go to state 2
    sentenciaFor                   shift and go to state 4
    array                          shift and go to state 6
    arrayAsig                      shift and go to state 7
    numericos                      shift and go to state 8
    term                           shift and go to state 9
    termc                          shift and go to state 10

state 61

    (10) incrementa -> VARIABLE INCREMENTO .

    LLAVELEFT       reduce using rule 10 (incrementa -> VARIABLE INCREMENTO .)


state 62

    (15) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT . contArray LLAVERIGHT
    (17) contArray -> . contArray COMA numericos
    (29) contArray -> . term
    (30) term -> . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    contArray                      shift and go to state 64
    numericos                      shift and go to state 65
    term                           shift and go to state 66

state 63

    (7) sentenciaFor -> FOR inicio PUNTOCOMA condicion PUNTOCOMA incrementa LLAVELEFT instrucciones . LLAVERIGHT

    LLAVERIGHT      shift and go to state 67


state 64

    (15) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray . LLAVERIGHT
    (17) contArray -> contArray . COMA numericos

    LLAVERIGHT      shift and go to state 68
    COMA            shift and go to state 69


state 65

    (30) term -> numericos .

    LLAVERIGHT      reduce using rule 30 (term -> numericos .)
    COMA            reduce using rule 30 (term -> numericos .)


state 66

    (29) contArray -> term .

    LLAVERIGHT      reduce using rule 29 (contArray -> term .)
    COMA            reduce using rule 29 (contArray -> term .)


state 67

    (7) sentenciaFor -> FOR inicio PUNTOCOMA condicion PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .

    $end            reduce using rule 7 (sentenciaFor -> FOR inicio PUNTOCOMA condicion PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 7 (sentenciaFor -> FOR inicio PUNTOCOMA condicion PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT .)


state 68

    (15) array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .

    $end            reduce using rule 15 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)
    LLAVERIGHT      reduce using rule 15 (array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT .)


state 69

    (17) contArray -> contArray COMA . numericos
    (34) numericos -> . ENTERO
    (35) numericos -> . FLOTANTE

    ENTERO          shift and go to state 15
    FLOTANTE        shift and go to state 17

    numericos                      shift and go to state 70

state 70

    (17) contArray -> contArray COMA numericos .

    LLAVERIGHT      reduce using rule 17 (contArray -> contArray COMA numericos .)
    COMA            reduce using rule 17 (contArray -> contArray COMA numericos .)

