
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND BOOL BREAK CADENA CASE COMA CONTINUE CORCHLEFT CORCHRIGHT DECLARADOR DEFAULT DIFERENTE DIVISION DOSPUNTOS ELSE ENTERO ESIGUAL FALSE FLOAT FLOTANTE FOR FUNC IF IGUAL IMPRIMIR INCREMENTO INT LLAVELEFT LLAVERIGHT MAP MASIGUAL MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOSIGUAL MODULO NEGACION OR PARLEFT PARRIGHT PRODUCTO PUNTOCOMA RESTA RETURN SCAN STRING SUMA SWITCH TRUE VAR VARIABLEinstrucciones : asignacion\n                     | expresion \n                     | condiciones\n                     | sentenciaIf\n                     | sentenciaFor\n                     | print\n                     | mapa\n                     | puntero\n                     | lectura\n                     | array\n                     | switch\n                     | funcionasignacion : VAR VARIABLE BOOL IGUAL booleano\n                  | VAR VARIABLE INT IGUAL expresion\n                  | VAR VARIABLE FLOAT IGUAL expresion\n                  | VAR VARIABLE STRING IGUAL CADENA\n                  | VAR VARIABLE puntero IGUAL refer\n                  | VAR VARIABLE puntero\n                  | VARIABLE DECLARADOR valor\n                  | VARIABLE IGUAL valor\n                  | VARIABLE MASIGUAL acumular\n                  | VARIABLE MENOSIGUAL expresion\n                  | derefer IGUAL valor\n       booleano   : condicion\n                  | TRUE \n                  | FALSE\n       valor      : booleano\n                  | expresion\n                  | CADENA\n                  | VARIABLE\n                  | mapa\n                  | refer\n        acumular  : expresion\n                  | CADENA\n                  | VARIABLEsentenciaIf : IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT\n                   | IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else\n                   | IF comparaciones LLAVELEFT instrucciones LLAVERIGHT\n                   | IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else\n                   | IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT\n                   | IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else\n       else :        ELSE LLAVELEFT instrucciones LLAVERIGHT\n                   | ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT\n                   | ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT\n                   | ELSE sentenciaIf mapa : MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT\n             | MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT\n        par  : dato DOSPUNTOS dato mas\n             | dato DOSPUNTOS dato\n        mas  : mas COMA dato DOSPUNTOS dato\n             | COMA dato DOSPUNTOS dato\n        dato : VARIABLE\n             | expresion\n             | CADENA\n             | TRUE\n             | FALSEpuntero : PRODUCTO typeData\n       refer   : AMPERSAND VARIABLE\n       derefer : PRODUCTO VARIABLE sentenciaFor : FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT\n        inicio       : VARIABLE DECLARADOR ENTERO\n        incrementa   : VARIABLE INCREMENTOtypeData : BOOL\n                | INT\n                | FLOAT\n                | STRINGarray : VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArraycontArray : INT LLAVELEFT contArrayEnteros LLAVERIGHT\n                 | STRING LLAVELEFT contArrayCadenas LLAVERIGHT \n                 | FLOAT LLAVELEFT contArrayFloat LLAVERIGHTcontArrayEnteros : ENTERO COMA ENTERO\n                        | contArrayEnteros COMA ENTEROcontArrayCadenas : CADENA COMA CADENA\n                        | contArrayCadenas COMA CADENAcontArrayFloat : FLOTANTE COMA FLOTANTE\n                      | contArrayFloat COMA FLOTANTEprint : IMPRIMIR PARLEFT contPrint PARRIGHTcontPrint : contenido masCont\n                 | contenido\n       masCont   : masCont COMA contenido\n                 | COMA contenido\n       contenido : CADENA\n                 | VARIABLE\n                 | lectura : SCAN PARLEFT contScan PARRIGHTcontScan : AMPERSAND VARIABLEexpresion : expresion operadorArit termoperadorArit : SUMA\n                    | RESTA\n                    | PRODUCTO\n                    | DIVISION\n                    | MODULO\n    expresion : termterm : numericosfactor : numericosfactor : VARIABLEnumericos : ENTERO\n                | FLOTANTE numericos : PARLEFT expresion PARRIGHTcomparacion : condicionescomparacion : NEGACION PARLEFT condiciones PARRIGHTcomparacion : PARLEFT condiciones PARRIGHTfuncion : funcion_sin_parametro\n               | funcion_parametro\n               | funcion_sin_parametro_returnfuncion_sin_parametro : FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT\n                             | FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT\n                             | FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHTfuncion_sin_parametro_return : FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHTfuncion_parametro : FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT\n                         | FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT\n                         | FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHTparametros : VARIABLE\n                  | VARIABLE COMA parametros\n                  | typeData VARIABLE\n                  | typeData VARIABLE COMA parametrosswitch : SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHTbloque_switch : CASE caso_switch DOSPUNTOS instrucciones BREAK\n                     | CASE caso_switch DOSPUNTOS instrucciones CONTINUE\n                     | CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch\n                     | switch_defaultcaso_switch : VARIABLE\n                   | CADENA\n                   | ENTERO switch_default : DEFAULT DOSPUNTOS instrucciones condiciones : factor MAYORQUE factorcondiciones : factor MENORQUE factorcondiciones : factor DIFERENTE factorcondiciones : factor ESIGUAL factorcondiciones : factor MENORIGUAL factorcondiciones : factor MAYORIGUAL factorcomparaciones : comparacioncomparaciones : comparacion anado comparacionesanado : condicioncondicion : ANDcondicion : ORfactor : BOOL'
    
_lr_action_items = {'VAR':([0,109,174,176,191,196,202,205,],[14,14,14,14,14,14,14,14,]),'VARIABLE':([0,14,20,21,25,28,33,42,43,44,46,47,48,49,50,51,52,58,62,68,69,70,71,93,94,95,109,110,111,112,115,124,126,135,143,148,154,161,165,166,174,175,176,190,191,196,197,202,205,217,230,233,251,267,269,272,273,],[15,41,54,61,67,73,74,82,82,97,82,54,54,54,54,54,54,54,120,-63,-64,-65,-66,133,-135,-136,15,54,-134,54,54,146,151,163,120,171,178,183,188,120,15,151,15,210,15,15,151,15,15,236,252,210,264,210,210,210,210,]),'IF':([0,109,174,176,185,191,196,202,205,],[20,20,20,20,20,20,20,20,20,]),'FOR':([0,109,174,176,191,196,202,205,],[21,21,21,21,21,21,21,21,]),'IMPRIMIR':([0,109,174,176,191,196,202,205,],[22,22,22,22,22,22,22,22,]),'MAP':([0,42,43,46,109,174,176,191,196,202,205,],[24,24,24,24,24,24,24,24,24,24,24,]),'PRODUCTO':([0,3,18,27,32,34,41,63,64,75,86,99,101,109,114,121,156,157,174,176,191,196,202,205,211,],[25,38,-93,-97,-94,-98,81,38,-94,-87,38,38,38,25,-94,-99,38,38,25,25,25,25,25,25,38,]),'SCAN':([0,109,174,176,191,196,202,205,],[26,26,26,26,26,26,26,26,]),'SWITCH':([0,109,174,176,191,196,202,205,],[28,28,28,28,28,28,28,28,]),'BOOL':([0,20,25,41,47,48,49,50,51,52,58,65,81,94,95,109,110,111,112,115,126,144,174,175,176,191,196,197,202,205,],[16,16,68,76,16,16,16,16,16,16,16,68,68,-135,-136,16,16,-134,16,16,68,68,16,68,16,16,16,68,16,16,]),'FUNC':([0,109,174,176,191,196,202,205,],[33,33,33,33,33,33,33,33,]),'ENTERO':([0,20,23,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,58,84,94,95,109,110,111,112,115,116,128,129,148,174,176,190,191,196,198,202,205,233,242,243,267,269,272,273,],[27,27,27,27,-88,-89,-90,-91,-92,27,27,27,27,27,27,27,27,27,27,27,27,132,-135,-136,27,27,-134,27,27,140,27,27,173,27,27,27,27,27,223,27,27,27,258,259,27,27,27,27,]),'FLOTANTE':([0,20,23,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,58,94,95,109,110,111,112,115,128,129,174,176,190,191,196,200,202,205,233,248,249,267,269,272,273,],[34,34,34,34,-88,-89,-90,-91,-92,34,34,34,34,34,34,34,34,34,34,34,34,-135,-136,34,34,-134,34,34,34,34,34,34,34,34,34,227,34,34,34,262,263,34,34,34,34,]),'PARLEFT':([0,20,22,23,26,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,57,58,74,94,95,109,110,111,112,115,128,129,174,176,190,191,196,202,205,233,267,269,272,273,],[23,58,62,23,72,23,-88,-89,-90,-91,-92,23,23,23,23,23,23,23,23,23,23,23,112,23,126,-135,-136,23,58,-134,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,16,18,27,29,30,31,32,34,54,59,64,66,68,69,70,71,75,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,121,133,141,145,155,156,157,158,159,162,169,179,184,186,201,203,204,208,216,218,228,232,237,238,240,241,244,247,250,253,256,257,265,268,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-137,-93,-97,-103,-104,-105,-94,-98,-96,-95,-94,-57,-63,-64,-65,-66,-87,-18,-30,-19,-27,-28,-29,-31,-32,-24,-25,-26,-135,-136,-20,-35,-21,-33,-34,-22,-23,-126,-127,-128,-129,-130,-131,-99,-58,-77,-85,-13,-14,-15,-16,-17,-38,-117,-67,-39,-40,-36,-45,-41,-47,-106,-107,-37,-46,-108,-110,-112,-68,-69,-70,-42,-60,-109,-111,-44,-43,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,16,18,27,29,30,31,32,34,54,59,64,66,68,69,70,71,75,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,121,133,134,141,145,155,156,157,158,159,162,169,176,179,184,186,194,196,201,202,203,204,208,216,218,219,228,229,232,237,238,240,241,244,247,250,253,256,257,265,268,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-137,-93,-97,-103,-104,-105,-94,-98,-96,-95,-94,-57,-63,-64,-65,-66,-87,-18,-30,-19,-27,-28,-29,-31,-32,-24,-25,-26,-135,-136,-20,-35,-21,-33,-34,-22,-23,-126,-127,-128,-129,-130,-131,135,-99,-58,161,-77,-85,-13,-14,-15,-16,-17,-38,-117,195,-67,-39,-40,217,220,-36,230,-45,-41,-47,-106,-107,239,-37,251,-46,-108,-110,-112,-68,-69,-70,-42,-60,-109,-111,-44,-43,]),'LLAVERIGHT':([2,3,4,5,6,7,8,9,10,11,12,13,16,18,27,29,30,31,32,34,54,59,64,66,68,69,70,71,75,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,121,133,134,141,145,147,149,155,156,157,158,159,162,163,169,179,183,184,186,190,192,194,195,201,203,204,207,208,210,211,212,213,214,216,217,218,219,220,222,224,226,228,229,231,232,234,235,236,237,238,239,240,241,244,247,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,274,275,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-137,-93,-97,-103,-104,-105,-94,-98,-96,-95,-94,-57,-63,-64,-65,-66,-87,-18,-30,-19,-27,-28,-29,-31,-32,-24,-25,-26,-135,-136,-20,-35,-21,-33,-34,-22,-23,-126,-127,-128,-129,-130,-131,-99,-58,162,-77,-85,169,-121,-13,-14,-15,-16,-17,-38,186,-117,-67,201,-39,-40,208,-125,216,218,-36,-45,-41,232,-47,-52,-53,-54,-55,-56,-106,237,-107,238,240,241,244,247,-37,250,253,-46,-118,-119,256,-108,-110,257,-112,-68,-69,-70,-42,265,-60,-49,-120,-109,-111,-72,-71,-74,-73,-76,-75,268,-44,-48,-43,-51,-50,]),'BREAK':([2,3,4,5,6,7,8,9,10,11,12,13,16,18,27,29,30,31,32,34,54,59,64,66,68,69,70,71,75,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,121,133,141,145,155,156,157,158,159,162,169,179,184,186,201,203,204,208,215,216,218,228,232,237,238,240,241,244,247,250,253,256,257,265,268,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-137,-93,-97,-103,-104,-105,-94,-98,-96,-95,-94,-57,-63,-64,-65,-66,-87,-18,-30,-19,-27,-28,-29,-31,-32,-24,-25,-26,-135,-136,-20,-35,-21,-33,-34,-22,-23,-126,-127,-128,-129,-130,-131,-99,-58,-77,-85,-13,-14,-15,-16,-17,-38,-117,-67,-39,-40,-36,-45,-41,-47,234,-106,-107,-37,-46,-108,-110,-112,-68,-69,-70,-42,-60,-109,-111,-44,-43,]),'CONTINUE':([2,3,4,5,6,7,8,9,10,11,12,13,16,18,27,29,30,31,32,34,54,59,64,66,68,69,70,71,75,80,82,83,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,121,133,141,145,155,156,157,158,159,162,169,179,184,186,201,203,204,208,215,216,218,228,232,237,238,240,241,244,247,250,253,256,257,265,268,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-137,-93,-97,-103,-104,-105,-94,-98,-96,-95,-94,-57,-63,-64,-65,-66,-87,-18,-30,-19,-27,-28,-29,-31,-32,-24,-25,-26,-135,-136,-20,-35,-21,-33,-34,-22,-23,-126,-127,-128,-129,-130,-131,-99,-58,-77,-85,-13,-14,-15,-16,-17,-38,-117,-67,-39,-40,-36,-45,-41,-47,235,-106,-107,-37,-46,-108,-110,-112,-68,-69,-70,-42,-60,-109,-111,-44,-43,]),'SUMA':([3,18,27,32,34,63,64,75,86,99,101,114,121,156,157,211,],[36,-93,-97,-94,-98,36,-94,-87,36,36,36,-94,-99,36,36,36,]),'RESTA':([3,18,27,32,34,63,64,75,86,99,101,114,121,156,157,211,],[37,-93,-97,-94,-98,37,-94,-87,37,37,37,-94,-99,37,37,37,]),'DIVISION':([3,18,27,32,34,63,64,75,86,99,101,114,121,156,157,211,],[39,-93,-97,-94,-98,39,-94,-87,39,39,39,-94,-99,39,39,39,]),'MODULO':([3,18,27,32,34,63,64,75,86,99,101,114,121,156,157,211,],[40,-93,-97,-94,-98,40,-94,-87,40,40,40,-94,-99,40,40,40,]),'DECLARADOR':([15,61,],[42,116,]),'IGUAL':([15,17,66,67,68,69,70,71,76,77,78,79,80,],[43,46,-57,-59,-63,-64,-65,-66,127,128,129,130,131,]),'MASIGUAL':([15,],[44,]),'MENOSIGUAL':([15,],[45,]),'MAYORQUE':([15,16,19,27,32,34,54,59,114,121,],[-96,-137,47,-97,-95,-98,-96,-95,-95,-99,]),'MENORQUE':([15,16,19,27,32,34,54,59,114,121,],[-96,-137,48,-97,-95,-98,-96,-95,-95,-99,]),'DIFERENTE':([15,16,19,27,32,34,54,59,114,121,],[-96,-137,49,-97,-95,-98,-96,-95,-95,-99,]),'ESIGUAL':([15,16,19,27,32,34,54,59,114,121,],[-96,-137,50,-97,-95,-98,-96,-95,-95,-99,]),'MENORIGUAL':([15,16,19,27,32,34,54,59,114,121,],[-96,-137,51,-97,-95,-98,-96,-95,-95,-99,]),'MAYORIGUAL':([15,16,19,27,32,34,54,59,114,121,],[-96,-137,52,-97,-95,-98,-96,-95,-95,-99,]),'AND':([16,27,34,42,43,46,54,55,56,59,103,104,105,106,107,108,121,127,138,164,],[-137,-97,-98,94,94,94,-96,94,-100,-95,-126,-127,-128,-129,-130,-131,-99,94,-102,-101,]),'OR':([16,27,34,42,43,46,54,55,56,59,103,104,105,106,107,108,121,127,138,164,],[-137,-97,-98,95,95,95,-96,95,-100,-95,-126,-127,-128,-129,-130,-131,-99,95,-102,-101,]),'LLAVELEFT':([16,27,34,53,54,55,56,59,68,69,70,71,73,103,104,105,106,107,108,121,136,138,152,164,168,177,180,181,182,185,187,206,],[-137,-97,-98,109,-96,-132,-100,-95,-63,-64,-65,-66,125,-126,-127,-128,-129,-130,-131,-99,-133,-102,176,-101,190,196,198,199,200,202,205,-62,]),'PARRIGHT':([16,18,27,34,54,59,62,63,64,75,103,104,105,106,107,108,113,114,117,118,119,120,121,123,126,137,142,143,146,151,153,166,167,178,189,193,221,],[-137,-93,-97,-98,-96,-95,-84,121,-94,-87,-126,-127,-128,-129,-130,-131,138,-94,141,-79,-82,-83,-99,145,152,164,-78,-84,-86,-113,177,-84,-81,-115,-80,-114,-116,]),'PUNTOCOMA':([16,27,34,54,59,60,103,104,105,106,107,108,121,139,140,],[-137,-97,-98,-96,-95,115,-126,-127,-128,-129,-130,-131,-99,165,-61,]),'DOSPUNTOS':([18,27,34,64,75,121,150,170,171,172,173,209,210,211,212,213,214,270,271,],[-93,-97,-98,-94,-87,-99,174,191,-122,-123,-124,233,-52,-53,-54,-55,-56,272,273,]),'COMA':([18,27,34,62,64,75,118,119,120,121,142,143,151,166,167,178,189,210,211,212,213,214,222,223,224,225,226,227,254,258,259,260,261,262,263,266,274,275,],[-93,-97,-98,-84,-94,-87,143,-82,-83,-99,166,-84,175,-84,-81,197,-80,-52,-53,-54,-55,-56,242,243,245,246,248,249,267,-72,-71,-74,-73,-76,-75,269,-51,-50,]),'NEGACION':([20,94,95,110,111,],[57,-135,-136,57,-134,]),'CORCHLEFT':([24,42,],[65,84,]),'INT':([25,41,65,81,126,144,160,175,197,],[69,77,69,69,69,69,180,69,69,]),'FLOAT':([25,41,65,81,126,144,160,175,197,],[70,78,70,70,70,70,182,70,70,]),'STRING':([25,41,65,81,126,144,160,175,197,],[71,79,71,71,71,71,181,71,71,]),'CADENA':([42,43,44,46,62,130,143,148,166,190,199,233,245,246,267,269,272,273,],[87,87,100,87,119,158,119,172,119,212,225,212,260,261,212,212,212,212,]),'TRUE':([42,43,46,127,190,233,267,269,272,273,],[91,91,91,91,213,213,213,213,213,213,]),'FALSE':([42,43,46,127,190,233,267,269,272,273,],[92,92,92,92,214,214,214,214,214,214,]),'AMPERSAND':([42,43,46,72,131,],[93,93,93,124,93,]),'CORCHRIGHT':([68,69,70,71,122,132,],[-63,-64,-65,-66,144,160,]),'CASE':([125,234,],[148,148,]),'DEFAULT':([125,234,],[150,150,]),'ELSE':([162,186,201,],[185,185,185,]),'INCREMENTO':([188,],[206,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,109,174,176,191,196,202,205,],[1,134,192,194,215,219,229,231,]),'asignacion':([0,109,174,176,191,196,202,205,],[2,2,2,2,2,2,2,2,]),'expresion':([0,23,42,43,44,45,46,58,109,128,129,174,176,190,191,196,202,205,233,267,269,272,273,],[3,63,86,86,99,101,86,63,3,156,157,3,3,211,3,3,3,3,211,211,211,211,211,]),'condiciones':([0,20,58,109,110,112,115,174,176,191,196,202,205,],[4,56,113,4,56,137,139,4,4,4,4,4,4,]),'sentenciaIf':([0,109,174,176,185,191,196,202,205,],[5,5,5,5,203,5,5,5,5,]),'sentenciaFor':([0,109,174,176,191,196,202,205,],[6,6,6,6,6,6,6,6,]),'print':([0,109,174,176,191,196,202,205,],[7,7,7,7,7,7,7,7,]),'mapa':([0,42,43,46,109,174,176,191,196,202,205,],[8,88,88,88,8,8,8,8,8,8,8,]),'puntero':([0,41,109,174,176,191,196,202,205,],[9,80,9,9,9,9,9,9,9,]),'lectura':([0,109,174,176,191,196,202,205,],[10,10,10,10,10,10,10,10,]),'array':([0,109,174,176,191,196,202,205,],[11,11,11,11,11,11,11,11,]),'switch':([0,109,174,176,191,196,202,205,],[12,12,12,12,12,12,12,12,]),'funcion':([0,109,174,176,191,196,202,205,],[13,13,13,13,13,13,13,13,]),'derefer':([0,109,174,176,191,196,202,205,],[17,17,17,17,17,17,17,17,]),'term':([0,23,35,42,43,44,45,46,58,109,128,129,174,176,190,191,196,202,205,233,267,269,272,273,],[18,18,75,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'factor':([0,20,47,48,49,50,51,52,58,109,110,112,115,174,176,191,196,202,205,],[19,19,103,104,105,106,107,108,19,19,19,19,19,19,19,19,19,19,19,]),'funcion_sin_parametro':([0,109,174,176,191,196,202,205,],[29,29,29,29,29,29,29,29,]),'funcion_parametro':([0,109,174,176,191,196,202,205,],[30,30,30,30,30,30,30,30,]),'funcion_sin_parametro_return':([0,109,174,176,191,196,202,205,],[31,31,31,31,31,31,31,31,]),'numericos':([0,20,23,35,42,43,44,45,46,47,48,49,50,51,52,58,109,110,112,115,128,129,174,176,190,191,196,202,205,233,267,269,272,273,],[32,59,64,64,64,64,64,64,64,59,59,59,59,59,59,114,32,59,59,59,64,64,32,32,64,32,32,32,32,64,64,64,64,64,]),'operadorArit':([3,63,86,99,101,156,157,211,],[35,35,35,35,35,35,35,35,]),'comparaciones':([20,110,],[53,136,]),'comparacion':([20,110,],[55,55,]),'inicio':([21,],[60,]),'typeData':([25,65,81,126,144,175,197,],[66,122,66,154,168,154,154,]),'valor':([42,43,46,],[83,96,102,]),'booleano':([42,43,46,127,],[85,85,85,155,]),'refer':([42,43,46,131,],[89,89,89,159,]),'condicion':([42,43,46,55,127,],[90,90,90,111,90,]),'acumular':([44,],[98,]),'anado':([55,],[110,]),'contPrint':([62,],[117,]),'contenido':([62,143,166,],[118,167,189,]),'contScan':([72,],[123,]),'masCont':([118,],[142,]),'bloque_switch':([125,234,],[147,255,]),'switch_default':([125,234,],[149,149,]),'parametros':([126,175,197,],[153,193,221,]),'caso_switch':([148,],[170,]),'contArray':([160,],[179,]),'else':([162,186,201,],[184,204,228,]),'incrementa':([165,],[187,]),'par':([190,],[207,]),'dato':([190,233,267,269,272,273,],[209,254,270,271,274,275,]),'contArrayEnteros':([198,],[222,]),'contArrayCadenas':([199,],[224,]),'contArrayFloat':([200,],[226,]),'mas':([254,],[266,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',9),
  ('instrucciones -> expresion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',10),
  ('instrucciones -> condiciones','instrucciones',1,'p_instrucciones','analizadorSintactico.py',11),
  ('instrucciones -> sentenciaIf','instrucciones',1,'p_instrucciones','analizadorSintactico.py',12),
  ('instrucciones -> sentenciaFor','instrucciones',1,'p_instrucciones','analizadorSintactico.py',13),
  ('instrucciones -> print','instrucciones',1,'p_instrucciones','analizadorSintactico.py',14),
  ('instrucciones -> mapa','instrucciones',1,'p_instrucciones','analizadorSintactico.py',15),
  ('instrucciones -> puntero','instrucciones',1,'p_instrucciones','analizadorSintactico.py',16),
  ('instrucciones -> lectura','instrucciones',1,'p_instrucciones','analizadorSintactico.py',17),
  ('instrucciones -> array','instrucciones',1,'p_instrucciones','analizadorSintactico.py',18),
  ('instrucciones -> switch','instrucciones',1,'p_instrucciones','analizadorSintactico.py',19),
  ('instrucciones -> funcion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',20),
  ('asignacion -> VAR VARIABLE BOOL IGUAL booleano','asignacion',5,'p_asignacion','analizadorSintactico.py',24),
  ('asignacion -> VAR VARIABLE INT IGUAL expresion','asignacion',5,'p_asignacion','analizadorSintactico.py',25),
  ('asignacion -> VAR VARIABLE FLOAT IGUAL expresion','asignacion',5,'p_asignacion','analizadorSintactico.py',26),
  ('asignacion -> VAR VARIABLE STRING IGUAL CADENA','asignacion',5,'p_asignacion','analizadorSintactico.py',27),
  ('asignacion -> VAR VARIABLE puntero IGUAL refer','asignacion',5,'p_asignacion','analizadorSintactico.py',28),
  ('asignacion -> VAR VARIABLE puntero','asignacion',3,'p_asignacion','analizadorSintactico.py',29),
  ('asignacion -> VARIABLE DECLARADOR valor','asignacion',3,'p_asignacion','analizadorSintactico.py',30),
  ('asignacion -> VARIABLE IGUAL valor','asignacion',3,'p_asignacion','analizadorSintactico.py',31),
  ('asignacion -> VARIABLE MASIGUAL acumular','asignacion',3,'p_asignacion','analizadorSintactico.py',32),
  ('asignacion -> VARIABLE MENOSIGUAL expresion','asignacion',3,'p_asignacion','analizadorSintactico.py',33),
  ('asignacion -> derefer IGUAL valor','asignacion',3,'p_asignacion','analizadorSintactico.py',34),
  ('booleano -> condicion','booleano',1,'p_asignacion','analizadorSintactico.py',35),
  ('booleano -> TRUE','booleano',1,'p_asignacion','analizadorSintactico.py',36),
  ('booleano -> FALSE','booleano',1,'p_asignacion','analizadorSintactico.py',37),
  ('valor -> booleano','valor',1,'p_asignacion','analizadorSintactico.py',38),
  ('valor -> expresion','valor',1,'p_asignacion','analizadorSintactico.py',39),
  ('valor -> CADENA','valor',1,'p_asignacion','analizadorSintactico.py',40),
  ('valor -> VARIABLE','valor',1,'p_asignacion','analizadorSintactico.py',41),
  ('valor -> mapa','valor',1,'p_asignacion','analizadorSintactico.py',42),
  ('valor -> refer','valor',1,'p_asignacion','analizadorSintactico.py',43),
  ('acumular -> expresion','acumular',1,'p_asignacion','analizadorSintactico.py',44),
  ('acumular -> CADENA','acumular',1,'p_asignacion','analizadorSintactico.py',45),
  ('acumular -> VARIABLE','acumular',1,'p_asignacion','analizadorSintactico.py',46),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT','sentenciaIf',7,'p_sentenciaIf','analizadorSintactico.py',50),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else','sentenciaIf',8,'p_sentenciaIf','analizadorSintactico.py',51),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT','sentenciaIf',5,'p_sentenciaIf','analizadorSintactico.py',52),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else','sentenciaIf',6,'p_sentenciaIf','analizadorSintactico.py',53),
  ('sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT','sentenciaIf',6,'p_sentenciaIf','analizadorSintactico.py',54),
  ('sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else','sentenciaIf',7,'p_sentenciaIf','analizadorSintactico.py',55),
  ('else -> ELSE LLAVELEFT instrucciones LLAVERIGHT','else',4,'p_sentenciaIf','analizadorSintactico.py',56),
  ('else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT','else',6,'p_sentenciaIf','analizadorSintactico.py',57),
  ('else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT','else',5,'p_sentenciaIf','analizadorSintactico.py',58),
  ('else -> ELSE sentenciaIf','else',2,'p_sentenciaIf','analizadorSintactico.py',59),
  ('mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT par LLAVERIGHT','mapa',8,'p_mapa','analizadorSintactico.py',63),
  ('mapa -> MAP CORCHLEFT typeData CORCHRIGHT typeData LLAVELEFT LLAVERIGHT','mapa',7,'p_mapa','analizadorSintactico.py',64),
  ('par -> dato DOSPUNTOS dato mas','par',4,'p_mapa','analizadorSintactico.py',65),
  ('par -> dato DOSPUNTOS dato','par',3,'p_mapa','analizadorSintactico.py',66),
  ('mas -> mas COMA dato DOSPUNTOS dato','mas',5,'p_mapa','analizadorSintactico.py',67),
  ('mas -> COMA dato DOSPUNTOS dato','mas',4,'p_mapa','analizadorSintactico.py',68),
  ('dato -> VARIABLE','dato',1,'p_mapa','analizadorSintactico.py',69),
  ('dato -> expresion','dato',1,'p_mapa','analizadorSintactico.py',70),
  ('dato -> CADENA','dato',1,'p_mapa','analizadorSintactico.py',71),
  ('dato -> TRUE','dato',1,'p_mapa','analizadorSintactico.py',72),
  ('dato -> FALSE','dato',1,'p_mapa','analizadorSintactico.py',73),
  ('puntero -> PRODUCTO typeData','puntero',2,'p_puntero','analizadorSintactico.py',79),
  ('refer -> AMPERSAND VARIABLE','refer',2,'p_puntero','analizadorSintactico.py',80),
  ('derefer -> PRODUCTO VARIABLE','derefer',2,'p_puntero','analizadorSintactico.py',81),
  ('sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT','sentenciaFor',9,'p_sentenciaFor','analizadorSintactico.py',85),
  ('inicio -> VARIABLE DECLARADOR ENTERO','inicio',3,'p_sentenciaFor','analizadorSintactico.py',86),
  ('incrementa -> VARIABLE INCREMENTO','incrementa',2,'p_sentenciaFor','analizadorSintactico.py',87),
  ('typeData -> BOOL','typeData',1,'p_typeData','analizadorSintactico.py',91),
  ('typeData -> INT','typeData',1,'p_typeData','analizadorSintactico.py',92),
  ('typeData -> FLOAT','typeData',1,'p_typeData','analizadorSintactico.py',93),
  ('typeData -> STRING','typeData',1,'p_typeData','analizadorSintactico.py',94),
  ('array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray','array',6,'p_array','analizadorSintactico.py',101),
  ('contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT','contArray',4,'p_contenidoArray','analizadorSintactico.py',104),
  ('contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT','contArray',4,'p_contenidoArray','analizadorSintactico.py',105),
  ('contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT','contArray',4,'p_contenidoArray','analizadorSintactico.py',106),
  ('contArrayEnteros -> ENTERO COMA ENTERO','contArrayEnteros',3,'p_ArrayEnteros','analizadorSintactico.py',109),
  ('contArrayEnteros -> contArrayEnteros COMA ENTERO','contArrayEnteros',3,'p_ArrayEnteros','analizadorSintactico.py',110),
  ('contArrayCadenas -> CADENA COMA CADENA','contArrayCadenas',3,'p_ArrayCadenas','analizadorSintactico.py',113),
  ('contArrayCadenas -> contArrayCadenas COMA CADENA','contArrayCadenas',3,'p_ArrayCadenas','analizadorSintactico.py',114),
  ('contArrayFloat -> FLOTANTE COMA FLOTANTE','contArrayFloat',3,'p_ArrayFlotante','analizadorSintactico.py',117),
  ('contArrayFloat -> contArrayFloat COMA FLOTANTE','contArrayFloat',3,'p_ArrayFlotante','analizadorSintactico.py',118),
  ('print -> IMPRIMIR PARLEFT contPrint PARRIGHT','print',4,'p_print','analizadorSintactico.py',125),
  ('contPrint -> contenido masCont','contPrint',2,'p_contenidoPrint','analizadorSintactico.py',128),
  ('contPrint -> contenido','contPrint',1,'p_contenidoPrint','analizadorSintactico.py',129),
  ('masCont -> masCont COMA contenido','masCont',3,'p_contenidoPrint','analizadorSintactico.py',130),
  ('masCont -> COMA contenido','masCont',2,'p_contenidoPrint','analizadorSintactico.py',131),
  ('contenido -> CADENA','contenido',1,'p_contenidoPrint','analizadorSintactico.py',132),
  ('contenido -> VARIABLE','contenido',1,'p_contenidoPrint','analizadorSintactico.py',133),
  ('contenido -> <empty>','contenido',0,'p_contenidoPrint','analizadorSintactico.py',134),
  ('lectura -> SCAN PARLEFT contScan PARRIGHT','lectura',4,'p_lectura','analizadorSintactico.py',138),
  ('contScan -> AMPERSAND VARIABLE','contScan',2,'p_contenidoScan','analizadorSintactico.py',141),
  ('expresion -> expresion operadorArit term','expresion',3,'p_aritmetica_expresion','analizadorSintactico.py',145),
  ('operadorArit -> SUMA','operadorArit',1,'p_operador_aritmetico','analizadorSintactico.py',148),
  ('operadorArit -> RESTA','operadorArit',1,'p_operador_aritmetico','analizadorSintactico.py',149),
  ('operadorArit -> PRODUCTO','operadorArit',1,'p_operador_aritmetico','analizadorSintactico.py',150),
  ('operadorArit -> DIVISION','operadorArit',1,'p_operador_aritmetico','analizadorSintactico.py',151),
  ('operadorArit -> MODULO','operadorArit',1,'p_operador_aritmetico','analizadorSintactico.py',152),
  ('expresion -> term','expresion',1,'p_expression_term','analizadorSintactico.py',156),
  ('term -> numericos','term',1,'p_term_factor','analizadorSintactico.py',160),
  ('factor -> numericos','factor',1,'p_factor_num','analizadorSintactico.py',164),
  ('factor -> VARIABLE','factor',1,'p_factor_var','analizadorSintactico.py',167),
  ('numericos -> ENTERO','numericos',1,'p_numericos','analizadorSintactico.py',170),
  ('numericos -> FLOTANTE','numericos',1,'p_numericos','analizadorSintactico.py',171),
  ('numericos -> PARLEFT expresion PARRIGHT','numericos',3,'p_factor_exp','analizadorSintactico.py',174),
  ('comparacion -> condiciones','comparacion',1,'p_comparacion','analizadorSintactico.py',181),
  ('comparacion -> NEGACION PARLEFT condiciones PARRIGHT','comparacion',4,'p_comparaciones_negado','analizadorSintactico.py',184),
  ('comparacion -> PARLEFT condiciones PARRIGHT','comparacion',3,'p_comparaciones_paren','analizadorSintactico.py',187),
  ('funcion -> funcion_sin_parametro','funcion',1,'p_funcion','analizadorSintactico.py',191),
  ('funcion -> funcion_parametro','funcion',1,'p_funcion','analizadorSintactico.py',192),
  ('funcion -> funcion_sin_parametro_return','funcion',1,'p_funcion','analizadorSintactico.py',193),
  ('funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT','funcion_sin_parametro',7,'p_funcion_sin_parameters','analizadorSintactico.py',196),
  ('funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT','funcion_sin_parametro',7,'p_funcion_sin_parameters','analizadorSintactico.py',197),
  ('funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT','funcion_sin_parametro',8,'p_funcion_sin_parameters','analizadorSintactico.py',198),
  ('funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT','funcion_sin_parametro_return',9,'p_funcion_sin_parameters_return','analizadorSintactico.py',201),
  ('funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT','funcion_parametro',8,'p_funcion_parameters','analizadorSintactico.py',204),
  ('funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT','funcion_parametro',9,'p_funcion_parameters','analizadorSintactico.py',205),
  ('funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT','funcion_parametro',8,'p_funcion_parameters','analizadorSintactico.py',206),
  ('parametros -> VARIABLE','parametros',1,'p_parametros','analizadorSintactico.py',209),
  ('parametros -> VARIABLE COMA parametros','parametros',3,'p_parametros','analizadorSintactico.py',210),
  ('parametros -> typeData VARIABLE','parametros',2,'p_parametros','analizadorSintactico.py',211),
  ('parametros -> typeData VARIABLE COMA parametros','parametros',4,'p_parametros','analizadorSintactico.py',212),
  ('switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT','switch',5,'p_switch','analizadorSintactico.py',216),
  ('bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK','bloque_switch',5,'p_bloque_switch','analizadorSintactico.py',219),
  ('bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones CONTINUE','bloque_switch',5,'p_bloque_switch','analizadorSintactico.py',220),
  ('bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones BREAK bloque_switch','bloque_switch',6,'p_bloque_switch','analizadorSintactico.py',221),
  ('bloque_switch -> switch_default','bloque_switch',1,'p_bloque_switch','analizadorSintactico.py',222),
  ('caso_switch -> VARIABLE','caso_switch',1,'p_caso_switch','analizadorSintactico.py',225),
  ('caso_switch -> CADENA','caso_switch',1,'p_caso_switch','analizadorSintactico.py',226),
  ('caso_switch -> ENTERO','caso_switch',1,'p_caso_switch','analizadorSintactico.py',227),
  ('switch_default -> DEFAULT DOSPUNTOS instrucciones','switch_default',3,'p_switch_default','analizadorSintactico.py',230),
  ('condiciones -> factor MAYORQUE factor','condiciones',3,'p_mayorque_compare','analizadorSintactico.py',234),
  ('condiciones -> factor MENORQUE factor','condiciones',3,'p_menorque_compare','analizadorSintactico.py',237),
  ('condiciones -> factor DIFERENTE factor','condiciones',3,'p_distinto_compare','analizadorSintactico.py',240),
  ('condiciones -> factor ESIGUAL factor','condiciones',3,'p_igualdad_compare','analizadorSintactico.py',243),
  ('condiciones -> factor MENORIGUAL factor','condiciones',3,'p_menoroigual_compare','analizadorSintactico.py',246),
  ('condiciones -> factor MAYORIGUAL factor','condiciones',3,'p_mayoroigual_compare','analizadorSintactico.py',249),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','analizadorSintactico.py',252),
  ('comparaciones -> comparacion anado comparaciones','comparaciones',3,'p_comparaciones_uno','analizadorSintactico.py',255),
  ('anado -> condicion','anado',1,'p_condicion_extra','analizadorSintactico.py',258),
  ('condicion -> AND','condicion',1,'p_condicion_and','analizadorSintactico.py',261),
  ('condicion -> OR','condicion',1,'p_condicion_or','analizadorSintactico.py',264),
  ('factor -> BOOL','factor',1,'p_factor_bool','analizadorSintactico.py',267),
]
