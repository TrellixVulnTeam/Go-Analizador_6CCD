
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND BOOL BREAK CADENA CAP CASE COMA CONTINUE CORCHLEFT CORCHRIGHT DECLARADOR DEFAULT DIFERENTE DIVISION DOSPUNTOS ELSE ENTERO ESIGUAL FALSE FLOAT FLOTANTE FOR FUNC IF IGUAL IMPORT IMPRIMIR INCREMENTO INT LEN LLAVELEFT LLAVERIGHT MAKE MAP MASIGUAL MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOSIGUAL MODULO NEGACION OR PACKAGE PARLEFT PARRIGHT PRODUCTO PUNTOCOMA RESTA RETURN SCAN STRING SUMA SWITCH TRUE VAR VARIABLEinstrucciones : asignacion\n                     | expresion \n                     | condiciones\n                     | sentenciaIf\n                     | sentenciaFor\n                     | print\n                     | mapa\n                     | puntero\n                     | lectura\n                     | array\n                     | switch\n                     | funcion\n                     | PACKAGE VARIABLE IMPORT CADENA funcionmasInstrucciones : masInstrucciones instrucciones\n                        | masInstrucciones\n                        | asignacion : VAR VARIABLE BOOL IGUAL booleano\n                  | VAR VARIABLE INT IGUAL expresionInt\n                  | VAR VARIABLE FLOAT IGUAL expresionFloat\n                  | VAR VARIABLE STRING IGUAL CADENA\n                  | VAR VARIABLE puntero IGUAL refer\n                  | VAR VARIABLE puntero\n                  | slices\n                  | VARIABLE DECLARADOR valor\n                  | VARIABLE IGUAL valor\n                  | VARIABLE MASIGUAL acumular\n                  | VARIABLE MENOSIGUAL expresion\n                  | derefer IGUAL valor\n       booleano   : condicion\n                  | TRUE \n                  | FALSE\n       valor      : booleano\n                  | expresion\n                  | CADENA\n                  | VARIABLE\n                  | mapa\n                  | refer\n        acumular  : expresion\n                  | CADENA\n                  | VARIABLEsentenciaIf : IF comparaciones LLAVELEFT instrucciones masInstrucciones RETURN VARIABLE LLAVERIGHT\n                   | IF comparaciones LLAVELEFT instrucciones masInstrucciones RETURN VARIABLE LLAVERIGHT else\n                   | IF comparaciones LLAVELEFT instrucciones masInstrucciones LLAVERIGHT\n                   | IF comparaciones LLAVELEFT instrucciones masInstrucciones LLAVERIGHT else\n                   | IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT\n                   | IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else\n        else :       ELSE LLAVELEFT instrucciones masInstrucciones LLAVERIGHT\n                   | ELSE LLAVELEFT instrucciones masInstrucciones RETURN VARIABLE LLAVERIGHT\n                   | ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT\n                   | ELSE sentenciaIf mapa : MAP CORCHLEFT STRING CORCHRIGHT typeData LLAVELEFT LLAVERIGHT\n             | MAP CORCHLEFT STRING CORCHRIGHT contMapacontMapa  : INT LLAVELEFT parEntero LLAVERIGHT\n                 | STRING LLAVELEFT parCadena LLAVERIGHT \n                 | FLOAT LLAVELEFT parFlotante LLAVERIGHT\n                 | BOOL LLAVELEFT parBoolean LLAVERIGHTparEntero  : CADENA DOSPUNTOS datoEntero masEntero\n                  | CADENA DOSPUNTOS datoEntero\n       masEntero  : masEntero COMA CADENA DOSPUNTOS datoEntero\n                  | COMA CADENA DOSPUNTOS datoEntero\n       datoEntero : VARIABLE\n                  | expresionparCadena  : CADENA DOSPUNTOS datoCadena masCadena\n                  | CADENA DOSPUNTOS datoCadena\n       masCadena  : masCadena COMA CADENA DOSPUNTOS datoCadena\n                  | COMA CADENA DOSPUNTOS datoCadena\n       datoCadena : VARIABLE\n                  | CADENAparFlotante  : CADENA DOSPUNTOS datoFlotante masFlotante\n                    | CADENA DOSPUNTOS datoFlotante\n       masFlotante  : masFlotante COMA CADENA DOSPUNTOS datoFlotante\n                    | COMA CADENA DOSPUNTOS datoFlotante\n       datoFlotante : VARIABLE\n                    | expresionparBoolean  : CADENA DOSPUNTOS datoBoolean masBoolean\n                   | CADENA DOSPUNTOS datoBoolean\n       masBoolean  : masBoolean COMA CADENA DOSPUNTOS datoBoolean\n                   | COMA CADENA DOSPUNTOS datoBoolean\n       datoBoolean : condicion\n                   | TRUE \n                   | FALSEpuntero : PRODUCTO typeData\n       refer   : AMPERSAND VARIABLE\n       derefer : PRODUCTO VARIABLE sentenciaFor : FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones masInstrucciones LLAVERIGHT\n        inicio       : VARIABLE DECLARADOR ENTERO\n        incrementa   : VARIABLE INCREMENTOtypeData : BOOL\n                | INT\n                | FLOAT\n                | STRINGarray : VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArraycontArray : INT LLAVELEFT contArrayEnteros LLAVERIGHT\n                 | STRING LLAVELEFT contArrayCadenas LLAVERIGHT \n                 | FLOAT LLAVELEFT contArrayFloat LLAVERIGHTcontArrayEnteros : ENTERO COMA ENTERO\n                        | contArrayEnteros COMA ENTEROcontArrayCadenas : CADENA COMA CADENA\n                        | contArrayCadenas COMA CADENAcontArrayFloat : FLOTANTE COMA FLOTANTE\n                      | contArrayFloat COMA FLOTANTEmethod : methodArray methodArray : namemetodoArr PARLEFT VARIABLE PARRIGHT\n        namemetodoArr   :   LEN\n                        |   CAP print : IMPRIMIR PARLEFT contPrint PARRIGHTcontPrint : contenido masCont\n                 | contenido\n       masCont   : masCont COMA contenido\n                 | COMA contenido\n       contenido : CADENA\n                 | VARIABLE\n                 | method\n                 | lectura : SCAN PARLEFT contScan PARRIGHTcontScan : AMPERSAND VARIABLEexpresion : expresionInt\n                 | expresionFloat\n    expresionInt : expresionInt operadorArit ENTERO\n                 | ENTERO operadorArit ENTERO\n    expresionFloat : expresionFloat operadorArit FLOTANTE\n                   | FLOTANTE operadorArit FLOTANTE\n    operadorArit : SUMA\n                    | RESTA\n                    | PRODUCTO\n                    | DIVISION\n                    | MODULO\n    expresion : termterm : numericosfactor : numericosfactor : VARIABLEnumericos : ENTERO\n                | FLOTANTE numericos : PARLEFT expresion PARRIGHTslices : declaracion_slices_enteros LLAVELEFT contArrayEnteros LLAVERIGHT\n              | declaracion_slices_strings LLAVELEFT contArrayCadenas LLAVERIGHT\n              | VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO PARRIGHT\n              | VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO PARRIGHT\n              | VAR VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO PARRIGHT\n              | VAR VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO PARRIGHT\n              | VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO COMA ENTERO PARRIGHT\n              | VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO COMA ENTERO PARRIGHT\n              | VAR VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO COMA ENTERO PARRIGHT\n              | VAR VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO COMA ENTERO PARRIGHT\n              | declaracion_slices_enteros\n              | declaracion_slices_strings\n              | VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO PARRIGHT\n              | VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO PARRIGHT\n              | VAR VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO PARRIGHT\n              | VAR VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO PARRIGHT\n              | VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO COMA ENTERO PARRIGHT\n              | VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO COMA ENTERO PARRIGHT\n              | VAR VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO COMA ENTERO PARRIGHT\n              | VAR VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO COMA ENTERO PARRIGHT\n       metodos_slices : MAKEdeclaracion_slices_enteros : VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT INT\n                                  | VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT INT\n                                  | VAR VARIABLE CORCHLEFT CORCHRIGHT INT\n                                  | VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT INT\n                                  | VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT INT\n                                  | VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT INTdeclaracion_slices_strings : VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT STRING\n                                  | VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT STRING\n                                  | VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT STRING\n                                  | VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT STRINGcomparacion : condicionescomparacion : NEGACION PARLEFT condiciones PARRIGHTcomparacion : PARLEFT condiciones PARRIGHTfuncion : funcion_sin_parametro\n               | funcion_parametro\n               | funcion_sin_parametro_returnfuncion_sin_parametro : FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones masInstrucciones LLAVERIGHT\n                             | FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT\n                             | FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones masInstrucciones RETURN LLAVERIGHTfuncion_sin_parametro_return : FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones masInstrucciones RETURN VARIABLE LLAVERIGHTfuncion_parametro : FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones masInstrucciones LLAVERIGHT\n                         | FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones masInstrucciones RETURN LLAVERIGHT\n                         | FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHTparametros : VARIABLE\n                  | VARIABLE COMA parametros\n                  | typeData VARIABLE\n                  | typeData VARIABLE COMA parametrosswitch : SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHTbloque_switch : CASE caso_switch DOSPUNTOS instrucciones masInstrucciones BREAK\n                     | CASE caso_switch DOSPUNTOS instrucciones masInstrucciones CONTINUE\n                     | CASE caso_switch DOSPUNTOS instrucciones masInstrucciones BREAK bloque_switch\n                     | switch_defaultcaso_switch : VARIABLE\n                   | CADENA\n                   | ENTERO switch_default : DEFAULT DOSPUNTOS instrucciones masInstrucciones BREAK\n                      | DEFAULT DOSPUNTOS instrucciones masInstrucciones CONTINUEcondiciones : factor MAYORQUE factorcondiciones : factor MENORQUE factorcondiciones : factor DIFERENTE factorcondiciones : factor ESIGUAL factorcondiciones : factor MENORIGUAL factorcondiciones : factor MAYORIGUAL factorcomparaciones : comparacioncomparaciones : comparacion anado comparacionesanado : condicioncondicion : ANDcondicion : ORfactor : BOOL'
    
_lr_action_items = {'PACKAGE':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,165,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[14,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,14,-134,-120,-122,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,14,-52,-183,14,14,-92,-160,-164,-159,-162,-157,-14,-43,-45,14,-16,-16,14,-156,-163,-44,-46,14,-51,-16,14,14,-173,-16,-41,14,-50,-16,-54,-56,-53,-55,14,-172,14,-178,-93,-94,-95,-42,-16,14,-174,-176,-137,-147,-138,-148,14,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,165,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[16,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,16,-134,-120,-122,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,16,-52,-183,16,16,-92,-160,-164,-159,-162,-157,-14,-43,-45,16,-16,-16,16,-156,-163,-44,-46,16,-51,-16,16,16,-173,-16,-41,16,-50,-16,-54,-56,-53,-55,16,-172,16,-178,-93,-94,-95,-42,-16,16,-174,-176,-137,-147,-138,-148,16,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,22,24,25,29,31,32,33,34,35,36,37,38,39,40,42,43,44,54,55,56,57,58,59,60,62,66,67,68,69,72,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,103,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,133,134,135,138,149,152,153,159,160,165,178,179,185,187,188,190,193,196,199,205,206,208,209,213,217,219,221,222,225,226,229,230,235,239,244,249,250,253,259,260,263,264,266,267,268,269,270,280,281,283,285,286,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,337,338,340,341,342,343,344,347,348,349,350,351,352,353,364,365,366,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,428,429,438,439,440,441,448,452,454,455,456,457,458,459,460,464,466,],[15,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,41,46,-204,-117,-118,-23,-128,62,71,77,-132,84,-169,-170,-171,-145,-146,-133,-129,88,90,90,109,90,62,62,62,62,62,62,-131,62,-130,-132,-133,143,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,165,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,15,62,-201,62,62,-134,191,-120,-122,202,-83,-16,227,-106,143,232,-115,241,-135,-136,252,-13,-161,-165,-17,-18,-19,-20,-21,-158,15,272,143,-52,-183,15,202,15,-92,-160,-164,-159,-162,-157,-14,298,-43,-45,15,-16,-16,15,202,-156,-163,-44,-46,15,-51,-16,15,15,-173,-16,-41,15,-50,-16,-54,370,-56,-53,376,-55,379,15,-172,383,15,-178,-93,-94,-95,-42,-16,402,15,-174,-176,-137,-147,-138,-148,15,-85,-175,-177,-140,-150,-139,-149,-47,446,-49,-141,-151,-142,-152,370,376,379,-144,-154,-143,-153,-48,370,376,379,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,165,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,300,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[24,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,24,-134,-120,-122,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,24,-52,-183,24,24,-92,-160,-164,-159,-162,-157,-14,-43,-45,24,-16,-16,24,-156,-163,-44,24,-46,24,-51,-16,24,24,-173,-16,-41,24,-50,-16,-54,-56,-53,-55,24,-172,24,-178,-93,-94,-95,-42,-16,24,-174,-176,-137,-147,-138,-148,24,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,165,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[25,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,25,-134,-120,-122,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,25,-52,-183,25,25,-92,-160,-164,-159,-162,-157,-14,-43,-45,25,-16,-16,25,-156,-163,-44,-46,25,-51,-16,25,25,-173,-16,-41,25,-50,-16,-54,-56,-53,-55,25,-172,25,-178,-93,-94,-95,-42,-16,25,-174,-176,-137,-147,-138,-148,25,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'IMPRIMIR':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,165,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[26,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,26,-134,-120,-122,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,26,-52,-183,26,26,-92,-160,-164,-159,-162,-157,-14,-43,-45,26,-16,-16,26,-156,-163,-44,-46,26,-51,-16,26,26,-173,-16,-41,26,-50,-16,-54,-56,-53,-55,26,-172,26,-178,-93,-94,-95,-42,-16,26,-174,-176,-137,-147,-138,-148,26,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'MAP':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,42,43,54,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,165,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,28,28,28,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,28,-134,-120,-122,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,28,-52,-183,28,28,-92,-160,-164,-159,-162,-157,-14,-43,-45,28,-16,-16,28,-156,-163,-44,-46,28,-51,-16,28,28,-173,-16,-41,28,-50,-16,-54,-56,-53,-55,28,-172,28,-178,-93,-94,-95,-42,-16,28,-174,-176,-137,-147,-138,-148,28,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'PRODUCTO':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,46,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,165,178,185,190,196,199,206,208,209,213,217,218,219,220,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[29,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,50,50,-23,-128,50,-169,-170,-171,-145,-146,50,-129,122,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,29,-134,-120,-122,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,50,50,50,50,-20,-21,-158,29,-52,-183,29,29,-92,-160,-164,-159,-162,-157,-14,-43,-45,29,-16,-16,29,-156,-163,-44,-46,29,-51,-16,29,29,-173,-16,-41,29,-50,-16,-54,-56,-53,-55,29,-172,29,-178,-93,-94,-95,-42,-16,29,-174,-176,-137,-147,-138,-148,29,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'SCAN':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,165,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[30,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,30,-134,-120,-122,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,30,-52,-183,30,30,-92,-160,-164,-159,-162,-157,-14,-43,-45,30,-16,-16,30,-156,-163,-44,-46,30,-51,-16,30,30,-173,-16,-41,30,-50,-16,-54,-56,-53,-55,30,-172,30,-178,-93,-94,-95,-42,-16,30,-174,-176,-137,-147,-138,-148,30,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,165,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[32,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,32,-134,-120,-122,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,32,-52,-183,32,32,-92,-160,-164,-159,-162,-157,-14,-43,-45,32,-16,-16,32,-156,-163,-44,-46,32,-51,-16,32,32,-173,-16,-41,32,-50,-16,-54,-56,-53,-55,32,-172,32,-178,-93,-94,-95,-42,-16,32,-174,-176,-137,-147,-138,-148,32,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'ENTERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,24,27,31,33,34,35,36,37,38,39,42,43,44,45,47,48,49,50,51,52,54,55,56,57,58,59,60,62,66,67,68,69,74,76,78,79,80,81,83,85,90,91,92,94,95,96,97,98,100,101,102,104,105,106,108,109,110,111,112,113,119,121,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,149,153,159,165,170,171,178,185,190,193,196,197,198,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,287,295,296,299,301,302,306,313,314,315,316,317,324,325,326,327,332,333,334,335,336,338,340,341,342,343,344,347,349,350,351,352,353,360,361,362,363,364,365,367,384,385,389,390,391,392,393,394,395,396,401,403,413,414,419,420,421,422,423,424,425,426,427,429,438,439,440,441,452,454,455,456,457,458,459,464,466,],[31,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,68,31,-132,-169,-170,-171,-145,-146,-133,-129,31,31,31,31,123,-123,-124,-125,-126,-127,31,68,68,68,68,68,68,-131,31,-130,-132,-133,-129,-82,-88,-89,-90,-91,153,156,-35,-24,162,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,167,-40,-26,-38,-39,-27,-22,176,-119,-121,-28,-193,-194,-195,-196,-197,-198,31,68,-201,68,68,184,-134,-120,-122,-83,215,218,-16,-106,-115,243,-135,245,246,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,31,-52,-183,31,31,-92,-160,-164,-159,-162,-157,-14,-43,-45,31,-16,-16,31,156,-156,-163,-44,-46,31,-51,-16,31,31,-173,-16,356,357,358,359,-41,31,-50,-16,-54,-56,-53,31,-55,31,31,-172,31,-178,-93,-94,-95,397,398,399,400,-42,-16,31,-174,-176,415,-137,416,-147,417,-138,418,-148,31,-85,-175,-177,442,-140,443,-150,444,-139,445,-149,-47,-49,-141,-151,-142,-152,31,31,-144,-154,-143,-153,-48,31,31,]),'FLOTANTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,24,27,31,33,34,35,36,37,38,39,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,67,68,69,74,76,78,79,80,81,87,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,133,134,135,138,149,153,159,165,172,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,289,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,341,342,343,344,347,349,350,351,352,353,354,355,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,452,454,455,456,457,458,459,464,466,],[38,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,69,38,-132,-169,-170,-171,-145,-146,-133,-129,38,38,38,38,-123,-124,-125,-126,-127,124,38,69,69,69,69,69,69,-131,38,-130,-132,-133,-129,-82,-88,-89,-90,-91,159,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,38,69,-201,69,69,-134,-120,-122,-83,220,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,38,-52,-183,38,38,-92,-160,-164,-159,-162,-157,-14,-43,-45,38,-16,-16,38,323,-156,-163,-44,-46,38,-51,-16,38,38,-173,-16,-41,38,-50,-16,-54,-56,-53,38,-55,38,38,-172,38,-178,-93,-94,-95,387,388,-42,-16,38,-174,-176,-137,-147,-138,-148,38,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,38,38,-144,-154,-143,-153,-48,38,38,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,24,29,31,33,34,35,36,37,38,39,46,55,56,57,58,59,60,62,66,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,149,153,159,160,165,178,185,189,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,249,250,253,259,260,263,264,266,267,269,270,280,281,283,285,286,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[17,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,17,78,-132,-169,-170,-171,-145,-146,-133,-129,114,17,17,17,17,17,17,-131,17,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,78,-119,-121,-28,-193,-194,-195,-196,-197,-198,17,17,-201,17,17,-134,-120,-122,78,-83,-16,-106,236,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,17,-52,-183,17,78,17,-92,-160,-164,-159,-162,-157,-14,-43,-45,17,-16,-16,17,78,-156,-163,-44,-46,17,-51,-16,17,17,-173,-16,-41,17,-50,-16,-54,-56,-53,-55,17,-172,17,-178,-93,-94,-95,-42,-16,17,-174,-176,-137,-147,-138,-148,17,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,161,165,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,342,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[40,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,40,-134,-120,-122,40,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,40,-52,-183,40,40,-92,-160,-164,-159,-162,-157,-14,-43,-45,40,-16,-16,40,-156,-163,-44,-46,40,-51,-16,40,40,-173,-16,-41,40,-50,-16,-54,-56,-53,-55,40,-172,40,-178,-93,-94,-95,-42,-16,40,-174,-176,-137,-147,-138,-148,40,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'PARLEFT':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,24,26,27,30,31,33,34,35,36,37,38,39,42,43,44,45,54,55,56,57,58,59,60,62,65,66,67,68,69,74,76,78,79,80,81,88,90,91,93,94,95,96,97,98,99,100,101,102,104,105,106,107,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,133,134,135,138,146,147,148,149,153,159,165,169,175,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,244,250,253,259,260,263,264,266,267,269,270,280,281,283,285,295,296,299,301,302,306,313,314,315,316,317,332,333,334,335,336,338,340,341,342,343,344,347,349,350,351,352,353,364,365,367,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,452,454,455,456,457,458,459,464,466,],[27,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,66,72,27,82,-132,-169,-170,-171,-145,-146,-133,-129,27,27,27,27,27,27,27,27,27,27,27,-131,135,27,-130,-132,-133,-129,-82,-88,-89,-90,-91,160,-35,-24,164,-32,-33,-34,-36,-37,-155,-29,-30,-31,-202,-203,-25,166,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,27,66,-201,27,27,188,-104,-105,-134,-120,-122,-83,214,223,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,27,-52,-183,27,27,-92,-160,-164,-159,-162,-157,-14,-43,-45,27,-16,-16,27,-156,-163,-44,-46,27,-51,-16,27,27,-173,-16,-41,27,-50,-16,-54,-56,-53,27,-55,27,27,-172,27,-178,-93,-94,-95,-42,-16,27,-174,-176,-137,-147,-138,-148,27,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,27,27,-144,-154,-143,-153,-48,27,27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,149,153,159,165,185,190,196,199,206,208,209,213,217,219,221,222,225,235,239,253,259,260,263,264,266,269,270,295,296,299,301,306,316,332,334,336,338,340,342,347,350,351,352,353,364,384,385,390,392,394,396,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,-134,-120,-122,-83,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,-52,-183,-92,-160,-164,-159,-162,-157,-43,-45,-156,-163,-44,-46,-51,-173,-41,-50,-54,-56,-53,-55,-172,-178,-93,-94,-95,-42,-174,-176,-137,-147,-138,-148,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,132,149,153,159,165,178,185,190,196,199,206,208,209,213,217,219,221,222,225,226,235,239,250,253,259,260,263,264,266,267,269,270,283,285,295,296,299,301,306,315,316,317,332,333,334,336,338,340,342,347,349,350,351,352,353,364,365,384,385,390,392,394,396,401,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,179,-134,-120,-122,-83,-16,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,268,-52,-183,284,-92,-160,-164,-159,-162,-157,-14,-43,-45,-16,318,-156,-163,-44,-46,-51,348,-173,-16,-41,366,-50,-54,-56,-53,-55,-172,386,-178,-93,-94,-95,-42,-16,-174,-176,-137,-147,-138,-148,428,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'LLAVERIGHT':([2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,149,153,155,157,159,165,178,185,190,192,194,196,199,206,208,209,213,217,219,221,222,225,226,227,235,239,245,246,247,248,253,259,260,263,264,266,267,269,270,276,283,284,295,296,298,299,301,304,306,307,309,311,315,316,317,318,320,321,322,332,334,335,336,338,340,342,345,346,347,348,349,350,351,352,353,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,392,394,396,401,402,403,404,406,408,410,412,413,414,420,422,424,426,427,429,438,439,440,441,446,455,456,457,458,459,461,463,465,467,468,469,470,471,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,-134,-120,196,199,-122,-83,-16,-106,-115,239,-187,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,269,270,-52,-183,-97,-96,-99,-98,-92,-160,-164,-159,-162,-157,-14,-43,-45,306,-16,316,-156,-163,332,-44,-46,336,-51,338,340,342,347,-173,-16,350,351,352,353,-41,-50,-16,-54,-56,-53,-55,-191,-192,-172,384,385,-178,-93,-94,-95,-42,-16,403,-68,-64,-67,-76,-79,-80,-81,-58,-61,-62,-70,-73,-74,-184,-185,413,-174,-176,414,-101,-100,-137,-147,-138,-148,427,429,-85,-63,-75,-57,-69,-186,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,459,-144,-154,-143,-153,-48,-66,-78,-60,-72,-65,-77,-59,-71,]),'BREAK':([2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,149,153,159,165,185,190,196,199,206,208,209,213,217,219,221,222,225,235,239,253,259,260,263,264,266,267,269,270,281,295,296,299,301,306,313,314,316,332,334,336,338,340,342,344,347,350,351,352,353,364,384,385,390,392,394,396,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,-134,-120,-122,-83,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,-52,-183,-92,-160,-164,-159,-162,-157,-14,-43,-45,-16,-156,-163,-44,-46,-51,-16,345,-173,-41,-50,-54,-56,-53,-55,381,-172,-178,-93,-94,-95,-42,-174,-176,-137,-147,-138,-148,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'CONTINUE':([2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,22,31,33,34,35,36,37,38,39,62,67,68,69,74,76,78,79,80,81,90,91,94,95,96,97,98,100,101,102,104,105,106,109,110,111,112,113,119,123,124,125,126,127,128,129,130,131,149,153,159,165,185,190,196,199,206,208,209,213,217,219,221,222,225,235,239,253,259,260,263,264,266,267,269,270,281,295,296,299,301,306,313,314,316,332,334,336,338,340,342,344,347,350,351,352,353,364,384,385,390,392,394,396,403,413,414,420,422,424,426,427,429,438,439,440,441,455,456,457,458,459,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-204,-117,-118,-23,-128,-132,-169,-170,-171,-145,-146,-133,-129,-131,-130,-132,-133,-129,-82,-88,-89,-90,-91,-35,-24,-32,-33,-34,-36,-37,-29,-30,-31,-202,-203,-25,-40,-26,-38,-39,-27,-22,-119,-121,-28,-193,-194,-195,-196,-197,-198,-134,-120,-122,-83,-106,-115,-135,-136,-13,-161,-165,-17,-18,-19,-20,-21,-158,-52,-183,-92,-160,-164,-159,-162,-157,-14,-43,-45,-16,-156,-163,-44,-46,-51,-16,346,-173,-41,-50,-54,-56,-53,-55,382,-172,-178,-93,-94,-95,-42,-174,-176,-137,-147,-138,-148,-85,-175,-177,-140,-150,-139,-149,-47,-49,-141,-151,-142,-152,-144,-154,-143,-153,-48,]),'DECLARADOR':([15,46,71,],[42,120,139,]),'IGUAL':([15,21,46,76,77,78,79,80,81,114,116,117,118,119,],[43,54,115,-82,-84,-88,-89,-90,-91,168,171,172,173,174,]),'MASIGUAL':([15,],[44,]),'MENOSIGUAL':([15,],[45,]),'MAYORQUE':([15,17,23,31,38,39,62,67,68,69,137,149,],[-131,-204,55,-132,-133,-130,-131,-130,-132,-133,-130,-134,]),'MENORQUE':([15,17,23,31,38,39,62,67,68,69,137,149,],[-131,-204,56,-132,-133,-130,-131,-130,-132,-133,-130,-134,]),'DIFERENTE':([15,17,23,31,38,39,62,67,68,69,137,149,],[-131,-204,57,-132,-133,-130,-131,-130,-132,-133,-130,-134,]),'ESIGUAL':([15,17,23,31,38,39,62,67,68,69,137,149,],[-131,-204,58,-132,-133,-130,-131,-130,-132,-133,-130,-134,]),'MENORIGUAL':([15,17,23,31,38,39,62,67,68,69,137,149,],[-131,-204,59,-132,-133,-130,-131,-130,-132,-133,-130,-134,]),'MAYORIGUAL':([15,17,23,31,38,39,62,67,68,69,137,149,],[-131,-204,60,-132,-133,-130,-131,-130,-132,-133,-130,-134,]),'AND':([17,42,43,54,62,63,64,67,68,69,126,127,128,129,130,131,149,168,182,228,339,450,462,],[-204,104,104,104,-131,104,-166,-130,-132,-133,-193,-194,-195,-196,-197,-198,-134,104,-168,-167,104,104,104,]),'OR':([17,42,43,54,62,63,64,67,68,69,126,127,128,129,130,131,149,168,182,228,339,450,462,],[-204,105,105,105,-131,105,-166,-130,-132,-133,-193,-194,-195,-196,-197,-198,-134,105,-168,-167,105,105,105,]),'LLAVELEFT':([17,36,37,61,62,63,64,67,68,69,84,126,127,128,129,130,131,149,180,182,203,208,209,225,228,233,234,236,237,238,251,254,255,256,259,260,263,264,266,271,295,296,300,303,],[-204,85,86,132,-131,-199,-166,-130,-132,-133,154,-193,-194,-195,-196,-197,-198,-134,-200,-168,250,-161,-165,-158,-167,275,276,277,278,279,285,287,288,289,-160,-164,-159,-162,-157,302,-156,-163,333,-87,]),'PARRIGHT':([17,18,19,22,31,38,62,67,68,69,72,73,74,123,124,126,127,128,129,130,131,136,137,140,141,142,143,144,145,149,151,153,159,160,181,186,187,191,202,204,230,231,232,252,273,274,282,319,356,357,358,359,397,398,399,400,415,416,417,418,442,443,444,445,],[-204,-117,-118,-128,-132,-133,-131,-130,-132,-133,-114,149,-129,-119,-121,-193,-194,-195,-196,-197,-198,182,-129,185,-108,-111,-112,-113,-102,-134,190,-120,-122,203,228,-107,-114,-116,-179,251,-114,-110,274,-181,-109,-103,-180,-182,390,392,394,396,420,422,424,426,438,439,440,441,455,456,457,458,]),'PUNTOCOMA':([17,62,67,68,69,70,126,127,128,129,130,131,149,183,184,],[-204,-131,-130,-132,-133,138,-193,-194,-195,-196,-197,-198,-134,229,-86,]),'COMA':([18,19,22,31,38,72,74,104,105,123,124,141,142,143,144,145,149,153,155,156,157,158,159,186,187,202,230,231,245,246,247,248,252,273,274,290,291,292,293,320,321,322,323,328,329,330,331,356,357,358,359,368,369,370,371,372,373,374,375,376,377,378,379,380,387,388,397,398,399,400,404,406,408,410,461,463,465,467,468,469,470,471,],[-117,-118,-128,-132,-133,-114,-129,-202,-203,-119,-121,187,-111,-112,-113,-102,-134,-120,197,198,200,201,-122,230,-114,249,-114,-110,-97,-96,-99,-98,286,-109,-103,324,325,326,327,197,200,354,355,360,361,362,363,389,391,393,395,-68,405,-67,407,-79,-80,-81,409,-61,-62,411,-73,-74,-101,-100,419,421,423,425,430,432,434,436,-66,-78,-60,-72,-65,-77,-59,-71,]),'SUMA':([18,19,31,38,123,124,153,159,217,218,219,220,],[48,48,48,48,-119,-121,-120,-122,48,48,48,48,]),'RESTA':([18,19,31,38,123,124,153,159,217,218,219,220,],[49,49,49,49,-119,-121,-120,-122,49,49,49,49,]),'DIVISION':([18,19,31,38,123,124,153,159,217,218,219,220,],[51,51,51,51,-119,-121,-120,-122,51,51,51,51,]),'MODULO':([18,19,31,38,123,124,153,159,217,218,219,220,],[52,52,52,52,-119,-121,-120,-122,52,52,52,52,]),'NEGACION':([24,104,105,133,134,],[65,-202,-203,65,-201,]),'CORCHLEFT':([28,42,43,46,115,164,166,214,223,],[75,92,108,121,170,210,211,261,265,]),'INT':([29,46,122,160,163,177,189,207,212,216,224,249,257,258,262,286,294,297,],[79,116,79,79,208,225,237,254,259,263,266,79,290,292,295,79,328,330,]),'FLOAT':([29,46,122,160,189,207,249,286,],[80,117,80,80,238,256,80,80,]),'STRING':([29,46,75,122,160,163,189,207,212,216,249,257,258,262,286,294,297,],[81,118,150,81,81,209,233,255,260,264,81,291,293,296,81,329,331,]),'IMPORT':([41,],[89,]),'CADENA':([42,43,44,54,72,86,89,173,187,193,200,201,230,275,277,278,279,288,337,405,407,409,411,430,432,434,436,448,460,],[96,96,112,96,142,158,161,221,142,242,247,248,142,305,308,310,312,158,368,431,433,435,437,447,449,451,453,368,368,]),'MAKE':([42,43,115,120,],[99,99,99,99,]),'TRUE':([42,43,54,168,339,450,462,],[101,101,101,101,373,373,373,]),'FALSE':([42,43,54,168,339,450,462,],[102,102,102,102,374,374,374,]),'AMPERSAND':([42,43,54,82,174,],[103,103,103,152,103,]),'LEN':([72,187,230,],[147,147,147,]),'CAP':([72,187,230,],[148,148,148,]),'CORCHRIGHT':([92,121,150,162,167,170,176,210,211,215,261,265,],[163,177,189,207,212,216,224,257,258,262,294,297,]),'CASE':([154,381,],[193,193,]),'DEFAULT':([154,381,],[195,195,]),'DOSPUNTOS':([195,240,241,242,243,305,308,310,312,431,433,435,437,447,449,451,453,],[244,280,-188,-189,-190,337,339,341,343,448,450,452,454,460,462,464,466,]),'ELSE':([269,270,332,],[300,300,300,]),'INCREMENTO':([272,],[303,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[1,178,267,281,283,313,317,335,267,267,365,267,267,267,267,]),'asignacion':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'expresion':([0,27,42,43,44,45,54,66,132,226,244,250,280,285,302,314,315,333,341,343,344,349,367,401,452,454,464,466,],[3,73,95,95,111,113,95,73,3,3,3,3,3,3,3,3,3,3,377,380,3,3,3,3,377,380,377,380,]),'condiciones':([0,24,66,132,133,135,138,226,244,250,280,285,302,314,315,333,344,349,367,401,],[4,64,136,4,64,181,183,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'sentenciaIf':([0,132,226,244,250,280,285,300,302,314,315,333,344,349,367,401,],[5,5,5,5,5,5,5,334,5,5,5,5,5,5,5,5,]),'sentenciaFor':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'print':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'mapa':([0,42,43,54,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[8,97,97,97,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'puntero':([0,46,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[9,119,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'lectura':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'array':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'switch':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'funcion':([0,132,161,226,244,250,280,285,302,314,315,333,344,349,367,401,],[13,13,206,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expresionInt':([0,27,42,43,44,45,54,66,132,171,226,244,250,280,285,302,314,315,333,341,343,344,349,367,401,452,454,464,466,],[18,18,18,18,18,18,18,18,18,217,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'expresionFloat':([0,27,42,43,44,45,54,66,132,172,226,244,250,280,285,302,314,315,333,341,343,344,349,367,401,452,454,464,466,],[19,19,19,19,19,19,19,19,19,219,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'slices':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'derefer':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'term':([0,27,42,43,44,45,54,66,132,226,244,250,280,285,302,314,315,333,341,343,344,349,367,401,452,454,464,466,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'factor':([0,24,55,56,57,58,59,60,66,132,133,135,138,226,244,250,280,285,302,314,315,333,344,349,367,401,],[23,23,126,127,128,129,130,131,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'funcion_sin_parametro':([0,132,161,226,244,250,280,285,302,314,315,333,344,349,367,401,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'funcion_parametro':([0,132,161,226,244,250,280,285,302,314,315,333,344,349,367,401,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'funcion_sin_parametro_return':([0,132,161,226,244,250,280,285,302,314,315,333,344,349,367,401,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'declaracion_slices_enteros':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'declaracion_slices_strings':([0,132,226,244,250,280,285,302,314,315,333,344,349,367,401,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'numericos':([0,24,27,42,43,44,45,54,55,56,57,58,59,60,66,132,133,135,138,226,244,250,280,285,302,314,315,333,341,343,344,349,367,401,452,454,464,466,],[39,67,74,74,74,74,74,74,67,67,67,67,67,67,137,39,67,67,67,39,39,39,39,39,39,39,39,39,74,74,39,39,39,39,74,74,74,74,]),'operadorArit':([18,19,31,38,217,218,219,220,],[47,53,83,87,47,83,53,87,]),'comparaciones':([24,133,],[61,180,]),'comparacion':([24,133,],[63,63,]),'inicio':([25,],[70,]),'typeData':([29,122,160,189,249,286,],[76,76,205,234,205,205,]),'valor':([42,43,54,],[91,106,125,]),'metodos_slices':([42,43,115,120,],[93,107,169,175,]),'booleano':([42,43,54,168,],[94,94,94,213,]),'refer':([42,43,54,174,],[98,98,98,222,]),'condicion':([42,43,54,63,168,339,450,462,],[100,100,100,134,100,372,372,372,]),'acumular':([44,],[110,]),'anado':([63,],[133,]),'contPrint':([72,],[140,]),'contenido':([72,187,230,],[141,231,273,]),'method':([72,187,230,],[144,144,144,]),'methodArray':([72,187,230,],[145,145,145,]),'namemetodoArr':([72,187,230,],[146,146,146,]),'contScan':([82,],[151,]),'contArrayEnteros':([85,287,],[155,320,]),'contArrayCadenas':([86,288,],[157,321,]),'masCont':([141,],[186,]),'bloque_switch':([154,381,],[192,412,]),'switch_default':([154,381,],[194,194,]),'parametros':([160,249,286,],[204,282,319,]),'masInstrucciones':([178,281,283,313,317,335,365,],[226,314,315,344,349,367,401,]),'contMapa':([189,],[235,]),'caso_switch':([193,],[240,]),'contArray':([207,],[253,]),'incrementa':([229,],[271,]),'else':([269,270,332,],[299,301,364,]),'parCadena':([275,],[304,]),'parBoolean':([277,],[307,]),'parEntero':([278,],[309,]),'parFlotante':([279,],[311,]),'contArrayFloat':([289,],[322,]),'datoCadena':([337,448,460,],[369,461,468,]),'datoBoolean':([339,450,462,],[371,463,469,]),'datoEntero':([341,452,464,],[375,465,470,]),'datoFlotante':([343,454,466,],[378,467,471,]),'masCadena':([369,],[404,]),'masBoolean':([371,],[406,]),'masEntero':([375,],[408,]),'masFlotante':([378,],[410,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',9),
  ('instrucciones -> expresion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',10),
  ('instrucciones -> condiciones','instrucciones',1,'p_instrucciones','analizadorSintactico.py',11),
  ('instrucciones -> sentenciaIf','instrucciones',1,'p_instrucciones','analizadorSintactico.py',12),
  ('instrucciones -> sentenciaFor','instrucciones',1,'p_instrucciones','analizadorSintactico.py',13),
  ('instrucciones -> print','instrucciones',1,'p_instrucciones','analizadorSintactico.py',14),
  ('instrucciones -> mapa','instrucciones',1,'p_instrucciones','analizadorSintactico.py',15),
  ('instrucciones -> puntero','instrucciones',1,'p_instrucciones','analizadorSintactico.py',16),
  ('instrucciones -> lectura','instrucciones',1,'p_instrucciones','analizadorSintactico.py',17),
  ('instrucciones -> array','instrucciones',1,'p_instrucciones','analizadorSintactico.py',18),
  ('instrucciones -> switch','instrucciones',1,'p_instrucciones','analizadorSintactico.py',19),
  ('instrucciones -> funcion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',20),
  ('instrucciones -> PACKAGE VARIABLE IMPORT CADENA funcion','instrucciones',5,'p_instrucciones','analizadorSintactico.py',21),
  ('masInstrucciones -> masInstrucciones instrucciones','masInstrucciones',2,'p_masInstrucciones','analizadorSintactico.py',24),
  ('masInstrucciones -> masInstrucciones','masInstrucciones',1,'p_masInstrucciones','analizadorSintactico.py',25),
  ('masInstrucciones -> <empty>','masInstrucciones',0,'p_masInstrucciones','analizadorSintactico.py',26),
  ('asignacion -> VAR VARIABLE BOOL IGUAL booleano','asignacion',5,'p_asignacion','analizadorSintactico.py',30),
  ('asignacion -> VAR VARIABLE INT IGUAL expresionInt','asignacion',5,'p_asignacion','analizadorSintactico.py',31),
  ('asignacion -> VAR VARIABLE FLOAT IGUAL expresionFloat','asignacion',5,'p_asignacion','analizadorSintactico.py',32),
  ('asignacion -> VAR VARIABLE STRING IGUAL CADENA','asignacion',5,'p_asignacion','analizadorSintactico.py',33),
  ('asignacion -> VAR VARIABLE puntero IGUAL refer','asignacion',5,'p_asignacion','analizadorSintactico.py',34),
  ('asignacion -> VAR VARIABLE puntero','asignacion',3,'p_asignacion','analizadorSintactico.py',35),
  ('asignacion -> slices','asignacion',1,'p_asignacion','analizadorSintactico.py',36),
  ('asignacion -> VARIABLE DECLARADOR valor','asignacion',3,'p_asignacion','analizadorSintactico.py',37),
  ('asignacion -> VARIABLE IGUAL valor','asignacion',3,'p_asignacion','analizadorSintactico.py',38),
  ('asignacion -> VARIABLE MASIGUAL acumular','asignacion',3,'p_asignacion','analizadorSintactico.py',39),
  ('asignacion -> VARIABLE MENOSIGUAL expresion','asignacion',3,'p_asignacion','analizadorSintactico.py',40),
  ('asignacion -> derefer IGUAL valor','asignacion',3,'p_asignacion','analizadorSintactico.py',41),
  ('booleano -> condicion','booleano',1,'p_asignacion','analizadorSintactico.py',42),
  ('booleano -> TRUE','booleano',1,'p_asignacion','analizadorSintactico.py',43),
  ('booleano -> FALSE','booleano',1,'p_asignacion','analizadorSintactico.py',44),
  ('valor -> booleano','valor',1,'p_asignacion','analizadorSintactico.py',45),
  ('valor -> expresion','valor',1,'p_asignacion','analizadorSintactico.py',46),
  ('valor -> CADENA','valor',1,'p_asignacion','analizadorSintactico.py',47),
  ('valor -> VARIABLE','valor',1,'p_asignacion','analizadorSintactico.py',48),
  ('valor -> mapa','valor',1,'p_asignacion','analizadorSintactico.py',49),
  ('valor -> refer','valor',1,'p_asignacion','analizadorSintactico.py',50),
  ('acumular -> expresion','acumular',1,'p_asignacion','analizadorSintactico.py',51),
  ('acumular -> CADENA','acumular',1,'p_asignacion','analizadorSintactico.py',52),
  ('acumular -> VARIABLE','acumular',1,'p_asignacion','analizadorSintactico.py',53),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones masInstrucciones RETURN VARIABLE LLAVERIGHT','sentenciaIf',8,'p_sentenciaIf','analizadorSintactico.py',57),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones masInstrucciones RETURN VARIABLE LLAVERIGHT else','sentenciaIf',9,'p_sentenciaIf','analizadorSintactico.py',58),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones masInstrucciones LLAVERIGHT','sentenciaIf',6,'p_sentenciaIf','analizadorSintactico.py',59),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones masInstrucciones LLAVERIGHT else','sentenciaIf',7,'p_sentenciaIf','analizadorSintactico.py',60),
  ('sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT','sentenciaIf',6,'p_sentenciaIf','analizadorSintactico.py',61),
  ('sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else','sentenciaIf',7,'p_sentenciaIf','analizadorSintactico.py',62),
  ('else -> ELSE LLAVELEFT instrucciones masInstrucciones LLAVERIGHT','else',5,'p_sentenciaIf','analizadorSintactico.py',63),
  ('else -> ELSE LLAVELEFT instrucciones masInstrucciones RETURN VARIABLE LLAVERIGHT','else',7,'p_sentenciaIf','analizadorSintactico.py',64),
  ('else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT','else',5,'p_sentenciaIf','analizadorSintactico.py',65),
  ('else -> ELSE sentenciaIf','else',2,'p_sentenciaIf','analizadorSintactico.py',66),
  ('mapa -> MAP CORCHLEFT STRING CORCHRIGHT typeData LLAVELEFT LLAVERIGHT','mapa',7,'p_mapa','analizadorSintactico.py',70),
  ('mapa -> MAP CORCHLEFT STRING CORCHRIGHT contMapa','mapa',5,'p_mapa','analizadorSintactico.py',71),
  ('contMapa -> INT LLAVELEFT parEntero LLAVERIGHT','contMapa',4,'p_contenidoMapa','analizadorSintactico.py',75),
  ('contMapa -> STRING LLAVELEFT parCadena LLAVERIGHT','contMapa',4,'p_contenidoMapa','analizadorSintactico.py',76),
  ('contMapa -> FLOAT LLAVELEFT parFlotante LLAVERIGHT','contMapa',4,'p_contenidoMapa','analizadorSintactico.py',77),
  ('contMapa -> BOOL LLAVELEFT parBoolean LLAVERIGHT','contMapa',4,'p_contenidoMapa','analizadorSintactico.py',78),
  ('parEntero -> CADENA DOSPUNTOS datoEntero masEntero','parEntero',4,'p_mapaEntero','analizadorSintactico.py',81),
  ('parEntero -> CADENA DOSPUNTOS datoEntero','parEntero',3,'p_mapaEntero','analizadorSintactico.py',82),
  ('masEntero -> masEntero COMA CADENA DOSPUNTOS datoEntero','masEntero',5,'p_mapaEntero','analizadorSintactico.py',83),
  ('masEntero -> COMA CADENA DOSPUNTOS datoEntero','masEntero',4,'p_mapaEntero','analizadorSintactico.py',84),
  ('datoEntero -> VARIABLE','datoEntero',1,'p_mapaEntero','analizadorSintactico.py',85),
  ('datoEntero -> expresion','datoEntero',1,'p_mapaEntero','analizadorSintactico.py',86),
  ('parCadena -> CADENA DOSPUNTOS datoCadena masCadena','parCadena',4,'p_mapaCadena','analizadorSintactico.py',89),
  ('parCadena -> CADENA DOSPUNTOS datoCadena','parCadena',3,'p_mapaCadena','analizadorSintactico.py',90),
  ('masCadena -> masCadena COMA CADENA DOSPUNTOS datoCadena','masCadena',5,'p_mapaCadena','analizadorSintactico.py',91),
  ('masCadena -> COMA CADENA DOSPUNTOS datoCadena','masCadena',4,'p_mapaCadena','analizadorSintactico.py',92),
  ('datoCadena -> VARIABLE','datoCadena',1,'p_mapaCadena','analizadorSintactico.py',93),
  ('datoCadena -> CADENA','datoCadena',1,'p_mapaCadena','analizadorSintactico.py',94),
  ('parFlotante -> CADENA DOSPUNTOS datoFlotante masFlotante','parFlotante',4,'p_mapaFlotante','analizadorSintactico.py',97),
  ('parFlotante -> CADENA DOSPUNTOS datoFlotante','parFlotante',3,'p_mapaFlotante','analizadorSintactico.py',98),
  ('masFlotante -> masFlotante COMA CADENA DOSPUNTOS datoFlotante','masFlotante',5,'p_mapaFlotante','analizadorSintactico.py',99),
  ('masFlotante -> COMA CADENA DOSPUNTOS datoFlotante','masFlotante',4,'p_mapaFlotante','analizadorSintactico.py',100),
  ('datoFlotante -> VARIABLE','datoFlotante',1,'p_mapaFlotante','analizadorSintactico.py',101),
  ('datoFlotante -> expresion','datoFlotante',1,'p_mapaFlotante','analizadorSintactico.py',102),
  ('parBoolean -> CADENA DOSPUNTOS datoBoolean masBoolean','parBoolean',4,'p_mapaBooleano','analizadorSintactico.py',105),
  ('parBoolean -> CADENA DOSPUNTOS datoBoolean','parBoolean',3,'p_mapaBooleano','analizadorSintactico.py',106),
  ('masBoolean -> masBoolean COMA CADENA DOSPUNTOS datoBoolean','masBoolean',5,'p_mapaBooleano','analizadorSintactico.py',107),
  ('masBoolean -> COMA CADENA DOSPUNTOS datoBoolean','masBoolean',4,'p_mapaBooleano','analizadorSintactico.py',108),
  ('datoBoolean -> condicion','datoBoolean',1,'p_mapaBooleano','analizadorSintactico.py',109),
  ('datoBoolean -> TRUE','datoBoolean',1,'p_mapaBooleano','analizadorSintactico.py',110),
  ('datoBoolean -> FALSE','datoBoolean',1,'p_mapaBooleano','analizadorSintactico.py',111),
  ('puntero -> PRODUCTO typeData','puntero',2,'p_puntero','analizadorSintactico.py',117),
  ('refer -> AMPERSAND VARIABLE','refer',2,'p_puntero','analizadorSintactico.py',118),
  ('derefer -> PRODUCTO VARIABLE','derefer',2,'p_puntero','analizadorSintactico.py',119),
  ('sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones masInstrucciones LLAVERIGHT','sentenciaFor',10,'p_sentenciaFor','analizadorSintactico.py',123),
  ('inicio -> VARIABLE DECLARADOR ENTERO','inicio',3,'p_sentenciaFor','analizadorSintactico.py',124),
  ('incrementa -> VARIABLE INCREMENTO','incrementa',2,'p_sentenciaFor','analizadorSintactico.py',125),
  ('typeData -> BOOL','typeData',1,'p_typeData','analizadorSintactico.py',129),
  ('typeData -> INT','typeData',1,'p_typeData','analizadorSintactico.py',130),
  ('typeData -> FLOAT','typeData',1,'p_typeData','analizadorSintactico.py',131),
  ('typeData -> STRING','typeData',1,'p_typeData','analizadorSintactico.py',132),
  ('array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT contArray','array',6,'p_array','analizadorSintactico.py',139),
  ('contArray -> INT LLAVELEFT contArrayEnteros LLAVERIGHT','contArray',4,'p_contenidoArray','analizadorSintactico.py',142),
  ('contArray -> STRING LLAVELEFT contArrayCadenas LLAVERIGHT','contArray',4,'p_contenidoArray','analizadorSintactico.py',143),
  ('contArray -> FLOAT LLAVELEFT contArrayFloat LLAVERIGHT','contArray',4,'p_contenidoArray','analizadorSintactico.py',144),
  ('contArrayEnteros -> ENTERO COMA ENTERO','contArrayEnteros',3,'p_ArrayEnteros','analizadorSintactico.py',147),
  ('contArrayEnteros -> contArrayEnteros COMA ENTERO','contArrayEnteros',3,'p_ArrayEnteros','analizadorSintactico.py',148),
  ('contArrayCadenas -> CADENA COMA CADENA','contArrayCadenas',3,'p_ArrayCadenas','analizadorSintactico.py',151),
  ('contArrayCadenas -> contArrayCadenas COMA CADENA','contArrayCadenas',3,'p_ArrayCadenas','analizadorSintactico.py',152),
  ('contArrayFloat -> FLOTANTE COMA FLOTANTE','contArrayFloat',3,'p_ArrayFlotante','analizadorSintactico.py',155),
  ('contArrayFloat -> contArrayFloat COMA FLOTANTE','contArrayFloat',3,'p_ArrayFlotante','analizadorSintactico.py',156),
  ('method -> methodArray','method',1,'p_methodGeneral','analizadorSintactico.py',160),
  ('methodArray -> namemetodoArr PARLEFT VARIABLE PARRIGHT','methodArray',4,'p_methodArray','analizadorSintactico.py',164),
  ('namemetodoArr -> LEN','namemetodoArr',1,'p_methodArray','analizadorSintactico.py',165),
  ('namemetodoArr -> CAP','namemetodoArr',1,'p_methodArray','analizadorSintactico.py',166),
  ('print -> IMPRIMIR PARLEFT contPrint PARRIGHT','print',4,'p_print','analizadorSintactico.py',170),
  ('contPrint -> contenido masCont','contPrint',2,'p_contenidoPrint','analizadorSintactico.py',173),
  ('contPrint -> contenido','contPrint',1,'p_contenidoPrint','analizadorSintactico.py',174),
  ('masCont -> masCont COMA contenido','masCont',3,'p_contenidoPrint','analizadorSintactico.py',175),
  ('masCont -> COMA contenido','masCont',2,'p_contenidoPrint','analizadorSintactico.py',176),
  ('contenido -> CADENA','contenido',1,'p_contenidoPrint','analizadorSintactico.py',177),
  ('contenido -> VARIABLE','contenido',1,'p_contenidoPrint','analizadorSintactico.py',178),
  ('contenido -> method','contenido',1,'p_contenidoPrint','analizadorSintactico.py',179),
  ('contenido -> <empty>','contenido',0,'p_contenidoPrint','analizadorSintactico.py',180),
  ('lectura -> SCAN PARLEFT contScan PARRIGHT','lectura',4,'p_lectura','analizadorSintactico.py',184),
  ('contScan -> AMPERSAND VARIABLE','contScan',2,'p_contenidoScan','analizadorSintactico.py',187),
  ('expresion -> expresionInt','expresion',1,'p_aritmetica_expresion','analizadorSintactico.py',191),
  ('expresion -> expresionFloat','expresion',1,'p_aritmetica_expresion','analizadorSintactico.py',192),
  ('expresionInt -> expresionInt operadorArit ENTERO','expresionInt',3,'p_aritmetica_expresion','analizadorSintactico.py',193),
  ('expresionInt -> ENTERO operadorArit ENTERO','expresionInt',3,'p_aritmetica_expresion','analizadorSintactico.py',194),
  ('expresionFloat -> expresionFloat operadorArit FLOTANTE','expresionFloat',3,'p_aritmetica_expresion','analizadorSintactico.py',195),
  ('expresionFloat -> FLOTANTE operadorArit FLOTANTE','expresionFloat',3,'p_aritmetica_expresion','analizadorSintactico.py',196),
  ('operadorArit -> SUMA','operadorArit',1,'p_operador_aritmetico','analizadorSintactico.py',199),
  ('operadorArit -> RESTA','operadorArit',1,'p_operador_aritmetico','analizadorSintactico.py',200),
  ('operadorArit -> PRODUCTO','operadorArit',1,'p_operador_aritmetico','analizadorSintactico.py',201),
  ('operadorArit -> DIVISION','operadorArit',1,'p_operador_aritmetico','analizadorSintactico.py',202),
  ('operadorArit -> MODULO','operadorArit',1,'p_operador_aritmetico','analizadorSintactico.py',203),
  ('expresion -> term','expresion',1,'p_expression_term','analizadorSintactico.py',206),
  ('term -> numericos','term',1,'p_term_factor','analizadorSintactico.py',210),
  ('factor -> numericos','factor',1,'p_factor_num','analizadorSintactico.py',214),
  ('factor -> VARIABLE','factor',1,'p_factor_var','analizadorSintactico.py',217),
  ('numericos -> ENTERO','numericos',1,'p_numericos','analizadorSintactico.py',220),
  ('numericos -> FLOTANTE','numericos',1,'p_numericos','analizadorSintactico.py',221),
  ('numericos -> PARLEFT expresion PARRIGHT','numericos',3,'p_factor_exp','analizadorSintactico.py',224),
  ('slices -> declaracion_slices_enteros LLAVELEFT contArrayEnteros LLAVERIGHT','slices',4,'p_estructura_slice','analizadorSintactico.py',231),
  ('slices -> declaracion_slices_strings LLAVELEFT contArrayCadenas LLAVERIGHT','slices',4,'p_estructura_slice','analizadorSintactico.py',232),
  ('slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO PARRIGHT','slices',10,'p_estructura_slice','analizadorSintactico.py',233),
  ('slices -> VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO PARRIGHT','slices',10,'p_estructura_slice','analizadorSintactico.py',234),
  ('slices -> VAR VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO PARRIGHT','slices',11,'p_estructura_slice','analizadorSintactico.py',235),
  ('slices -> VAR VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO PARRIGHT','slices',11,'p_estructura_slice','analizadorSintactico.py',236),
  ('slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO COMA ENTERO PARRIGHT','slices',12,'p_estructura_slice','analizadorSintactico.py',237),
  ('slices -> VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO COMA ENTERO PARRIGHT','slices',12,'p_estructura_slice','analizadorSintactico.py',238),
  ('slices -> VAR VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO COMA ENTERO PARRIGHT','slices',13,'p_estructura_slice','analizadorSintactico.py',239),
  ('slices -> VAR VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT INT COMA ENTERO COMA ENTERO PARRIGHT','slices',13,'p_estructura_slice','analizadorSintactico.py',240),
  ('slices -> declaracion_slices_enteros','slices',1,'p_estructura_slice','analizadorSintactico.py',241),
  ('slices -> declaracion_slices_strings','slices',1,'p_estructura_slice','analizadorSintactico.py',242),
  ('slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO PARRIGHT','slices',10,'p_estructura_slice','analizadorSintactico.py',243),
  ('slices -> VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO PARRIGHT','slices',10,'p_estructura_slice','analizadorSintactico.py',244),
  ('slices -> VAR VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO PARRIGHT','slices',11,'p_estructura_slice','analizadorSintactico.py',245),
  ('slices -> VAR VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO PARRIGHT','slices',11,'p_estructura_slice','analizadorSintactico.py',246),
  ('slices -> VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO COMA ENTERO PARRIGHT','slices',12,'p_estructura_slice','analizadorSintactico.py',247),
  ('slices -> VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO COMA ENTERO PARRIGHT','slices',12,'p_estructura_slice','analizadorSintactico.py',248),
  ('slices -> VAR VARIABLE DECLARADOR metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO COMA ENTERO PARRIGHT','slices',13,'p_estructura_slice','analizadorSintactico.py',249),
  ('slices -> VAR VARIABLE IGUAL metodos_slices PARLEFT CORCHLEFT CORCHRIGHT STRING COMA ENTERO COMA ENTERO PARRIGHT','slices',13,'p_estructura_slice','analizadorSintactico.py',250),
  ('metodos_slices -> MAKE','metodos_slices',1,'p_estructura_slice','analizadorSintactico.py',251),
  ('declaracion_slices_enteros -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT INT','declaracion_slices_enteros',7,'p_declaracion_slice_enteros','analizadorSintactico.py',254),
  ('declaracion_slices_enteros -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT INT','declaracion_slices_enteros',6,'p_declaracion_slice_enteros','analizadorSintactico.py',255),
  ('declaracion_slices_enteros -> VAR VARIABLE CORCHLEFT CORCHRIGHT INT','declaracion_slices_enteros',5,'p_declaracion_slice_enteros','analizadorSintactico.py',256),
  ('declaracion_slices_enteros -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT INT','declaracion_slices_enteros',6,'p_declaracion_slice_enteros','analizadorSintactico.py',257),
  ('declaracion_slices_enteros -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT INT','declaracion_slices_enteros',6,'p_declaracion_slice_enteros','analizadorSintactico.py',258),
  ('declaracion_slices_enteros -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT INT','declaracion_slices_enteros',5,'p_declaracion_slice_enteros','analizadorSintactico.py',259),
  ('declaracion_slices_strings -> VAR VARIABLE IGUAL CORCHLEFT CORCHRIGHT STRING','declaracion_slices_strings',6,'p_declaracion_slices_strings','analizadorSintactico.py',262),
  ('declaracion_slices_strings -> VAR VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT STRING','declaracion_slices_strings',7,'p_declaracion_slices_strings','analizadorSintactico.py',263),
  ('declaracion_slices_strings -> VARIABLE IGUAL CORCHLEFT ENTERO CORCHRIGHT STRING','declaracion_slices_strings',6,'p_declaracion_slices_strings','analizadorSintactico.py',264),
  ('declaracion_slices_strings -> VARIABLE DECLARADOR CORCHLEFT CORCHRIGHT STRING','declaracion_slices_strings',5,'p_declaracion_slices_strings','analizadorSintactico.py',265),
  ('comparacion -> condiciones','comparacion',1,'p_comparacion','analizadorSintactico.py',267),
  ('comparacion -> NEGACION PARLEFT condiciones PARRIGHT','comparacion',4,'p_comparaciones_negado','analizadorSintactico.py',270),
  ('comparacion -> PARLEFT condiciones PARRIGHT','comparacion',3,'p_comparaciones_paren','analizadorSintactico.py',273),
  ('funcion -> funcion_sin_parametro','funcion',1,'p_funcion','analizadorSintactico.py',277),
  ('funcion -> funcion_parametro','funcion',1,'p_funcion','analizadorSintactico.py',278),
  ('funcion -> funcion_sin_parametro_return','funcion',1,'p_funcion','analizadorSintactico.py',279),
  ('funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones masInstrucciones LLAVERIGHT','funcion_sin_parametro',8,'p_funcion_sin_parameters','analizadorSintactico.py',282),
  ('funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT','funcion_sin_parametro',7,'p_funcion_sin_parameters','analizadorSintactico.py',283),
  ('funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones masInstrucciones RETURN LLAVERIGHT','funcion_sin_parametro',9,'p_funcion_sin_parameters','analizadorSintactico.py',284),
  ('funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones masInstrucciones RETURN VARIABLE LLAVERIGHT','funcion_sin_parametro_return',10,'p_funcion_sin_parameters_return','analizadorSintactico.py',287),
  ('funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones masInstrucciones LLAVERIGHT','funcion_parametro',9,'p_funcion_parameters','analizadorSintactico.py',290),
  ('funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones masInstrucciones RETURN LLAVERIGHT','funcion_parametro',10,'p_funcion_parameters','analizadorSintactico.py',291),
  ('funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT','funcion_parametro',8,'p_funcion_parameters','analizadorSintactico.py',292),
  ('parametros -> VARIABLE','parametros',1,'p_parametros','analizadorSintactico.py',295),
  ('parametros -> VARIABLE COMA parametros','parametros',3,'p_parametros','analizadorSintactico.py',296),
  ('parametros -> typeData VARIABLE','parametros',2,'p_parametros','analizadorSintactico.py',297),
  ('parametros -> typeData VARIABLE COMA parametros','parametros',4,'p_parametros','analizadorSintactico.py',298),
  ('switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT','switch',5,'p_switch','analizadorSintactico.py',302),
  ('bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones masInstrucciones BREAK','bloque_switch',6,'p_bloque_switch','analizadorSintactico.py',305),
  ('bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones masInstrucciones CONTINUE','bloque_switch',6,'p_bloque_switch','analizadorSintactico.py',306),
  ('bloque_switch -> CASE caso_switch DOSPUNTOS instrucciones masInstrucciones BREAK bloque_switch','bloque_switch',7,'p_bloque_switch','analizadorSintactico.py',307),
  ('bloque_switch -> switch_default','bloque_switch',1,'p_bloque_switch','analizadorSintactico.py',308),
  ('caso_switch -> VARIABLE','caso_switch',1,'p_caso_switch','analizadorSintactico.py',311),
  ('caso_switch -> CADENA','caso_switch',1,'p_caso_switch','analizadorSintactico.py',312),
  ('caso_switch -> ENTERO','caso_switch',1,'p_caso_switch','analizadorSintactico.py',313),
  ('switch_default -> DEFAULT DOSPUNTOS instrucciones masInstrucciones BREAK','switch_default',5,'p_switch_default','analizadorSintactico.py',316),
  ('switch_default -> DEFAULT DOSPUNTOS instrucciones masInstrucciones CONTINUE','switch_default',5,'p_switch_default','analizadorSintactico.py',317),
  ('condiciones -> factor MAYORQUE factor','condiciones',3,'p_mayorque_compare','analizadorSintactico.py',321),
  ('condiciones -> factor MENORQUE factor','condiciones',3,'p_menorque_compare','analizadorSintactico.py',324),
  ('condiciones -> factor DIFERENTE factor','condiciones',3,'p_distinto_compare','analizadorSintactico.py',327),
  ('condiciones -> factor ESIGUAL factor','condiciones',3,'p_igualdad_compare','analizadorSintactico.py',330),
  ('condiciones -> factor MENORIGUAL factor','condiciones',3,'p_menoroigual_compare','analizadorSintactico.py',333),
  ('condiciones -> factor MAYORIGUAL factor','condiciones',3,'p_mayoroigual_compare','analizadorSintactico.py',336),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','analizadorSintactico.py',339),
  ('comparaciones -> comparacion anado comparaciones','comparaciones',3,'p_comparaciones_uno','analizadorSintactico.py',342),
  ('anado -> condicion','anado',1,'p_condicion_extra','analizadorSintactico.py',345),
  ('condicion -> AND','condicion',1,'p_condicion_and','analizadorSintactico.py',348),
  ('condicion -> OR','condicion',1,'p_condicion_or','analizadorSintactico.py',351),
  ('factor -> BOOL','factor',1,'p_factor_bool','analizadorSintactico.py',354),
]
