
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND BOOL BREAK CADENA CASE COMA CONTINUE CORCHLEFT CORCHRIGHT DECLARADOR DEFAULT DIFERENTE DIVISION DOSPUNTOS ELSE ENTERO ESIGUAL FALSE FLOAT FLOTANTE FOR FUNC IF IGUAL IMPRIMIR INCREMENTO INT LLAVELEFT LLAVERIGHT MAP MASIGUAL MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOSIGUAL MODULO NEGACION OR PARLEFT PARRIGHT PRODUCTO PUNTOCOMA RESTA RETURN SCAN STRING SUMA SWITCH TRUE VAR VARIABLEinstrucciones : asignacion\n                     | expresion \n                     | condiciones\n                     | sentenciaIf\n                     | sentenciaFor\n                     | print\n                     | mapa\n                     | puntero\n                     | lectura\n                     | array\n                     | switch\n                     | arrayAsig\n                     | funcionasignacion : VAR VARIABLE BOOL IGUAL booleano\n                  | VAR VARIABLE INT IGUAL expresion\n                  | VAR VARIABLE FLOAT IGUAL expresion\n                  | VAR VARIABLE STRING IGUAL CADENA\n                  | VAR VARIABLE puntero IGUAL refer\n                  | VAR VARIABLE puntero\n                  | VARIABLE DECLARADOR valor\n                  | VARIABLE IGUAL valor\n                  | VARIABLE MASIGUAL expresion\n                  | VARIABLE MASIGUAL CADENA\n                  | VARIABLE MASIGUAL VARIABLE\n                  | VARIABLE MENOSIGUAL expresion\n                  | derefer IGUAL valor\n       booleano   : condicion\n                  | TRUE \n                  | FALSE\n       valor      : booleano\n                  | expresion\n                  | CADENA\n                  | VARIABLE\n                  | mapa\n                  | refersentenciaIf : IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT\n                   | IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else\n                   | IF comparaciones LLAVELEFT instrucciones LLAVERIGHT\n                   | IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else\n                   | IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT\n                   | IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else\n       else :        ELSE LLAVELEFT instrucciones LLAVERIGHT\n                   | ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT\n                   | ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT\n                   | ELSE sentenciaIf mapa : MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT\n             | MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT\n        par  : dato DOSPUNTOS dato mas\n             | dato DOSPUNTOS dato\n        mas  : mas COMA dato DOSPUNTOS dato\n             | COMA dato DOSPUNTOS dato\n        tipo : BOOL\n             | INT\n             | FLOAT\n             | STRING\n        dato : VARIABLE\n             | expresion\n             | CADENA\n             | TRUE\n             | FALSEpuntero : PRODUCTO BOOL\n               | PRODUCTO INT\n               | PRODUCTO FLOAT\n               | PRODUCTO STRING\n       refer   : AMPERSAND VARIABLE\n       derefer : PRODUCTO VARIABLEsentenciaFor : FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHTinicio : VARIABLE DECLARADOR ENTEROincrementa : VARIABLE INCREMENTOtypeData : BOOL\n            | INT\n            | FLOAT\n            | STRINGarray : VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHTarrayAsig : VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeDataprint : IMPRIMIR PARLEFT contPrint PARRIGHTcontPrint : contenido masCont\n                 | contenido\n       masCont   : masCont COMA contenido\n                 | COMA contenido\n       contenido : expresion\n                 | CADENA\n                 | VARIABLE\n                 | lectura : SCAN PARLEFT contScan PARRIGHTcontScan : AMPERSAND VARIABLEcontArray : contArray COMA numericosexpresion : expresion SUMA termexpresion : expresion RESTA termexpresion : expresion PRODUCTO termexpresion : expresion DIVISION termexpresion : expresion MODULO termexpresion : termcontArray : termterm : numericosfactor : numericosfactor : VARIABLEnumericos : ENTEROnumericos : FLOTANTEnumericos : PARLEFT expresion PARRIGHTcomparacion : condicionescomparacion : NEGACION PARLEFT condiciones PARRIGHTcomparacion : PARLEFT condiciones PARRIGHTfuncion : funcion_sin_parametro\n               | funcion_parametro\n               | funcion_sin_parametro_returnfuncion_sin_parametro : FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT\n                             | FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT\n                             | FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHTfuncion_sin_parametro_return : FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHTfuncion_parametro : FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT\n                         | FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT\n                         | FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHTparametros : VARIABLE\n                  | VARIABLE COMA parametros\n                  | typeData VARIABLE\n                  | typeData VARIABLE COMA parametrosswitch : SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHTbloque_switch : CASE caso DOSPUNTOS instrucciones BREAK\n                     | CASE caso DOSPUNTOS instrucciones CONTINUE\n                     | CASE caso DOSPUNTOS instrucciones BREAK bloque_switch\n                     | switch_default\n       caso          : VARIABLE\n                     | CADENA\n                     | ENTEROswitch_default : DEFAULT DOSPUNTOS instrucciones condiciones : factor MAYORQUE factorcondiciones : factor MENORQUE factorcondiciones : factor DIFERENTE factorcondiciones : factor ESIGUAL factorcondiciones : factor MENORIGUAL factorcondiciones : factor MAYORIGUAL factorcomparaciones : comparacioncomparaciones : comparacion anado comparacionesanado : condicioncondicion : ANDcondicion : ORfactor : BOOL'
    
_lr_action_items = {'VAR':([0,112,188,190,203,208,212,215,],[15,15,15,15,15,15,15,15,]),'VARIABLE':([0,15,20,22,23,29,34,42,43,44,46,52,53,54,55,56,57,63,67,97,98,99,112,113,114,115,118,132,134,144,152,157,163,164,165,166,167,175,179,180,188,189,190,202,203,208,209,212,215,227,236,239,250,261,263,266,267,],[16,41,51,59,66,72,73,86,86,101,86,59,59,59,59,59,59,59,124,142,-136,-137,16,59,-135,59,59,155,160,177,124,185,192,-70,-71,-72,-73,195,200,124,16,160,16,220,16,16,160,16,16,242,251,220,258,220,220,220,220,]),'IF':([0,112,188,190,197,203,208,212,215,],[22,22,22,22,22,22,22,22,22,]),'FOR':([0,112,188,190,203,208,212,215,],[23,23,23,23,23,23,23,23,]),'IMPRIMIR':([0,112,188,190,203,208,212,215,],[24,24,24,24,24,24,24,24,]),'MAP':([0,42,43,46,112,188,190,203,208,212,215,],[26,26,26,26,26,26,26,26,26,26,26,]),'PRODUCTO':([0,3,19,28,33,35,41,68,69,74,75,76,77,78,90,102,104,112,117,122,125,169,170,188,190,203,208,212,215,221,],[20,38,-93,-98,-95,-99,85,38,-95,-88,-89,-90,-91,-92,38,38,38,20,-95,38,-100,38,38,20,20,20,20,20,20,38,]),'SCAN':([0,112,188,190,203,208,212,215,],[27,27,27,27,27,27,27,27,]),'SWITCH':([0,112,188,190,203,208,212,215,],[29,29,29,29,29,29,29,29,]),'BOOL':([0,20,22,41,52,53,54,55,56,57,63,70,85,98,99,112,113,114,115,118,134,153,173,174,188,189,190,203,208,209,212,215,],[17,47,17,79,17,17,17,17,17,17,17,127,47,-136,-137,17,17,-135,17,17,164,127,164,164,17,164,17,17,17,164,17,17,]),'FUNC':([0,112,188,190,203,208,212,215,],[34,34,34,34,34,34,34,34,]),'ENTERO':([0,22,25,36,37,38,39,40,42,43,44,45,46,52,53,54,55,56,57,63,67,84,88,98,99,112,113,114,115,118,119,136,137,152,157,180,188,190,202,203,208,210,212,215,239,248,261,263,266,267,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,140,141,-136,-137,28,28,-135,28,28,149,28,28,28,187,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'FLOTANTE':([0,22,25,36,37,38,39,40,42,43,44,45,46,52,53,54,55,56,57,63,67,98,99,112,113,114,115,118,136,137,152,180,188,190,202,203,208,210,212,215,239,248,261,263,266,267,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-136,-137,35,35,-135,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'PARLEFT':([0,22,24,25,27,36,37,38,39,40,42,43,44,45,46,52,53,54,55,56,57,62,63,67,73,98,99,112,113,114,115,118,136,137,152,180,188,190,202,203,208,210,212,215,239,248,261,263,266,267,],[25,63,67,25,71,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,115,25,25,134,-136,-137,25,63,-135,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,19,28,30,31,32,33,35,47,48,49,50,59,64,69,74,75,76,77,78,83,86,87,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,125,142,150,154,164,165,166,167,168,169,170,171,172,176,183,193,196,198,211,213,214,218,226,228,234,238,243,244,246,247,249,252,255,256,259,262,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-138,-93,-98,-104,-105,-106,-95,-99,-61,-62,-63,-64,-97,-96,-95,-88,-89,-90,-91,-92,-19,-33,-20,-30,-31,-32,-34,-35,-27,-28,-29,-136,-137,-21,-24,-22,-23,-25,-26,-127,-128,-129,-130,-131,-132,-100,-65,-76,-85,-70,-71,-72,-73,-14,-15,-16,-17,-18,-38,-118,-75,-39,-40,-36,-45,-41,-47,-107,-108,-37,-46,-109,-111,-113,-74,-42,-67,-110,-112,-44,-43,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,17,19,28,30,31,32,33,35,47,48,49,50,59,64,69,74,75,76,77,78,83,86,87,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,142,143,150,154,164,165,166,167,168,169,170,171,172,176,183,190,193,196,198,206,208,211,212,213,214,218,226,228,229,234,235,238,243,244,246,247,249,252,255,256,259,262,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-138,-93,-98,-104,-105,-106,-95,-99,-61,-62,-63,-64,-97,-96,-95,-88,-89,-90,-91,-92,-19,-33,-20,-30,-31,-32,-34,-35,-27,-28,-29,-136,-137,-21,-24,-22,-23,-25,-26,-127,-128,-129,-130,-131,-132,144,-100,-65,175,-76,-85,-70,-71,-72,-73,-14,-15,-16,-17,-18,-38,-118,207,-75,-39,-40,227,230,-36,236,-45,-41,-47,-107,-108,245,-37,250,-46,-109,-111,-113,-74,-42,-67,-110,-112,-44,-43,]),'LLAVERIGHT':([2,3,4,5,6,7,8,9,10,11,12,13,14,17,19,28,30,31,32,33,35,47,48,49,50,59,64,69,74,75,76,77,78,83,86,87,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,125,142,143,150,154,156,158,164,165,166,167,168,169,170,171,172,176,177,183,193,195,196,198,202,204,206,207,211,213,214,217,218,220,221,222,223,224,226,227,228,229,230,232,233,234,235,237,238,240,241,242,243,244,245,246,247,249,251,252,253,254,255,256,257,258,259,260,262,268,269,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-138,-93,-98,-104,-105,-106,-95,-99,-61,-62,-63,-64,-97,-96,-95,-88,-89,-90,-91,-92,-19,-33,-20,-30,-31,-32,-34,-35,-27,-28,-29,-136,-137,-21,-24,-22,-23,-25,-26,-127,-128,-129,-130,-131,-132,-100,-65,176,-76,-85,183,-122,-70,-71,-72,-73,-14,-15,-16,-17,-18,-38,198,-118,-75,211,-39,-40,218,-126,226,228,-36,-45,-41,238,-47,-56,-57,-58,-59,-60,-107,243,-108,244,246,247,-94,-37,249,252,-46,-119,-120,255,-109,-111,256,-113,-74,-42,259,-67,-49,-121,-110,-112,-87,262,-44,-48,-43,-51,-50,]),'BREAK':([2,3,4,5,6,7,8,9,10,11,12,13,14,17,19,28,30,31,32,33,35,47,48,49,50,59,64,69,74,75,76,77,78,83,86,87,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,125,142,150,154,164,165,166,167,168,169,170,171,172,176,183,193,196,198,211,213,214,218,225,226,228,234,238,243,244,246,247,249,252,255,256,259,262,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-138,-93,-98,-104,-105,-106,-95,-99,-61,-62,-63,-64,-97,-96,-95,-88,-89,-90,-91,-92,-19,-33,-20,-30,-31,-32,-34,-35,-27,-28,-29,-136,-137,-21,-24,-22,-23,-25,-26,-127,-128,-129,-130,-131,-132,-100,-65,-76,-85,-70,-71,-72,-73,-14,-15,-16,-17,-18,-38,-118,-75,-39,-40,-36,-45,-41,-47,240,-107,-108,-37,-46,-109,-111,-113,-74,-42,-67,-110,-112,-44,-43,]),'CONTINUE':([2,3,4,5,6,7,8,9,10,11,12,13,14,17,19,28,30,31,32,33,35,47,48,49,50,59,64,69,74,75,76,77,78,83,86,87,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,125,142,150,154,164,165,166,167,168,169,170,171,172,176,183,193,196,198,211,213,214,218,225,226,228,234,238,243,244,246,247,249,252,255,256,259,262,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-138,-93,-98,-104,-105,-106,-95,-99,-61,-62,-63,-64,-97,-96,-95,-88,-89,-90,-91,-92,-19,-33,-20,-30,-31,-32,-34,-35,-27,-28,-29,-136,-137,-21,-24,-22,-23,-25,-26,-127,-128,-129,-130,-131,-132,-100,-65,-76,-85,-70,-71,-72,-73,-14,-15,-16,-17,-18,-38,-118,-75,-39,-40,-36,-45,-41,-47,241,-107,-108,-37,-46,-109,-111,-113,-74,-42,-67,-110,-112,-44,-43,]),'SUMA':([3,19,28,33,35,68,69,74,75,76,77,78,90,102,104,117,122,125,169,170,221,],[36,-93,-98,-95,-99,36,-95,-88,-89,-90,-91,-92,36,36,36,-95,36,-100,36,36,36,]),'RESTA':([3,19,28,33,35,68,69,74,75,76,77,78,90,102,104,117,122,125,169,170,221,],[37,-93,-98,-95,-99,37,-95,-88,-89,-90,-91,-92,37,37,37,-95,37,-100,37,37,37,]),'DIVISION':([3,19,28,33,35,68,69,74,75,76,77,78,90,102,104,117,122,125,169,170,221,],[39,-93,-98,-95,-99,39,-95,-88,-89,-90,-91,-92,39,39,39,-95,39,-100,39,39,39,]),'MODULO':([3,19,28,33,35,68,69,74,75,76,77,78,90,102,104,117,122,125,169,170,221,],[40,-93,-98,-95,-99,40,-95,-88,-89,-90,-91,-92,40,40,40,-95,40,-100,40,40,40,]),'DECLARADOR':([16,66,],[42,119,]),'IGUAL':([16,18,47,48,49,50,51,79,80,81,82,83,],[43,46,-61,-62,-63,-64,-66,135,136,137,138,139,]),'MASIGUAL':([16,],[44,]),'MENOSIGUAL':([16,],[45,]),'MAYORQUE':([16,17,21,28,33,35,59,64,117,125,],[-97,-138,52,-98,-96,-99,-97,-96,-96,-100,]),'MENORQUE':([16,17,21,28,33,35,59,64,117,125,],[-97,-138,53,-98,-96,-99,-97,-96,-96,-100,]),'DIFERENTE':([16,17,21,28,33,35,59,64,117,125,],[-97,-138,54,-98,-96,-99,-97,-96,-96,-100,]),'ESIGUAL':([16,17,21,28,33,35,59,64,117,125,],[-97,-138,55,-98,-96,-99,-97,-96,-96,-100,]),'MENORIGUAL':([16,17,21,28,33,35,59,64,117,125,],[-97,-138,56,-98,-96,-99,-97,-96,-96,-100,]),'MAYORIGUAL':([16,17,21,28,33,35,59,64,117,125,],[-97,-138,57,-98,-96,-99,-97,-96,-96,-100,]),'AND':([17,28,35,42,43,46,59,60,61,64,106,107,108,109,110,111,125,135,147,178,],[-138,-98,-99,98,98,98,-97,98,-101,-96,-127,-128,-129,-130,-131,-132,-100,98,-103,-102,]),'OR':([17,28,35,42,43,46,59,60,61,64,106,107,108,109,110,111,125,135,147,178,],[-138,-98,-99,99,99,99,-97,99,-101,-96,-127,-128,-129,-130,-131,-132,-100,99,-103,-102,]),'LLAVELEFT':([17,28,35,58,59,60,61,64,72,106,107,108,109,110,111,125,127,128,129,130,145,147,161,164,165,166,167,178,182,191,194,197,199,216,],[-138,-98,-99,112,-97,-133,-101,-96,133,-127,-128,-129,-130,-131,-132,-100,-52,-53,-54,-55,-134,-103,190,-70,-71,-72,-73,-102,202,208,210,212,215,-69,]),'PARRIGHT':([17,19,28,35,59,64,67,68,69,74,75,76,77,78,106,107,108,109,110,111,116,117,120,121,122,123,124,125,131,134,146,151,152,155,160,162,180,181,192,201,205,231,],[-138,-93,-98,-99,-97,-96,-84,125,-95,-88,-89,-90,-91,-92,-127,-128,-129,-130,-131,-132,147,-95,150,-78,-81,-82,-83,-100,154,161,178,-77,-84,-86,-114,191,-84,-80,-116,-79,-115,-117,]),'PUNTOCOMA':([17,28,35,59,64,65,106,107,108,109,110,111,125,148,149,],[-138,-98,-99,-97,-96,118,-127,-128,-129,-130,-131,-132,-100,179,-68,]),'COMA':([19,28,35,67,69,74,75,76,77,78,121,122,123,124,125,151,152,160,180,181,192,201,220,221,222,223,224,232,233,253,257,260,268,269,],[-93,-98,-99,-84,-95,-88,-89,-90,-91,-92,152,-81,-82,-83,-100,180,-84,189,-84,-80,209,-79,-56,-57,-58,-59,-60,248,-94,261,-87,263,-51,-50,]),'DOSPUNTOS':([19,28,35,69,74,75,76,77,78,125,159,184,185,186,187,219,220,221,222,223,224,264,265,],[-93,-98,-99,-95,-88,-89,-90,-91,-92,-100,188,203,-123,-124,-125,239,-56,-57,-58,-59,-60,266,267,]),'INT':([20,41,70,85,134,153,173,174,189,209,],[48,80,128,48,165,128,165,165,165,165,]),'FLOAT':([20,41,70,85,134,153,173,174,189,209,],[49,81,129,49,166,129,166,166,166,166,]),'STRING':([20,41,70,85,134,153,173,174,189,209,],[50,82,130,50,167,130,167,167,167,167,]),'NEGACION':([22,98,99,113,114,],[62,-136,-137,62,-135,]),'CORCHLEFT':([26,41,42,],[70,84,88,]),'CADENA':([42,43,44,46,67,138,152,157,180,202,239,261,263,266,267,],[91,91,103,91,123,171,123,186,123,222,222,222,222,222,222,]),'TRUE':([42,43,46,135,202,239,261,263,266,267,],[95,95,95,95,223,223,223,223,223,223,]),'FALSE':([42,43,46,135,202,239,261,263,266,267,],[96,96,96,96,224,224,224,224,224,224,]),'AMPERSAND':([42,43,46,71,139,],[97,97,97,132,97,]),'CORCHRIGHT':([126,127,128,129,130,140,141,],[153,-52,-53,-54,-55,173,174,]),'CASE':([133,240,],[157,157,]),'DEFAULT':([133,240,],[159,159,]),'ELSE':([176,198,211,],[197,197,197,]),'INCREMENTO':([200,],[216,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,112,188,190,203,208,212,215,],[1,143,204,206,225,229,235,237,]),'asignacion':([0,112,188,190,203,208,212,215,],[2,2,2,2,2,2,2,2,]),'expresion':([0,25,42,43,44,45,46,63,67,112,136,137,152,180,188,190,202,203,208,212,215,239,261,263,266,267,],[3,68,90,90,102,104,90,68,122,3,169,170,122,122,3,3,221,3,3,3,3,221,221,221,221,221,]),'condiciones':([0,22,63,112,113,115,118,188,190,203,208,212,215,],[4,61,116,4,61,146,148,4,4,4,4,4,4,]),'sentenciaIf':([0,112,188,190,197,203,208,212,215,],[5,5,5,5,213,5,5,5,5,]),'sentenciaFor':([0,112,188,190,203,208,212,215,],[6,6,6,6,6,6,6,6,]),'print':([0,112,188,190,203,208,212,215,],[7,7,7,7,7,7,7,7,]),'mapa':([0,42,43,46,112,188,190,203,208,212,215,],[8,92,92,92,8,8,8,8,8,8,8,]),'puntero':([0,41,112,188,190,203,208,212,215,],[9,83,9,9,9,9,9,9,9,]),'lectura':([0,112,188,190,203,208,212,215,],[10,10,10,10,10,10,10,10,]),'array':([0,112,188,190,203,208,212,215,],[11,11,11,11,11,11,11,11,]),'switch':([0,112,188,190,203,208,212,215,],[12,12,12,12,12,12,12,12,]),'arrayAsig':([0,112,188,190,203,208,212,215,],[13,13,13,13,13,13,13,13,]),'funcion':([0,112,188,190,203,208,212,215,],[14,14,14,14,14,14,14,14,]),'derefer':([0,112,188,190,203,208,212,215,],[18,18,18,18,18,18,18,18,]),'term':([0,25,36,37,38,39,40,42,43,44,45,46,63,67,112,136,137,152,180,188,190,202,203,208,210,212,215,239,261,263,266,267,],[19,19,74,75,76,77,78,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,233,19,19,19,19,19,19,19,]),'factor':([0,22,52,53,54,55,56,57,63,112,113,115,118,188,190,203,208,212,215,],[21,21,106,107,108,109,110,111,21,21,21,21,21,21,21,21,21,21,21,]),'funcion_sin_parametro':([0,112,188,190,203,208,212,215,],[30,30,30,30,30,30,30,30,]),'funcion_parametro':([0,112,188,190,203,208,212,215,],[31,31,31,31,31,31,31,31,]),'funcion_sin_parametro_return':([0,112,188,190,203,208,212,215,],[32,32,32,32,32,32,32,32,]),'numericos':([0,22,25,36,37,38,39,40,42,43,44,45,46,52,53,54,55,56,57,63,67,112,113,115,118,136,137,152,180,188,190,202,203,208,210,212,215,239,248,261,263,266,267,],[33,64,69,69,69,69,69,69,69,69,69,69,69,64,64,64,64,64,64,117,69,33,64,64,64,69,69,69,69,33,33,69,33,33,69,33,33,69,257,69,69,69,69,]),'comparaciones':([22,113,],[58,145,]),'comparacion':([22,113,],[60,60,]),'inicio':([23,],[65,]),'valor':([42,43,46,],[87,100,105,]),'booleano':([42,43,46,135,],[89,89,89,168,]),'refer':([42,43,46,139,],[93,93,93,172,]),'condicion':([42,43,46,60,135,],[94,94,94,114,94,]),'anado':([60,],[113,]),'contPrint':([67,],[120,]),'contenido':([67,152,180,],[121,181,201,]),'tipo':([70,153,],[126,182,]),'contScan':([71,],[131,]),'masCont':([121,],[151,]),'bloque_switch':([133,240,],[156,254,]),'switch_default':([133,240,],[158,158,]),'parametros':([134,189,209,],[162,205,231,]),'typeData':([134,173,174,189,209,],[163,193,194,163,163,]),'caso':([157,],[184,]),'else':([176,198,211,],[196,214,234,]),'incrementa':([179,],[199,]),'par':([202,],[217,]),'dato':([202,239,261,263,266,267,],[219,253,264,265,268,269,]),'contArray':([210,],[232,]),'mas':([253,],[260,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',6),
  ('instrucciones -> expresion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',7),
  ('instrucciones -> condiciones','instrucciones',1,'p_instrucciones','analizadorSintactico.py',8),
  ('instrucciones -> sentenciaIf','instrucciones',1,'p_instrucciones','analizadorSintactico.py',9),
  ('instrucciones -> sentenciaFor','instrucciones',1,'p_instrucciones','analizadorSintactico.py',10),
  ('instrucciones -> print','instrucciones',1,'p_instrucciones','analizadorSintactico.py',11),
  ('instrucciones -> mapa','instrucciones',1,'p_instrucciones','analizadorSintactico.py',12),
  ('instrucciones -> puntero','instrucciones',1,'p_instrucciones','analizadorSintactico.py',13),
  ('instrucciones -> lectura','instrucciones',1,'p_instrucciones','analizadorSintactico.py',14),
  ('instrucciones -> array','instrucciones',1,'p_instrucciones','analizadorSintactico.py',15),
  ('instrucciones -> switch','instrucciones',1,'p_instrucciones','analizadorSintactico.py',16),
  ('instrucciones -> arrayAsig','instrucciones',1,'p_instrucciones','analizadorSintactico.py',17),
  ('instrucciones -> funcion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',18),
  ('asignacion -> VAR VARIABLE BOOL IGUAL booleano','asignacion',5,'p_asignacion','analizadorSintactico.py',22),
  ('asignacion -> VAR VARIABLE INT IGUAL expresion','asignacion',5,'p_asignacion','analizadorSintactico.py',23),
  ('asignacion -> VAR VARIABLE FLOAT IGUAL expresion','asignacion',5,'p_asignacion','analizadorSintactico.py',24),
  ('asignacion -> VAR VARIABLE STRING IGUAL CADENA','asignacion',5,'p_asignacion','analizadorSintactico.py',25),
  ('asignacion -> VAR VARIABLE puntero IGUAL refer','asignacion',5,'p_asignacion','analizadorSintactico.py',26),
  ('asignacion -> VAR VARIABLE puntero','asignacion',3,'p_asignacion','analizadorSintactico.py',27),
  ('asignacion -> VARIABLE DECLARADOR valor','asignacion',3,'p_asignacion','analizadorSintactico.py',28),
  ('asignacion -> VARIABLE IGUAL valor','asignacion',3,'p_asignacion','analizadorSintactico.py',29),
  ('asignacion -> VARIABLE MASIGUAL expresion','asignacion',3,'p_asignacion','analizadorSintactico.py',30),
  ('asignacion -> VARIABLE MASIGUAL CADENA','asignacion',3,'p_asignacion','analizadorSintactico.py',31),
  ('asignacion -> VARIABLE MASIGUAL VARIABLE','asignacion',3,'p_asignacion','analizadorSintactico.py',32),
  ('asignacion -> VARIABLE MENOSIGUAL expresion','asignacion',3,'p_asignacion','analizadorSintactico.py',33),
  ('asignacion -> derefer IGUAL valor','asignacion',3,'p_asignacion','analizadorSintactico.py',34),
  ('booleano -> condicion','booleano',1,'p_asignacion','analizadorSintactico.py',35),
  ('booleano -> TRUE','booleano',1,'p_asignacion','analizadorSintactico.py',36),
  ('booleano -> FALSE','booleano',1,'p_asignacion','analizadorSintactico.py',37),
  ('valor -> booleano','valor',1,'p_asignacion','analizadorSintactico.py',38),
  ('valor -> expresion','valor',1,'p_asignacion','analizadorSintactico.py',39),
  ('valor -> CADENA','valor',1,'p_asignacion','analizadorSintactico.py',40),
  ('valor -> VARIABLE','valor',1,'p_asignacion','analizadorSintactico.py',41),
  ('valor -> mapa','valor',1,'p_asignacion','analizadorSintactico.py',42),
  ('valor -> refer','valor',1,'p_asignacion','analizadorSintactico.py',43),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT','sentenciaIf',7,'p_sentenciaIf','analizadorSintactico.py',47),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else','sentenciaIf',8,'p_sentenciaIf','analizadorSintactico.py',48),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT','sentenciaIf',5,'p_sentenciaIf','analizadorSintactico.py',49),
  ('sentenciaIf -> IF comparaciones LLAVELEFT instrucciones LLAVERIGHT else','sentenciaIf',6,'p_sentenciaIf','analizadorSintactico.py',50),
  ('sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT','sentenciaIf',6,'p_sentenciaIf','analizadorSintactico.py',51),
  ('sentenciaIf -> IF comparaciones LLAVELEFT RETURN VARIABLE LLAVERIGHT else','sentenciaIf',7,'p_sentenciaIf','analizadorSintactico.py',52),
  ('else -> ELSE LLAVELEFT instrucciones LLAVERIGHT','else',4,'p_sentenciaIf','analizadorSintactico.py',53),
  ('else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT','else',6,'p_sentenciaIf','analizadorSintactico.py',54),
  ('else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT','else',5,'p_sentenciaIf','analizadorSintactico.py',55),
  ('else -> ELSE sentenciaIf','else',2,'p_sentenciaIf','analizadorSintactico.py',56),
  ('mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT','mapa',8,'p_mapa','analizadorSintactico.py',60),
  ('mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT','mapa',7,'p_mapa','analizadorSintactico.py',61),
  ('par -> dato DOSPUNTOS dato mas','par',4,'p_mapa','analizadorSintactico.py',62),
  ('par -> dato DOSPUNTOS dato','par',3,'p_mapa','analizadorSintactico.py',63),
  ('mas -> mas COMA dato DOSPUNTOS dato','mas',5,'p_mapa','analizadorSintactico.py',64),
  ('mas -> COMA dato DOSPUNTOS dato','mas',4,'p_mapa','analizadorSintactico.py',65),
  ('tipo -> BOOL','tipo',1,'p_mapa','analizadorSintactico.py',66),
  ('tipo -> INT','tipo',1,'p_mapa','analizadorSintactico.py',67),
  ('tipo -> FLOAT','tipo',1,'p_mapa','analizadorSintactico.py',68),
  ('tipo -> STRING','tipo',1,'p_mapa','analizadorSintactico.py',69),
  ('dato -> VARIABLE','dato',1,'p_mapa','analizadorSintactico.py',70),
  ('dato -> expresion','dato',1,'p_mapa','analizadorSintactico.py',71),
  ('dato -> CADENA','dato',1,'p_mapa','analizadorSintactico.py',72),
  ('dato -> TRUE','dato',1,'p_mapa','analizadorSintactico.py',73),
  ('dato -> FALSE','dato',1,'p_mapa','analizadorSintactico.py',74),
  ('puntero -> PRODUCTO BOOL','puntero',2,'p_puntero','analizadorSintactico.py',80),
  ('puntero -> PRODUCTO INT','puntero',2,'p_puntero','analizadorSintactico.py',81),
  ('puntero -> PRODUCTO FLOAT','puntero',2,'p_puntero','analizadorSintactico.py',82),
  ('puntero -> PRODUCTO STRING','puntero',2,'p_puntero','analizadorSintactico.py',83),
  ('refer -> AMPERSAND VARIABLE','refer',2,'p_puntero','analizadorSintactico.py',84),
  ('derefer -> PRODUCTO VARIABLE','derefer',2,'p_puntero','analizadorSintactico.py',85),
  ('sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT','sentenciaFor',9,'p_sentenciaFor','analizadorSintactico.py',89),
  ('inicio -> VARIABLE DECLARADOR ENTERO','inicio',3,'p_iniciofor','analizadorSintactico.py',93),
  ('incrementa -> VARIABLE INCREMENTO','incrementa',2,'p_incrementa','analizadorSintactico.py',97),
  ('typeData -> BOOL','typeData',1,'p_typeData','analizadorSintactico.py',101),
  ('typeData -> INT','typeData',1,'p_typeData','analizadorSintactico.py',102),
  ('typeData -> FLOAT','typeData',1,'p_typeData','analizadorSintactico.py',103),
  ('typeData -> STRING','typeData',1,'p_typeData','analizadorSintactico.py',104),
  ('array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT','array',9,'p_array','analizadorSintactico.py',108),
  ('arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData','arrayAsig',6,'p_arrayAsig','analizadorSintactico.py',112),
  ('print -> IMPRIMIR PARLEFT contPrint PARRIGHT','print',4,'p_print','analizadorSintactico.py',116),
  ('contPrint -> contenido masCont','contPrint',2,'p_contenidoPrint','analizadorSintactico.py',119),
  ('contPrint -> contenido','contPrint',1,'p_contenidoPrint','analizadorSintactico.py',120),
  ('masCont -> masCont COMA contenido','masCont',3,'p_contenidoPrint','analizadorSintactico.py',121),
  ('masCont -> COMA contenido','masCont',2,'p_contenidoPrint','analizadorSintactico.py',122),
  ('contenido -> expresion','contenido',1,'p_contenidoPrint','analizadorSintactico.py',123),
  ('contenido -> CADENA','contenido',1,'p_contenidoPrint','analizadorSintactico.py',124),
  ('contenido -> VARIABLE','contenido',1,'p_contenidoPrint','analizadorSintactico.py',125),
  ('contenido -> <empty>','contenido',0,'p_contenidoPrint','analizadorSintactico.py',126),
  ('lectura -> SCAN PARLEFT contScan PARRIGHT','lectura',4,'p_lectura','analizadorSintactico.py',130),
  ('contScan -> AMPERSAND VARIABLE','contScan',2,'p_contenidoScan','analizadorSintactico.py',133),
  ('contArray -> contArray COMA numericos','contArray',3,'p_contenidoArray','analizadorSintactico.py',137),
  ('expresion -> expresion SUMA term','expresion',3,'p_suma_expresion','analizadorSintactico.py',140),
  ('expresion -> expresion RESTA term','expresion',3,'p_resta_expresion','analizadorSintactico.py',143),
  ('expresion -> expresion PRODUCTO term','expresion',3,'p_producto_expresion','analizadorSintactico.py',146),
  ('expresion -> expresion DIVISION term','expresion',3,'p_div_expresion','analizadorSintactico.py',149),
  ('expresion -> expresion MODULO term','expresion',3,'p_modulo_expresion','analizadorSintactico.py',152),
  ('expresion -> term','expresion',1,'p_expression_term','analizadorSintactico.py',155),
  ('contArray -> term','contArray',1,'p_expression_term2','analizadorSintactico.py',159),
  ('term -> numericos','term',1,'p_term_factor','analizadorSintactico.py',163),
  ('factor -> numericos','factor',1,'p_factor_num','analizadorSintactico.py',167),
  ('factor -> VARIABLE','factor',1,'p_factor_var','analizadorSintactico.py',170),
  ('numericos -> ENTERO','numericos',1,'p_numericos','analizadorSintactico.py',173),
  ('numericos -> FLOTANTE','numericos',1,'p_numericos_float','analizadorSintactico.py',176),
  ('numericos -> PARLEFT expresion PARRIGHT','numericos',3,'p_factor_exp','analizadorSintactico.py',179),
  ('comparacion -> condiciones','comparacion',1,'p_comparacion','analizadorSintactico.py',186),
  ('comparacion -> NEGACION PARLEFT condiciones PARRIGHT','comparacion',4,'p_comparaciones_negado','analizadorSintactico.py',189),
  ('comparacion -> PARLEFT condiciones PARRIGHT','comparacion',3,'p_comparaciones_paren','analizadorSintactico.py',192),
  ('funcion -> funcion_sin_parametro','funcion',1,'p_funcion','analizadorSintactico.py',196),
  ('funcion -> funcion_parametro','funcion',1,'p_funcion','analizadorSintactico.py',197),
  ('funcion -> funcion_sin_parametro_return','funcion',1,'p_funcion','analizadorSintactico.py',198),
  ('funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones LLAVERIGHT','funcion_sin_parametro',7,'p_funcion_sin_parameters','analizadorSintactico.py',201),
  ('funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT RETURN LLAVERIGHT','funcion_sin_parametro',7,'p_funcion_sin_parameters','analizadorSintactico.py',202),
  ('funcion_sin_parametro -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT','funcion_sin_parametro',8,'p_funcion_sin_parameters','analizadorSintactico.py',203),
  ('funcion_sin_parametro_return -> FUNC VARIABLE PARLEFT PARRIGHT LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT','funcion_sin_parametro_return',9,'p_funcion_sin_parameters_return','analizadorSintactico.py',206),
  ('funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones LLAVERIGHT','funcion_parametro',8,'p_funcion_parameters','analizadorSintactico.py',209),
  ('funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT instrucciones RETURN LLAVERIGHT','funcion_parametro',9,'p_funcion_parameters','analizadorSintactico.py',210),
  ('funcion_parametro -> FUNC VARIABLE PARLEFT parametros PARRIGHT LLAVELEFT RETURN LLAVERIGHT','funcion_parametro',8,'p_funcion_parameters','analizadorSintactico.py',211),
  ('parametros -> VARIABLE','parametros',1,'p_parametros','analizadorSintactico.py',214),
  ('parametros -> VARIABLE COMA parametros','parametros',3,'p_parametros','analizadorSintactico.py',215),
  ('parametros -> typeData VARIABLE','parametros',2,'p_parametros','analizadorSintactico.py',216),
  ('parametros -> typeData VARIABLE COMA parametros','parametros',4,'p_parametros','analizadorSintactico.py',217),
  ('switch -> SWITCH VARIABLE LLAVELEFT bloque_switch LLAVERIGHT','switch',5,'p_switch','analizadorSintactico.py',221),
  ('bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK','bloque_switch',5,'p_bloque_switch','analizadorSintactico.py',224),
  ('bloque_switch -> CASE caso DOSPUNTOS instrucciones CONTINUE','bloque_switch',5,'p_bloque_switch','analizadorSintactico.py',225),
  ('bloque_switch -> CASE caso DOSPUNTOS instrucciones BREAK bloque_switch','bloque_switch',6,'p_bloque_switch','analizadorSintactico.py',226),
  ('bloque_switch -> switch_default','bloque_switch',1,'p_bloque_switch','analizadorSintactico.py',227),
  ('caso -> VARIABLE','caso',1,'p_bloque_switch','analizadorSintactico.py',228),
  ('caso -> CADENA','caso',1,'p_bloque_switch','analizadorSintactico.py',229),
  ('caso -> ENTERO','caso',1,'p_bloque_switch','analizadorSintactico.py',230),
  ('switch_default -> DEFAULT DOSPUNTOS instrucciones','switch_default',3,'p_switch_default','analizadorSintactico.py',233),
  ('condiciones -> factor MAYORQUE factor','condiciones',3,'p_mayorque_compare','analizadorSintactico.py',237),
  ('condiciones -> factor MENORQUE factor','condiciones',3,'p_menorque_compare','analizadorSintactico.py',240),
  ('condiciones -> factor DIFERENTE factor','condiciones',3,'p_distinto_compare','analizadorSintactico.py',243),
  ('condiciones -> factor ESIGUAL factor','condiciones',3,'p_igualdad_compare','analizadorSintactico.py',246),
  ('condiciones -> factor MENORIGUAL factor','condiciones',3,'p_menoroigual_compare','analizadorSintactico.py',249),
  ('condiciones -> factor MAYORIGUAL factor','condiciones',3,'p_mayoroigual_compare','analizadorSintactico.py',252),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','analizadorSintactico.py',255),
  ('comparaciones -> comparacion anado comparaciones','comparaciones',3,'p_comparaciones_uno','analizadorSintactico.py',258),
  ('anado -> condicion','anado',1,'p_condicion_extra','analizadorSintactico.py',261),
  ('condicion -> AND','condicion',1,'p_condicion_and','analizadorSintactico.py',264),
  ('condicion -> OR','condicion',1,'p_condicion_or','analizadorSintactico.py',267),
  ('factor -> BOOL','factor',1,'p_factor_bool','analizadorSintactico.py',270),
]
