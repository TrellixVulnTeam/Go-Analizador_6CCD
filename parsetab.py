
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND BARRAINVERSA BOOL BREAK CADENA CASE CHAN COMA COMENTARIO COMILLA CONST CONTINUE CORCHLEFT CORCHRIGHT DECLARADOR DEFAULT DEFER DIFERENTE DIVISION DOSPUNTOS ELSE ENTERO ESIGUAL ESPACIO FALLTHROUGH FALSE FLOAT FLOTANTE FOR FUNC GO GOTO IF IGUAL IMPORT IMPRIMIR INCREMENTO INT INTERFACE LLAVELEFT LLAVERIGHT MAP MASIGUAL MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOSIGUAL MODULO NEGACION OR PACKAGE PARLEFT PARRIGHT PRODUCTO PUNTOCOMA RANGE RESTA RETURN SCAN SELECT STRING STRUCT SUMA SWITCH TRUE TYPE VAR VARIABLEinstrucciones : asignacion \n                     | expresion \n                     | condiciones\n                     | sentenciaIf\n                     | sentenciaFor\n                     | print\n                     | mapa\n                     | puntero\n                     | lectura\n                     | array\n                     | arrayAsigasignacion : VAR VARIABLE BOOL IGUAL booleano\n                  | VAR VARIABLE INT IGUAL expresion\n                  | VAR VARIABLE FLOAT IGUAL expresion\n                  | VAR VARIABLE STRING IGUAL CADENA\n                  | VAR VARIABLE puntero IGUAL refer\n                  | VAR VARIABLE puntero\n                  | VARIABLE DECLARADOR valor\n                  | VARIABLE IGUAL valor\n                  | derefer IGUAL valor\n       booleano   : condicion\n                  | TRUE \n                  | FALSE\n       valor      : booleano\n                  | expresion\n                  | CADENA\n                  | VARIABLE\n                  | mapa\n                  | refersentenciaIf : IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT\n                   | IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else\n                   | IF condicion LLAVELEFT instrucciones LLAVERIGHT\n                   | IF condicion LLAVELEFT instrucciones LLAVERIGHT else\n                   | IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT\n                   | IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else\n       else :        ELSE LLAVELEFT instrucciones LLAVERIGHT\n                   | ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT\n                   | ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT\n                   | ELSE sentenciaIf mapa : MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT\n             | MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT\n        par  : dato DOSPUNTOS dato\n             | dato DOSPUNTOS dato mas\n        mas  : COMA par\n             | COMA par mas\n        tipo : BOOL\n             | INT\n             | FLOAT\n             | STRING\n        dato : VARIABLE\n             | expresion\n             | CADENA\n             | TRUE\n             | FALSEpuntero : PRODUCTO BOOL\n               | PRODUCTO INT\n               | PRODUCTO FLOAT\n               | PRODUCTO STRING\n       refer   : AMPERSAND VARIABLE\n       derefer : PRODUCTO VARIABLEsentenciaFor : FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHTinicio : VARIABLE DECLARADOR ENTEROincrementa : VARIABLE INCREMENTOtypeData : BOOL\n            | INT\n            | FLOAT\n            | STRINGarray : VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHTarrayAsig : VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeDataprint : IMPRIMIR PARLEFT contPrint PARRIGHTcontPrint : CADENA \n                | VARIABLE  \n                | factor\n                | contPrint COMA contPrintlectura : SCAN PARLEFT contScan PARRIGHT\n        contScan : AMPERSAND VARIABLE\n                | COMILLA MODULO VARIABLE COMILLA COMA AMPERSAND VARIABLE\n    contArray : contArray COMA numericosexpresion : expresion SUMA numericosexpresion : expresion RESTA numericosexpresion : expresion PRODUCTO numericosexpresion : expresion DIVISION numericosexpresion : expresion MODULO numericosexpresion : termcontArray : termterm : numericosfactor : numericosfactor : VARIABLEnumericos : ENTEROnumericos : FLOTANTEfactor : BOOLcomparacion : condicionescomparacion : NEGACION PARLEFT condiciones PARRIGHTcomparacion : PARLEFT condiciones PARRIGHTcondiciones : factor MAYORQUE factorcondiciones : factor MENORQUE factorcondiciones : factor DIFERENTE factorcondiciones : factor ESIGUAL factorcondiciones : factor MENORIGUAL factorcondiciones : factor MAYORIGUAL factorcomparaciones : comparacioncomparaciones : comparacion anado comparacionesanado : condicioncondicion : ANDcondicion : OR'
    
_lr_action_items = {'VAR':([0,91,154,157,],[13,13,13,13,]),'VARIABLE':([0,13,18,22,34,35,36,42,43,44,45,46,47,53,80,91,92,104,115,119,123,131,134,150,154,157,172,175,176,180,189,],[14,33,41,52,68,68,68,85,85,85,85,85,85,96,113,14,85,122,133,96,137,144,149,162,14,14,181,162,184,186,162,]),'IF':([0,91,146,154,157,],[21,21,21,21,21,]),'FOR':([0,91,154,157,],[22,22,22,22,]),'IMPRIMIR':([0,91,154,157,],[23,23,23,23,]),'MAP':([0,34,35,36,91,154,157,],[24,24,24,24,24,24,24,]),'PRODUCTO':([0,3,17,19,26,27,33,56,57,58,59,60,72,79,91,125,126,154,157,163,],[18,30,-86,-84,-89,-90,67,-79,-80,-81,-82,-83,30,-86,18,30,30,18,18,30,]),'SCAN':([0,91,154,157,],[25,25,25,25,]),'BOOL':([0,18,33,42,43,44,45,46,47,53,54,67,91,92,119,120,129,130,154,157,],[15,37,61,15,15,15,15,15,15,15,99,37,15,15,15,99,139,139,15,15,]),'ENTERO':([0,28,29,30,31,32,34,35,36,42,43,44,45,46,47,53,66,70,91,92,93,107,108,119,150,152,154,157,175,178,189,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,111,112,26,26,117,26,26,26,26,26,26,26,26,26,26,]),'FLOTANTE':([0,28,29,30,31,32,34,35,36,42,43,44,45,46,47,53,91,92,107,108,119,150,152,154,157,175,178,189,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,15,17,19,26,27,37,38,39,40,49,50,56,57,58,59,60,65,68,69,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,113,118,121,124,125,126,127,128,132,138,139,140,141,142,145,147,153,155,156,160,170,174,177,179,182,187,190,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-91,-86,-84,-89,-90,-55,-56,-57,-58,-104,-105,-79,-80,-81,-82,-83,-17,-27,-18,-24,-25,-26,-28,-29,-21,-22,-23,-86,-19,-20,-95,-87,-88,-96,-97,-98,-99,-100,-59,-70,-75,-12,-13,-14,-15,-16,-32,-69,-64,-65,-66,-67,-33,-34,-30,-39,-35,-41,-31,-40,-68,-36,-61,-38,-37,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,15,17,19,26,27,37,38,39,40,49,50,56,57,58,59,60,65,68,69,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,113,114,118,121,124,125,126,127,128,132,138,139,140,141,142,145,147,153,154,155,156,160,170,171,174,177,179,182,187,190,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-91,-86,-84,-89,-90,-55,-56,-57,-58,-104,-105,-79,-80,-81,-82,-83,-17,-27,-18,-24,-25,-26,-28,-29,-21,-22,-23,-86,-19,-20,-95,-87,-88,-96,-97,-98,-99,-100,115,-59,131,-70,-75,-12,-13,-14,-15,-16,-32,-69,-64,-65,-66,-67,-33,-34,-30,172,-39,-35,-41,-31,180,-40,-68,-36,-61,-38,-37,]),'LLAVERIGHT':([2,3,4,5,6,7,8,9,10,11,12,15,17,19,26,27,37,38,39,40,49,50,56,57,58,59,60,65,68,69,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,113,114,118,121,124,125,126,127,128,132,133,138,139,140,141,142,144,145,147,150,153,155,156,159,160,162,163,164,165,166,168,169,170,171,173,174,177,179,181,182,183,185,186,187,188,190,191,192,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-91,-86,-84,-89,-90,-55,-56,-57,-58,-104,-105,-79,-80,-81,-82,-83,-17,-27,-18,-24,-25,-26,-28,-29,-21,-22,-23,-86,-19,-20,-95,-87,-88,-96,-97,-98,-99,-100,-59,132,-70,-75,-12,-13,-14,-15,-16,-32,147,-69,-64,-65,-66,-67,153,-33,-34,160,-30,-39,-35,174,-41,-50,-51,-52,-53,-54,177,-85,-31,179,182,-40,-68,-36,187,-61,-42,-78,190,-38,-43,-37,-44,-45,]),'SUMA':([3,17,19,26,27,56,57,58,59,60,72,79,125,126,163,],[28,-86,-84,-89,-90,-79,-80,-81,-82,-83,28,-86,28,28,28,]),'RESTA':([3,17,19,26,27,56,57,58,59,60,72,79,125,126,163,],[29,-86,-84,-89,-90,-79,-80,-81,-82,-83,29,-86,29,29,29,]),'DIVISION':([3,17,19,26,27,56,57,58,59,60,72,79,125,126,163,],[31,-86,-84,-89,-90,-79,-80,-81,-82,-83,31,-86,31,31,31,]),'MODULO':([3,17,19,26,27,56,57,58,59,60,72,79,105,125,126,163,],[32,-86,-84,-89,-90,-79,-80,-81,-82,-83,32,-86,123,32,32,32,]),'DECLARADOR':([14,52,],[34,93,]),'IGUAL':([14,16,37,38,39,40,41,61,62,63,64,65,],[35,36,-55,-56,-57,-58,-60,106,107,108,109,110,]),'MAYORQUE':([14,15,17,20,26,27,84,85,],[-88,-91,-87,42,-89,-90,-87,-88,]),'MENORQUE':([14,15,17,20,26,27,84,85,],[-88,-91,-87,43,-89,-90,-87,-88,]),'DIFERENTE':([14,15,17,20,26,27,84,85,],[-88,-91,-87,44,-89,-90,-87,-88,]),'ESIGUAL':([14,15,17,20,26,27,84,85,],[-88,-91,-87,45,-89,-90,-87,-88,]),'MENORIGUAL':([14,15,17,20,26,27,84,85,],[-88,-91,-87,46,-89,-90,-87,-88,]),'MAYORIGUAL':([14,15,17,20,26,27,84,85,],[-88,-91,-87,47,-89,-90,-87,-88,]),'PUNTOCOMA':([15,26,27,51,83,84,85,86,87,88,89,90,116,117,],[-91,-89,-90,92,-95,-87,-88,-96,-97,-98,-99,-100,134,-62,]),'PARRIGHT':([15,26,27,84,94,95,96,97,103,122,135,184,],[-91,-89,-90,-87,118,-71,-72,-73,121,-76,-74,-77,]),'COMA':([15,19,26,27,56,57,58,59,60,79,84,94,95,96,97,135,151,162,163,164,165,166,168,169,183,185,188,191,192,],[-91,-84,-89,-90,-79,-80,-81,-82,-83,-86,-87,119,-71,-72,-73,119,167,-50,-51,-52,-53,-54,178,-85,189,-78,-43,189,-45,]),'INT':([18,33,54,67,120,129,130,],[38,62,100,38,100,140,140,]),'FLOAT':([18,33,54,67,120,129,130,],[39,63,101,39,101,141,141,]),'STRING':([18,33,54,67,120,129,130,],[40,64,102,40,102,142,142,]),'DOSPUNTOS':([19,26,27,56,57,58,59,60,79,161,162,163,164,165,166,],[-84,-89,-90,-79,-80,-81,-82,-83,-86,175,-50,-51,-52,-53,-54,]),'AND':([21,34,35,36,106,],[49,49,49,49,49,]),'OR':([21,34,35,36,106,],[50,50,50,50,50,]),'PARLEFT':([23,25,],[53,55,]),'CORCHLEFT':([24,33,34,],[54,66,70,]),'CADENA':([34,35,36,53,109,119,150,175,189,],[73,73,73,95,127,95,164,164,164,]),'TRUE':([34,35,36,106,150,175,189,],[77,77,77,77,165,165,165,]),'FALSE':([34,35,36,106,150,175,189,],[78,78,78,78,166,166,166,]),'AMPERSAND':([34,35,36,55,110,167,],[80,80,80,104,80,176,]),'LLAVELEFT':([48,49,50,99,100,101,102,136,139,140,141,142,143,146,148,158,],[91,-104,-105,-46,-47,-48,-49,150,-64,-65,-66,-67,152,154,157,-63,]),'COMILLA':([55,137,],[105,151,]),'CORCHRIGHT':([98,99,100,101,102,111,112,],[120,-46,-47,-48,-49,129,130,]),'ELSE':([132,147,153,],[146,146,146,]),'INCREMENTO':([149,],[158,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,91,154,157,],[1,114,171,173,]),'asignacion':([0,91,154,157,],[2,2,2,2,]),'expresion':([0,34,35,36,91,107,108,150,154,157,175,189,],[3,72,72,72,3,125,126,163,3,3,163,163,]),'condiciones':([0,91,92,154,157,],[4,4,116,4,4,]),'sentenciaIf':([0,91,146,154,157,],[5,5,155,5,5,]),'sentenciaFor':([0,91,154,157,],[6,6,6,6,]),'print':([0,91,154,157,],[7,7,7,7,]),'mapa':([0,34,35,36,91,154,157,],[8,74,74,74,8,8,8,]),'puntero':([0,33,91,154,157,],[9,65,9,9,9,]),'lectura':([0,91,154,157,],[10,10,10,10,]),'array':([0,91,154,157,],[11,11,11,11,]),'arrayAsig':([0,91,154,157,],[12,12,12,12,]),'derefer':([0,91,154,157,],[16,16,16,16,]),'numericos':([0,28,29,30,31,32,34,35,36,42,43,44,45,46,47,53,91,92,107,108,119,150,152,154,157,175,178,189,],[17,56,57,58,59,60,79,79,79,84,84,84,84,84,84,84,17,84,79,79,84,79,79,17,17,79,185,79,]),'term':([0,34,35,36,91,107,108,150,152,154,157,175,189,],[19,19,19,19,19,19,19,19,169,19,19,19,19,]),'factor':([0,42,43,44,45,46,47,53,91,92,119,154,157,],[20,83,86,87,88,89,90,97,20,20,97,20,20,]),'condicion':([21,34,35,36,106,],[48,76,76,76,76,]),'inicio':([22,],[51,]),'valor':([34,35,36,],[69,81,82,]),'booleano':([34,35,36,106,],[71,71,71,124,]),'refer':([34,35,36,110,],[75,75,75,128,]),'contPrint':([53,119,],[94,135,]),'tipo':([54,120,],[98,136,]),'contScan':([55,],[103,]),'typeData':([129,130,],[138,143,]),'else':([132,147,153,],[145,156,170,]),'incrementa':([134,],[148,]),'par':([150,189,],[159,191,]),'dato':([150,175,189,],[161,183,161,]),'contArray':([152,],[168,]),'mas':([183,191,],[188,192,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',6),
  ('instrucciones -> expresion','instrucciones',1,'p_instrucciones','analizadorSintactico.py',7),
  ('instrucciones -> condiciones','instrucciones',1,'p_instrucciones','analizadorSintactico.py',8),
  ('instrucciones -> sentenciaIf','instrucciones',1,'p_instrucciones','analizadorSintactico.py',9),
  ('instrucciones -> sentenciaFor','instrucciones',1,'p_instrucciones','analizadorSintactico.py',10),
  ('instrucciones -> print','instrucciones',1,'p_instrucciones','analizadorSintactico.py',11),
  ('instrucciones -> mapa','instrucciones',1,'p_instrucciones','analizadorSintactico.py',12),
  ('instrucciones -> puntero','instrucciones',1,'p_instrucciones','analizadorSintactico.py',13),
  ('instrucciones -> lectura','instrucciones',1,'p_instrucciones','analizadorSintactico.py',14),
  ('instrucciones -> array','instrucciones',1,'p_instrucciones','analizadorSintactico.py',15),
  ('instrucciones -> arrayAsig','instrucciones',1,'p_instrucciones','analizadorSintactico.py',16),
  ('asignacion -> VAR VARIABLE BOOL IGUAL booleano','asignacion',5,'p_asignacion','analizadorSintactico.py',20),
  ('asignacion -> VAR VARIABLE INT IGUAL expresion','asignacion',5,'p_asignacion','analizadorSintactico.py',21),
  ('asignacion -> VAR VARIABLE FLOAT IGUAL expresion','asignacion',5,'p_asignacion','analizadorSintactico.py',22),
  ('asignacion -> VAR VARIABLE STRING IGUAL CADENA','asignacion',5,'p_asignacion','analizadorSintactico.py',23),
  ('asignacion -> VAR VARIABLE puntero IGUAL refer','asignacion',5,'p_asignacion','analizadorSintactico.py',24),
  ('asignacion -> VAR VARIABLE puntero','asignacion',3,'p_asignacion','analizadorSintactico.py',25),
  ('asignacion -> VARIABLE DECLARADOR valor','asignacion',3,'p_asignacion','analizadorSintactico.py',26),
  ('asignacion -> VARIABLE IGUAL valor','asignacion',3,'p_asignacion','analizadorSintactico.py',27),
  ('asignacion -> derefer IGUAL valor','asignacion',3,'p_asignacion','analizadorSintactico.py',28),
  ('booleano -> condicion','booleano',1,'p_asignacion','analizadorSintactico.py',29),
  ('booleano -> TRUE','booleano',1,'p_asignacion','analizadorSintactico.py',30),
  ('booleano -> FALSE','booleano',1,'p_asignacion','analizadorSintactico.py',31),
  ('valor -> booleano','valor',1,'p_asignacion','analizadorSintactico.py',32),
  ('valor -> expresion','valor',1,'p_asignacion','analizadorSintactico.py',33),
  ('valor -> CADENA','valor',1,'p_asignacion','analizadorSintactico.py',34),
  ('valor -> VARIABLE','valor',1,'p_asignacion','analizadorSintactico.py',35),
  ('valor -> mapa','valor',1,'p_asignacion','analizadorSintactico.py',36),
  ('valor -> refer','valor',1,'p_asignacion','analizadorSintactico.py',37),
  ('sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT','sentenciaIf',7,'p_sentenciaIf','analizadorSintactico.py',41),
  ('sentenciaIf -> IF condicion LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT else','sentenciaIf',8,'p_sentenciaIf','analizadorSintactico.py',42),
  ('sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT','sentenciaIf',5,'p_sentenciaIf','analizadorSintactico.py',43),
  ('sentenciaIf -> IF condicion LLAVELEFT instrucciones LLAVERIGHT else','sentenciaIf',6,'p_sentenciaIf','analizadorSintactico.py',44),
  ('sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT','sentenciaIf',6,'p_sentenciaIf','analizadorSintactico.py',45),
  ('sentenciaIf -> IF condicion LLAVELEFT RETURN VARIABLE LLAVERIGHT else','sentenciaIf',7,'p_sentenciaIf','analizadorSintactico.py',46),
  ('else -> ELSE LLAVELEFT instrucciones LLAVERIGHT','else',4,'p_sentenciaIf','analizadorSintactico.py',47),
  ('else -> ELSE LLAVELEFT instrucciones RETURN VARIABLE LLAVERIGHT','else',6,'p_sentenciaIf','analizadorSintactico.py',48),
  ('else -> ELSE LLAVELEFT RETURN VARIABLE LLAVERIGHT','else',5,'p_sentenciaIf','analizadorSintactico.py',49),
  ('else -> ELSE sentenciaIf','else',2,'p_sentenciaIf','analizadorSintactico.py',50),
  ('mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT par LLAVERIGHT','mapa',8,'p_mapa','analizadorSintactico.py',54),
  ('mapa -> MAP CORCHLEFT tipo CORCHRIGHT tipo LLAVELEFT LLAVERIGHT','mapa',7,'p_mapa','analizadorSintactico.py',55),
  ('par -> dato DOSPUNTOS dato','par',3,'p_mapa','analizadorSintactico.py',56),
  ('par -> dato DOSPUNTOS dato mas','par',4,'p_mapa','analizadorSintactico.py',57),
  ('mas -> COMA par','mas',2,'p_mapa','analizadorSintactico.py',58),
  ('mas -> COMA par mas','mas',3,'p_mapa','analizadorSintactico.py',59),
  ('tipo -> BOOL','tipo',1,'p_mapa','analizadorSintactico.py',60),
  ('tipo -> INT','tipo',1,'p_mapa','analizadorSintactico.py',61),
  ('tipo -> FLOAT','tipo',1,'p_mapa','analizadorSintactico.py',62),
  ('tipo -> STRING','tipo',1,'p_mapa','analizadorSintactico.py',63),
  ('dato -> VARIABLE','dato',1,'p_mapa','analizadorSintactico.py',64),
  ('dato -> expresion','dato',1,'p_mapa','analizadorSintactico.py',65),
  ('dato -> CADENA','dato',1,'p_mapa','analizadorSintactico.py',66),
  ('dato -> TRUE','dato',1,'p_mapa','analizadorSintactico.py',67),
  ('dato -> FALSE','dato',1,'p_mapa','analizadorSintactico.py',68),
  ('puntero -> PRODUCTO BOOL','puntero',2,'p_puntero','analizadorSintactico.py',74),
  ('puntero -> PRODUCTO INT','puntero',2,'p_puntero','analizadorSintactico.py',75),
  ('puntero -> PRODUCTO FLOAT','puntero',2,'p_puntero','analizadorSintactico.py',76),
  ('puntero -> PRODUCTO STRING','puntero',2,'p_puntero','analizadorSintactico.py',77),
  ('refer -> AMPERSAND VARIABLE','refer',2,'p_puntero','analizadorSintactico.py',78),
  ('derefer -> PRODUCTO VARIABLE','derefer',2,'p_puntero','analizadorSintactico.py',79),
  ('sentenciaFor -> FOR inicio PUNTOCOMA condiciones PUNTOCOMA incrementa LLAVELEFT instrucciones LLAVERIGHT','sentenciaFor',9,'p_sentenciaFor','analizadorSintactico.py',83),
  ('inicio -> VARIABLE DECLARADOR ENTERO','inicio',3,'p_iniciofor','analizadorSintactico.py',87),
  ('incrementa -> VARIABLE INCREMENTO','incrementa',2,'p_incrementa','analizadorSintactico.py',91),
  ('typeData -> BOOL','typeData',1,'p_typeData','analizadorSintactico.py',95),
  ('typeData -> INT','typeData',1,'p_typeData','analizadorSintactico.py',96),
  ('typeData -> FLOAT','typeData',1,'p_typeData','analizadorSintactico.py',97),
  ('typeData -> STRING','typeData',1,'p_typeData','analizadorSintactico.py',98),
  ('array -> VARIABLE DECLARADOR CORCHLEFT ENTERO CORCHRIGHT typeData LLAVELEFT contArray LLAVERIGHT','array',9,'p_array','analizadorSintactico.py',102),
  ('arrayAsig -> VAR VARIABLE CORCHLEFT ENTERO CORCHRIGHT typeData','arrayAsig',6,'p_arrayAsig','analizadorSintactico.py',106),
  ('print -> IMPRIMIR PARLEFT contPrint PARRIGHT','print',4,'p_print','analizadorSintactico.py',110),
  ('contPrint -> CADENA','contPrint',1,'p_contenidoPrint','analizadorSintactico.py',113),
  ('contPrint -> VARIABLE','contPrint',1,'p_contenidoPrint','analizadorSintactico.py',114),
  ('contPrint -> factor','contPrint',1,'p_contenidoPrint','analizadorSintactico.py',115),
  ('contPrint -> contPrint COMA contPrint','contPrint',3,'p_contenidoPrint','analizadorSintactico.py',116),
  ('lectura -> SCAN PARLEFT contScan PARRIGHT','lectura',4,'p_lectura','analizadorSintactico.py',120),
  ('contScan -> AMPERSAND VARIABLE','contScan',2,'p_contenidoScan','analizadorSintactico.py',124),
  ('contScan -> COMILLA MODULO VARIABLE COMILLA COMA AMPERSAND VARIABLE','contScan',7,'p_contenidoScan','analizadorSintactico.py',125),
  ('contArray -> contArray COMA numericos','contArray',3,'p_contenidoArray','analizadorSintactico.py',130),
  ('expresion -> expresion SUMA numericos','expresion',3,'p_suma_expresion','analizadorSintactico.py',133),
  ('expresion -> expresion RESTA numericos','expresion',3,'p_resta_expresion','analizadorSintactico.py',136),
  ('expresion -> expresion PRODUCTO numericos','expresion',3,'p_producto_expresion','analizadorSintactico.py',139),
  ('expresion -> expresion DIVISION numericos','expresion',3,'p_div_expresion','analizadorSintactico.py',142),
  ('expresion -> expresion MODULO numericos','expresion',3,'p_modulo_expresion','analizadorSintactico.py',145),
  ('expresion -> term','expresion',1,'p_expression_term','analizadorSintactico.py',148),
  ('contArray -> term','contArray',1,'p_expression_term2','analizadorSintactico.py',152),
  ('term -> numericos','term',1,'p_term_factor','analizadorSintactico.py',156),
  ('factor -> numericos','factor',1,'p_factor_num','analizadorSintactico.py',160),
  ('factor -> VARIABLE','factor',1,'p_factor_var','analizadorSintactico.py',163),
  ('numericos -> ENTERO','numericos',1,'p_numericos','analizadorSintactico.py',166),
  ('numericos -> FLOTANTE','numericos',1,'p_numericos_float','analizadorSintactico.py',169),
  ('factor -> BOOL','factor',1,'p_factor_bool','analizadorSintactico.py',174),
  ('comparacion -> condiciones','comparacion',1,'p_comparacion','analizadorSintactico.py',177),
  ('comparacion -> NEGACION PARLEFT condiciones PARRIGHT','comparacion',4,'p_comparaciones_negado','analizadorSintactico.py',180),
  ('comparacion -> PARLEFT condiciones PARRIGHT','comparacion',3,'p_comparaciones_paren','analizadorSintactico.py',183),
  ('condiciones -> factor MAYORQUE factor','condiciones',3,'p_mayorque_compare','analizadorSintactico.py',187),
  ('condiciones -> factor MENORQUE factor','condiciones',3,'p_menorque_compare','analizadorSintactico.py',190),
  ('condiciones -> factor DIFERENTE factor','condiciones',3,'p_distinto_compare','analizadorSintactico.py',193),
  ('condiciones -> factor ESIGUAL factor','condiciones',3,'p_igualdad_compare','analizadorSintactico.py',196),
  ('condiciones -> factor MENORIGUAL factor','condiciones',3,'p_menoroigual_compare','analizadorSintactico.py',199),
  ('condiciones -> factor MAYORIGUAL factor','condiciones',3,'p_mayoroigual_compare','analizadorSintactico.py',202),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','analizadorSintactico.py',205),
  ('comparaciones -> comparacion anado comparaciones','comparaciones',3,'p_comparaciones_uno','analizadorSintactico.py',208),
  ('anado -> condicion','anado',1,'p_condicion_extra','analizadorSintactico.py',211),
  ('condicion -> AND','condicion',1,'p_condicion_and','analizadorSintactico.py',214),
  ('condicion -> OR','condicion',1,'p_condicion_or','analizadorSintactico.py',217),
]
